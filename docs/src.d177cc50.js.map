{"version":3,"sources":["node_modules/fp-ts/es6/function.js","node_modules/fp-ts/es6/Apply.js","node_modules/fp-ts/es6/Functor.js","node_modules/fp-ts/es6/Applicative.js","node_modules/fp-ts/es6/Chain.js","node_modules/fp-ts/es6/ChainRec.js","node_modules/fp-ts/es6/internal.js","node_modules/fp-ts/es6/FromEither.js","node_modules/fp-ts/es6/Separated.js","node_modules/fp-ts/es6/Witherable.js","node_modules/fp-ts/es6/Either.js","node_modules/fp-ts/es6/Eq.js","node_modules/fp-ts/es6/Ord.js","node_modules/fp-ts/es6/Magma.js","node_modules/fp-ts/es6/Semigroup.js","node_modules/fp-ts/es6/ReadonlyNonEmptyArray.js","node_modules/fp-ts/es6/NonEmptyArray.js","node_modules/fp-ts/es6/number.js","node_modules/fp-ts/es6/Zero.js","node_modules/fp-ts/es6/ReadonlyArray.js","node_modules/fp-ts/es6/Array.js","node_modules/fp-ts/es6/IO.js","node_modules/fp-ts/es6/Random.js","node_modules/fp-ts/es6/Predicate.js","node_modules/fp-ts/es6/Option.js","src/index.ts"],"names":["getBooleanAlgebra","B","meet","x","y","a","join","zero","one","implies","not","getSemigroup","S","concat","f","g","getMonoid","M","getSemigroupM","empty","getSemiring","add","mul","getRing","R","sub","apply","identity","unsafeCoerce","constant","constTrue","constFalse","constNull","constUndefined","undefined","constVoid","flip","b","flow","ab","bc","cd","de","ef","fg","gh","hi","ij","arguments","length","tuple","t","_i","increment","n","decrement","absurd","_","Error","tupled","untupled","pipe","ret","i","hole","SK","predicate","getEndomorphismMonoid","first","second","ap","F","G","fa","fab","map","gab","ga","apFirst","A","apSecond","apS","name","fb","_a","Object","assign","getApplySemigroup","curried","acc","combined","Array","tupleConstructors","c","d","e","getTupleConstructor","len","hasOwnProperty","sequenceT","args","fas","getRecordConstructor","keys","r","sequenceS","fr","flap","bindTo","getFunctorComposition","_map","fga","getApplicativeMonoid","of","getApplicativeComposition","_ap","fgab","chainFirst","chain","bind","ma","tailRec","startWith","_tag","left","right","__spreadArray","to","from","il","j","isNone","isSome","none","some","value","isLeft","isRight","singleton","isNonEmpty","as","head","tail","slice","emptyReadonlyArray","emptyRecord","has","prototype","fromReadonlyNonEmptyArray","fromOption","onNone","fromEither","fromPredicate","onFalse","fromOptionK","fromOptionF","chainOptionK","fromOptionKF","fromEitherK","chainEitherK","fromEitherKF","chainFirstEitherK","filterOrElse","separated","_mapLeft","mapLeft","_bimap","bimap","URI","Bifunctor","Functor","s","wiltDefault","T","C","traverseF","traverse","wa","separate","witherDefault","compact","filterE","W","witherF","wither","_chain","_reduce","reduce","_foldMap","foldMapM","foldMap","_reduceRight","reduceRight","_traverse","ta","_alt","that","alt","_extend","extend","_chainRec","getShow","SE","SA","show","getEq","EL","EA","equals","getCompactable","_E","getFilterable","filter","filterMap","ob","partition","p","partitionMap","getWitherable","F_","sequence","Traversable","wilt","getApplicativeValidation","getAltValidation","me","ea","Pointed","apW","Apply","Applicative","chainW","Chain","Monad","Foldable","altW","Alt","Extend","ChainRec","chainRec","throwError","MonadThrow","FromEither","matchW","onLeft","onRight","foldW","match","fold","getOrElseW","getOrElse","apFirstW","apSecondW","chainFirstW","flattenW","flatten","duplicate","filterOrElseW","swap","orElseW","orElse","fromNullable","tryCatch","onThrow","tryCatchK","fromNullableK","chainNullableK","toUnion","toError","String","elem","E","elemE_1","exists","Do","bindW","apSW","ApT","traverseReadonlyNonEmptyArrayWithIndex","out","e_1","push","traverseReadonlyArrayWithIndex","traverseArrayWithIndex","traverseArray","sequenceArray","parseJSON","onError","JSON","parse","stringifyJSON","u","stringify","either","getApplyMonoid","getValidationSemigroup","getValidationMonoid","MA","getValidation","fromEquals","struct","eqs","key","every","contramap_","contramap","eqStrict","Contravariant","getTupleEq","getStructEq","strictEqual","eq","eqBoolean","eqString","eqNumber","eqDate","valueOf","equalsDefault","compare","fromCompare","ords","reverse","O","ox","trivial","lt","gt","leq","geq","min","max","clamp","minO","maxO","low","between","ltO","gtO","getTupleOrd","getDualOrd","ord","strictOrd","ordBoolean","ordString","ordNumber","ordDate","date","filterFirst","filterSecond","endo","concatAll","Or","semigroups","k","call","intercalate","middle","last","semigroupVoid","getObjectSemigroup","getLastSemigroup","getFirstSemigroup","getTupleSemigroup","getStructSemigroup","getDualSemigroup","getJoinSemigroup","getMeetSemigroup","getIntercalateSemigroup","concatAllS","semigroupAll","semigroupAny","getFunctionSemigroup","semigroupString","semigroupSum","semigroupProduct","isOutOfBound","prependW","prepend","appendW","end","init","append","unsafeInsertAt","xs","splice","unsafeUpdateAt","uniq","_loop_1","o","rest_1","sortBy","sort","union","uniqE","rotate","m","Math","round","abs","splitAt","fromReadonlyArray","makeBy","floor","replicate","range","start","unprepend","unappend","fromArray","concatW","group","nea","groupBy","as_1","updateAt","modifyAt","zipWith","bs","cs","zip","unzip","prependAll","intersperse","rest","chainWithIndex","chop","next","_b","b_1","rest_2","chunksOf","_mapWithIndex","mapWithIndex","_reduceWithIndex","reduceWithIndex","_foldMapWithIndex","foldMapWithIndexM","foldMapWithIndex","_reduceRightWithIndex","reduceRightWithIndex","_traverseWithIndex","traverseWithIndexF","traverseWithIndex","extract","ys","getUnionSemigroup","unionE","FunctorWithIndex","FoldableWithIndex","TraversableWithIndex","Comonad","Se","matchLeft","matchRight","modifyHead","updateHead","modifyLast","updateLast","groupSort","sortO","groupO","filterWithIndex","uncons","unsnoc","cons","snoc","insertAt","prependToAll","readonlyNonEmptyArray","copy","RNEA","nonEmptyArray","isNumber","Eq","Ord","Bounded","top","Infinity","bottom","Show","MagmaSub","SemigroupSum","SemigroupProduct","MonoidSum","MonoidProduct","Field","degree","div","mod","guard","P","isEmpty","onEmpty","onNonEmpty","matchLeftW","foldLeft","matchRightW","foldRight","scanLeft","scanRight","size","lookup","takeLeft","takeRight","takeLeftWhile","spanLeftIndex","l","spanLeft","dropLeft","dropRight","dropLeftWhile","findIndex","findFirst","findFirstMap","findLast","findLastMap","findLastIndex","deleteAt","unsafeDeleteAt","rights","lefts","fc","element","comprehension","input","go","scope","unionE_1","intersection","elemE","intersectionE_1","difference","differenceE_1","_filter","_filterMap","_partition","_partitionMap","_partitionWithIndex","predicateWithIndex","partitionWithIndex","_partitionMapWithIndex","partitionMapWithIndex","_filterMapWithIndex","filterMapWithIndex","_filterWithIndex","_chainRecDepthFirst","chainRecDepthFirst","_chainRecBreadthFirst","chainRecBreadthFirst","fa_1","optionB","fbs","_witherF","_wither","_wiltF","_wilt","unfold","bb","mt","getOrd","aLen","bLen","ordering","N","getUnionMonoid","getIntersectionSemigroup","intersectionE","getDifferenceMagma","differenceE","Unfoldable","Zero","Alternative","Compactable","Filterable","FilterableWithIndex","todo","shift","unshift","ChainRecDepthFirst","initial","forEach","v","initial_1","ChainRecBreadthFirst","Witherable","toArray","intercalateM","readonlyArray","NEA","RA","array","mab","fromIO","MonadIO","FromIO","io","random","randomInt","high","randomRange","randomBool","randomElem","getSemigroupAny","or","getMonoidAny","getSemigroupAll","and","getMonoidAll","getLeft","getRight","defaultSeparated","onSome","toNullable","toUndefined","o_1","getRefinement","getOption","mapNullable","option","getFirstMonoid","getLastMonoid"],"mappings":"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","file":"src.d177cc50.js","sourceRoot":"..","sourcesContent":["// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var getBooleanAlgebra = function (B) { return function () { return ({\n    meet: function (x, y) { return function (a) { return B.meet(x(a), y(a)); }; },\n    join: function (x, y) { return function (a) { return B.join(x(a), y(a)); }; },\n    zero: function () { return B.zero; },\n    one: function () { return B.one; },\n    implies: function (x, y) { return function (a) { return B.implies(x(a), y(a)); }; },\n    not: function (x) { return function (a) { return B.not(x(a)); }; }\n}); }; };\n/**\n * Unary functions form a semigroup as long as you can provide a semigroup for the codomain.\n *\n * @example\n * import { Predicate, getSemigroup } from 'fp-ts/function'\n * import * as B from 'fp-ts/boolean'\n *\n * const f: Predicate<number> = (n) => n <= 2\n * const g: Predicate<number> = (n) => n >= 0\n *\n * const S1 = getSemigroup(B.SemigroupAll)<number>()\n *\n * assert.deepStrictEqual(S1.concat(f, g)(1), true)\n * assert.deepStrictEqual(S1.concat(f, g)(3), false)\n *\n * const S2 = getSemigroup(B.SemigroupAny)<number>()\n *\n * assert.deepStrictEqual(S2.concat(f, g)(1), true)\n * assert.deepStrictEqual(S2.concat(f, g)(3), true)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var getSemigroup = function (S) { return function () { return ({\n    concat: function (f, g) { return function (a) { return S.concat(f(a), g(a)); }; }\n}); }; };\n/**\n * Unary functions form a monoid as long as you can provide a monoid for the codomain.\n *\n * @example\n * import { Predicate } from 'fp-ts/Predicate'\n * import { getMonoid } from 'fp-ts/function'\n * import * as B from 'fp-ts/boolean'\n *\n * const f: Predicate<number> = (n) => n <= 2\n * const g: Predicate<number> = (n) => n >= 0\n *\n * const M1 = getMonoid(B.MonoidAll)<number>()\n *\n * assert.deepStrictEqual(M1.concat(f, g)(1), true)\n * assert.deepStrictEqual(M1.concat(f, g)(3), false)\n *\n * const M2 = getMonoid(B.MonoidAny)<number>()\n *\n * assert.deepStrictEqual(M2.concat(f, g)(1), true)\n * assert.deepStrictEqual(M2.concat(f, g)(3), true)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var getMonoid = function (M) {\n    var getSemigroupM = getSemigroup(M);\n    return function () { return ({\n        concat: getSemigroupM().concat,\n        empty: function () { return M.empty; }\n    }); };\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var getSemiring = function (S) { return ({\n    add: function (f, g) { return function (x) { return S.add(f(x), g(x)); }; },\n    zero: function () { return S.zero; },\n    mul: function (f, g) { return function (x) { return S.mul(f(x), g(x)); }; },\n    one: function () { return S.one; }\n}); };\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var getRing = function (R) {\n    var S = getSemiring(R);\n    return {\n        add: S.add,\n        mul: S.mul,\n        one: S.one,\n        zero: S.zero,\n        sub: function (f, g) { return function (x) { return R.sub(f(x), g(x)); }; }\n    };\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nexport var apply = function (a) { return function (f) { return f(a); }; };\n/**\n * @since 2.0.0\n */\nexport function identity(a) {\n    return a;\n}\n/**\n * @since 2.0.0\n */\nexport var unsafeCoerce = identity;\n/**\n * @since 2.0.0\n */\nexport function constant(a) {\n    return function () { return a; };\n}\n/**\n * A thunk that returns always `true`.\n *\n * @since 2.0.0\n */\nexport var constTrue = \n/*#__PURE__*/\nconstant(true);\n/**\n * A thunk that returns always `false`.\n *\n * @since 2.0.0\n */\nexport var constFalse = \n/*#__PURE__*/\nconstant(false);\n/**\n * A thunk that returns always `null`.\n *\n * @since 2.0.0\n */\nexport var constNull = \n/*#__PURE__*/\nconstant(null);\n/**\n * A thunk that returns always `undefined`.\n *\n * @since 2.0.0\n */\nexport var constUndefined = \n/*#__PURE__*/\nconstant(undefined);\n/**\n * A thunk that returns always `void`.\n *\n * @since 2.0.0\n */\nexport var constVoid = constUndefined;\n/**\n * Flips the order of the arguments of a function of two arguments.\n *\n * @since 2.0.0\n */\nexport function flip(f) {\n    return function (b, a) { return f(a, b); };\n}\nexport function flow(ab, bc, cd, de, ef, fg, gh, hi, ij) {\n    switch (arguments.length) {\n        case 1:\n            return ab;\n        case 2:\n            return function () {\n                return bc(ab.apply(this, arguments));\n            };\n        case 3:\n            return function () {\n                return cd(bc(ab.apply(this, arguments)));\n            };\n        case 4:\n            return function () {\n                return de(cd(bc(ab.apply(this, arguments))));\n            };\n        case 5:\n            return function () {\n                return ef(de(cd(bc(ab.apply(this, arguments)))));\n            };\n        case 6:\n            return function () {\n                return fg(ef(de(cd(bc(ab.apply(this, arguments))))));\n            };\n        case 7:\n            return function () {\n                return gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))));\n            };\n        case 8:\n            return function () {\n                return hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments))))))));\n            };\n        case 9:\n            return function () {\n                return ij(hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))))));\n            };\n    }\n    return;\n}\n/**\n * @since 2.0.0\n */\nexport function tuple() {\n    var t = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        t[_i] = arguments[_i];\n    }\n    return t;\n}\n/**\n * @since 2.0.0\n */\nexport function increment(n) {\n    return n + 1;\n}\n/**\n * @since 2.0.0\n */\nexport function decrement(n) {\n    return n - 1;\n}\n/**\n * @since 2.0.0\n */\nexport function absurd(_) {\n    throw new Error('Called `absurd` function which should be uncallable');\n}\n/**\n * Creates a tupled version of this function: instead of `n` arguments, it accepts a single tuple argument.\n *\n * @example\n * import { tupled } from 'fp-ts/function'\n *\n * const add = tupled((x: number, y: number): number => x + y)\n *\n * assert.strictEqual(add([1, 2]), 3)\n *\n * @since 2.4.0\n */\nexport function tupled(f) {\n    return function (a) { return f.apply(void 0, a); };\n}\n/**\n * Inverse function of `tupled`\n *\n * @since 2.4.0\n */\nexport function untupled(f) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return f(a);\n    };\n}\nexport function pipe(a, ab, bc, cd, de, ef, fg, gh, hi) {\n    switch (arguments.length) {\n        case 1:\n            return a;\n        case 2:\n            return ab(a);\n        case 3:\n            return bc(ab(a));\n        case 4:\n            return cd(bc(ab(a)));\n        case 5:\n            return de(cd(bc(ab(a))));\n        case 6:\n            return ef(de(cd(bc(ab(a)))));\n        case 7:\n            return fg(ef(de(cd(bc(ab(a))))));\n        case 8:\n            return gh(fg(ef(de(cd(bc(ab(a)))))));\n        case 9:\n            return hi(gh(fg(ef(de(cd(bc(ab(a))))))));\n        default:\n            var ret = arguments[0];\n            for (var i = 1; i < arguments.length; i++) {\n                ret = arguments[i](ret);\n            }\n            return ret;\n    }\n}\n/**\n * Type hole simulation\n *\n * @since 2.7.0\n */\nexport var hole = absurd;\n/**\n * @since 2.11.0\n */\nexport var SK = function (_, b) { return b; };\n/**\n * Use `Predicate` module instead.\n *\n * @since 2.0.0\n * @deprecated\n */\nexport function not(predicate) {\n    return function (a) { return !predicate(a); };\n}\n/**\n * Use `Endomorphism` module instead.\n *\n * @category instances\n * @since 2.10.0\n * @deprecated\n */\nexport var getEndomorphismMonoid = function () { return ({\n    concat: function (first, second) { return flow(first, second); },\n    empty: identity\n}); };\n","import { tuple } from './function';\nexport function ap(F, G) {\n    return function (fa) { return function (fab) {\n        return F.ap(F.map(fab, function (gab) { return function (ga) { return G.ap(gab, ga); }; }), fa);\n    }; };\n}\nexport function apFirst(A) {\n    return function (second) { return function (first) {\n        return A.ap(A.map(first, function (a) { return function () { return a; }; }), second);\n    }; };\n}\nexport function apSecond(A) {\n    return function (second) { return function (first) {\n        return A.ap(A.map(first, function () { return function (b) { return b; }; }), second);\n    }; };\n}\nexport function apS(F) {\n    return function (name, fb) { return function (fa) {\n        return F.ap(F.map(fa, function (a) { return function (b) {\n            var _a;\n            return Object.assign({}, a, (_a = {}, _a[name] = b, _a));\n        }; }), fb);\n    }; };\n}\nexport function getApplySemigroup(F) {\n    return function (S) { return ({\n        concat: function (first, second) {\n            return F.ap(F.map(first, function (x) { return function (y) { return S.concat(x, y); }; }), second);\n        }\n    }); };\n}\nfunction curried(f, n, acc) {\n    return function (x) {\n        var combined = Array(acc.length + 1);\n        for (var i = 0; i < acc.length; i++) {\n            combined[i] = acc[i];\n        }\n        combined[acc.length] = x;\n        return n === 0 ? f.apply(null, combined) : curried(f, n - 1, combined);\n    };\n}\nvar tupleConstructors = {\n    1: function (a) { return [a]; },\n    2: function (a) { return function (b) { return [a, b]; }; },\n    3: function (a) { return function (b) { return function (c) { return [a, b, c]; }; }; },\n    4: function (a) { return function (b) { return function (c) { return function (d) { return [a, b, c, d]; }; }; }; },\n    5: function (a) { return function (b) { return function (c) { return function (d) { return function (e) { return [a, b, c, d, e]; }; }; }; }; }\n};\nfunction getTupleConstructor(len) {\n    if (!tupleConstructors.hasOwnProperty(len)) {\n        tupleConstructors[len] = curried(tuple, len - 1, []);\n    }\n    return tupleConstructors[len];\n}\nexport function sequenceT(F) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var len = args.length;\n        var f = getTupleConstructor(len);\n        var fas = F.map(args[0], f);\n        for (var i = 1; i < len; i++) {\n            fas = F.ap(fas, args[i]);\n        }\n        return fas;\n    };\n}\nfunction getRecordConstructor(keys) {\n    var len = keys.length;\n    switch (len) {\n        case 1:\n            return function (a) {\n                var _a;\n                return (_a = {}, _a[keys[0]] = a, _a);\n            };\n        case 2:\n            return function (a) { return function (b) {\n                var _a;\n                return (_a = {}, _a[keys[0]] = a, _a[keys[1]] = b, _a);\n            }; };\n        case 3:\n            return function (a) { return function (b) { return function (c) {\n                var _a;\n                return (_a = {}, _a[keys[0]] = a, _a[keys[1]] = b, _a[keys[2]] = c, _a);\n            }; }; };\n        case 4:\n            return function (a) { return function (b) { return function (c) { return function (d) {\n                var _a;\n                return (_a = {},\n                    _a[keys[0]] = a,\n                    _a[keys[1]] = b,\n                    _a[keys[2]] = c,\n                    _a[keys[3]] = d,\n                    _a);\n            }; }; }; };\n        case 5:\n            return function (a) { return function (b) { return function (c) { return function (d) { return function (e) {\n                var _a;\n                return (_a = {},\n                    _a[keys[0]] = a,\n                    _a[keys[1]] = b,\n                    _a[keys[2]] = c,\n                    _a[keys[3]] = d,\n                    _a[keys[4]] = e,\n                    _a);\n            }; }; }; }; };\n        default:\n            return curried(function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var r = {};\n                for (var i = 0; i < len; i++) {\n                    r[keys[i]] = args[i];\n                }\n                return r;\n            }, len - 1, []);\n    }\n}\nexport function sequenceS(F) {\n    return function (r) {\n        var keys = Object.keys(r);\n        var len = keys.length;\n        var f = getRecordConstructor(keys);\n        var fr = F.map(r[keys[0]], f);\n        for (var i = 1; i < len; i++) {\n            fr = F.ap(fr, r[keys[i]]);\n        }\n        return fr;\n    };\n}\n","/**\n * A `Functor` is a type constructor which supports a mapping operation `map`.\n *\n * `map` can be used to turn functions `a -> b` into functions `f a -> f b` whose argument and return types use the type\n * constructor `f` to represent some computational context.\n *\n * Instances must satisfy the following laws:\n *\n * 1. Identity: `F.map(fa, a => a) <-> fa`\n * 2. Composition: `F.map(fa, a => bc(ab(a))) <-> F.map(F.map(fa, ab), bc)`\n *\n * @since 2.0.0\n */\nimport { pipe } from './function';\nexport function map(F, G) {\n    return function (f) { return function (fa) { return F.map(fa, function (ga) { return G.map(ga, f); }); }; };\n}\nexport function flap(F) {\n    return function (a) { return function (fab) { return F.map(fab, function (f) { return f(a); }); }; };\n}\nexport function bindTo(F) {\n    return function (name) { return function (fa) { return F.map(fa, function (a) {\n        var _a;\n        return (_a = {}, _a[name] = a, _a);\n    }); }; };\n}\n/** @deprecated */\nexport function getFunctorComposition(F, G) {\n    var _map = map(F, G);\n    return {\n        map: function (fga, f) { return pipe(fga, _map(f)); }\n    };\n}\n","/**\n * The `Applicative` type class extends the `Apply` type class with a `of` function, which can be used to create values\n * of type `f a` from values of type `a`.\n *\n * Where `Apply` provides the ability to lift functions of two or more arguments to functions whose arguments are\n * wrapped using `f`, and `Functor` provides the ability to lift functions of one argument, `pure` can be seen as the\n * function which lifts functions of _zero_ arguments. That is, `Applicative` functors support a lifting operation for\n * any number of function arguments.\n *\n * Instances must satisfy the following laws in addition to the `Apply` laws:\n *\n * 1. Identity: `A.ap(A.of(a => a), fa) <-> fa`\n * 2. Homomorphism: `A.ap(A.of(ab), A.of(a)) <-> A.of(ab(a))`\n * 3. Interchange: `A.ap(fab, A.of(a)) <-> A.ap(A.of(ab => ab(a)), fab)`\n *\n * Note. `Functor`'s `map` can be derived: `A.map(x, f) = A.ap(A.of(f), x)`\n *\n * @since 2.0.0\n */\nimport { ap, getApplySemigroup } from './Apply';\nimport { pipe } from './function';\nimport { getFunctorComposition } from './Functor';\nexport function getApplicativeMonoid(F) {\n    var f = getApplySemigroup(F);\n    return function (M) { return ({\n        concat: f(M).concat,\n        empty: F.of(M.empty)\n    }); };\n}\n/** @deprecated */\nexport function getApplicativeComposition(F, G) {\n    var map = getFunctorComposition(F, G).map;\n    var _ap = ap(F, G);\n    return {\n        map: map,\n        of: function (a) { return F.of(G.of(a)); },\n        ap: function (fgab, fga) { return pipe(fgab, _ap(fga)); }\n    };\n}\n","export function chainFirst(M) {\n    return function (f) { return function (first) { return M.chain(first, function (a) { return M.map(f(a), function () { return a; }); }); }; };\n}\nexport function bind(M) {\n    return function (name, f) { return function (ma) { return M.chain(ma, function (a) { return M.map(f(a), function (b) {\n        var _a;\n        return Object.assign({}, a, (_a = {}, _a[name] = b, _a));\n    }); }); }; };\n}\n","/**\n * @since 2.0.0\n */\nexport var tailRec = function (startWith, f) {\n    var ab = f(startWith);\n    while (ab._tag === 'Left') {\n        ab = f(ab.left);\n    }\n    return ab.right;\n};\n","var __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\n// -------------------------------------------------------------------------------------\n// Option\n// -------------------------------------------------------------------------------------\n/** @internal */\nexport var isNone = function (fa) { return fa._tag === 'None'; };\n/** @internal */\nexport var isSome = function (fa) { return fa._tag === 'Some'; };\n/** @internal */\nexport var none = { _tag: 'None' };\n/** @internal */\nexport var some = function (a) { return ({ _tag: 'Some', value: a }); };\n// -------------------------------------------------------------------------------------\n// Either\n// -------------------------------------------------------------------------------------\n/** @internal */\nexport var isLeft = function (ma) { return ma._tag === 'Left'; };\n/** @internal */\nexport var isRight = function (ma) { return ma._tag === 'Right'; };\n/** @internal */\nexport var left = function (e) { return ({ _tag: 'Left', left: e }); };\n/** @internal */\nexport var right = function (a) { return ({ _tag: 'Right', right: a }); };\n// -------------------------------------------------------------------------------------\n// ReadonlyNonEmptyArray\n// -------------------------------------------------------------------------------------\n/** @internal */\nexport var singleton = function (a) { return [a]; };\n/** @internal */\nexport var isNonEmpty = function (as) { return as.length > 0; };\n/** @internal */\nexport var head = function (as) { return as[0]; };\n/** @internal */\nexport var tail = function (as) { return as.slice(1); };\n// -------------------------------------------------------------------------------------\n// empty\n// -------------------------------------------------------------------------------------\n/** @internal */\nexport var emptyReadonlyArray = [];\n/** @internal */\nexport var emptyRecord = {};\n// -------------------------------------------------------------------------------------\n// Record\n// -------------------------------------------------------------------------------------\n/** @internal */\nexport var has = Object.prototype.hasOwnProperty;\n// -------------------------------------------------------------------------------------\n// NonEmptyArray\n// -------------------------------------------------------------------------------------\n/** @internal */\nexport var fromReadonlyNonEmptyArray = function (as) { return __spreadArray([as[0]], as.slice(1)); };\n","/**\n * The `FromEither` type class represents those data types which support errors.\n *\n * @since 2.10.0\n */\nimport { chainFirst } from './Chain';\nimport { flow } from './function';\nimport * as _ from './internal';\nexport function fromOption(F) {\n    return function (onNone) { return function (ma) { return F.fromEither(_.isNone(ma) ? _.left(onNone()) : _.right(ma.value)); }; };\n}\nexport function fromPredicate(F) {\n    return function (predicate, onFalse) { return function (a) {\n        return F.fromEither(predicate(a) ? _.right(a) : _.left(onFalse(a)));\n    }; };\n}\nexport function fromOptionK(F) {\n    var fromOptionF = fromOption(F);\n    return function (onNone) {\n        var from = fromOptionF(onNone);\n        return function (f) { return flow(f, from); };\n    };\n}\nexport function chainOptionK(F, M) {\n    var fromOptionKF = fromOptionK(F);\n    return function (onNone) {\n        var from = fromOptionKF(onNone);\n        return function (f) { return function (ma) { return M.chain(ma, from(f)); }; };\n    };\n}\nexport function fromEitherK(F) {\n    return function (f) { return flow(f, F.fromEither); };\n}\nexport function chainEitherK(F, M) {\n    var fromEitherKF = fromEitherK(F);\n    return function (f) { return function (ma) { return M.chain(ma, fromEitherKF(f)); }; };\n}\nexport function chainFirstEitherK(F, M) {\n    return flow(fromEitherK(F), chainFirst(M));\n}\nexport function filterOrElse(F, M) {\n    return function (predicate, onFalse) { return function (ma) {\n        return M.chain(ma, function (a) { return F.fromEither(predicate(a) ? _.right(a) : _.left(onFalse(a))); });\n    }; };\n}\n","/**\n * ```ts\n * interface Separated<E, A> {\n *    readonly left: E\n *    readonly right: A\n * }\n * ```\n *\n * Represents a result of separating a whole into two parts.\n *\n * @since 2.10.0\n */\nimport { pipe } from './function';\nimport { flap as flap_ } from './Functor';\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.10.0\n */\nexport var separated = function (left, right) { return ({ left: left, right: right }); };\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return pipe(fa, map(f)); };\nvar _mapLeft = function (fa, f) { return pipe(fa, mapLeft(f)); };\nvar _bimap = function (fa, g, f) { return pipe(fa, bimap(g, f)); };\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.10.0\n */\nexport var map = function (f) { return function (fa) {\n    return separated(left(fa), f(right(fa)));\n}; };\n/**\n * Map a function over the first type argument of a bifunctor.\n *\n * @category Bifunctor\n * @since 2.10.0\n */\nexport var mapLeft = function (f) { return function (fa) {\n    return separated(f(left(fa)), right(fa));\n}; };\n/**\n * Map a pair of functions over the two type arguments of the bifunctor.\n *\n * @category Bifunctor\n * @since 2.10.0\n */\nexport var bimap = function (f, g) { return function (fa) {\n    return separated(f(left(fa)), g(right(fa)));\n}; };\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var URI = 'Separated';\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Bifunctor = {\n    URI: URI,\n    mapLeft: _mapLeft,\n    bimap: _bimap\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Functor = {\n    URI: URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var flap = \n/*#__PURE__*/\nflap_(Functor);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.10.0\n */\nexport var left = function (s) { return s.left; };\n/**\n * @since 2.10.0\n */\nexport var right = function (s) { return s.right; };\n","import * as _ from './internal';\nexport function wiltDefault(T, C) {\n    return function (F) {\n        var traverseF = T.traverse(F);\n        return function (wa, f) { return F.map(traverseF(wa, f), C.separate); };\n    };\n}\nexport function witherDefault(T, C) {\n    return function (F) {\n        var traverseF = T.traverse(F);\n        return function (wa, f) { return F.map(traverseF(wa, f), C.compact); };\n    };\n}\nexport function filterE(W) {\n    return function (F) {\n        var witherF = W.wither(F);\n        return function (predicate) { return function (ga) { return witherF(ga, function (a) { return F.map(predicate(a), function (b) { return (b ? _.some(a) : _.none); }); }); }; };\n    };\n}\n","import { getApplicativeMonoid } from './Applicative';\nimport { apFirst as apFirst_, apS as apS_, apSecond as apSecond_, getApplySemigroup as getApplySemigroup_ } from './Apply';\nimport { bind as bind_, chainFirst as chainFirst_ } from './Chain';\nimport { tailRec } from './ChainRec';\nimport { chainOptionK as chainOptionK_, filterOrElse as filterOrElse_, fromOption as fromOption_, fromOptionK as fromOptionK_, fromPredicate as fromPredicate_ } from './FromEither';\nimport { flow, identity, pipe } from './function';\nimport { bindTo as bindTo_, flap as flap_ } from './Functor';\nimport * as _ from './internal';\nimport { separated } from './Separated';\nimport { wiltDefault, witherDefault } from './Witherable';\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Constructs a new `Either` holding a `Left` value. This usually represents a failure, due to the right-bias of this\n * structure.\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var left = _.left;\n/**\n * Constructs a new `Either` holding a `Right` value. This usually represents a successful value due to the right bias\n * of this structure.\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var right = _.right;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return pipe(fa, map(f)); };\nvar _ap = function (fab, fa) { return pipe(fab, ap(fa)); };\n/* istanbul ignore next */\nvar _chain = function (ma, f) { return pipe(ma, chain(f)); };\n/* istanbul ignore next */\nvar _reduce = function (fa, b, f) { return pipe(fa, reduce(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) { return function (fa, f) {\n    var foldMapM = foldMap(M);\n    return pipe(fa, foldMapM(f));\n}; };\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return pipe(fa, reduceRight(b, f)); };\nvar _traverse = function (F) {\n    var traverseF = traverse(F);\n    return function (ta, f) { return pipe(ta, traverseF(f)); };\n};\nvar _bimap = function (fa, f, g) { return pipe(fa, bimap(f, g)); };\nvar _mapLeft = function (fa, f) { return pipe(fa, mapLeft(f)); };\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return pipe(fa, alt(that)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return pipe(wa, extend(f)); };\nvar _chainRec = function (a, f) {\n    return tailRec(f(a), function (e) {\n        return isLeft(e) ? right(left(e.left)) : isLeft(e.right) ? left(f(e.right.left)) : right(right(e.right.right));\n    });\n};\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var URI = 'Either';\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var getShow = function (SE, SA) { return ({\n    show: function (ma) { return (isLeft(ma) ? \"left(\" + SE.show(ma.left) + \")\" : \"right(\" + SA.show(ma.right) + \")\"); }\n}); };\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var getEq = function (EL, EA) { return ({\n    equals: function (x, y) {\n        return x === y || (isLeft(x) ? isLeft(y) && EL.equals(x.left, y.left) : isRight(y) && EA.equals(x.right, y.right));\n    }\n}); };\n/**\n * Semigroup returning the left-most non-`Left` value. If both operands are `Right`s then the inner values are\n * concatenated using the provided `Semigroup`\n *\n * @example\n * import { getSemigroup, left, right } from 'fp-ts/Either'\n * import { SemigroupSum } from 'fp-ts/number'\n *\n * const S = getSemigroup<string, number>(SemigroupSum)\n * assert.deepStrictEqual(S.concat(left('a'), left('b')), left('a'))\n * assert.deepStrictEqual(S.concat(left('a'), right(2)), right(2))\n * assert.deepStrictEqual(S.concat(right(1), left('b')), right(1))\n * assert.deepStrictEqual(S.concat(right(1), right(2)), right(3))\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getSemigroup = function (S) { return ({\n    concat: function (x, y) { return (isLeft(y) ? x : isLeft(x) ? y : right(S.concat(x.right, y.right))); }\n}); };\n/**\n * Builds a `Compactable` instance for `Either` given `Monoid` for the left side.\n *\n * @category instances\n * @since 2.10.0\n */\nexport var getCompactable = function (M) {\n    var empty = left(M.empty);\n    return {\n        URI: URI,\n        _E: undefined,\n        compact: function (ma) { return (isLeft(ma) ? ma : ma.right._tag === 'None' ? empty : right(ma.right.value)); },\n        separate: function (ma) {\n            return isLeft(ma)\n                ? separated(ma, ma)\n                : isLeft(ma.right)\n                    ? separated(right(ma.right.left), empty)\n                    : separated(empty, right(ma.right.right));\n        }\n    };\n};\n/**\n * Builds a `Filterable` instance for `Either` given `Monoid` for the left side\n *\n * @category instances\n * @since 2.10.0\n */\nexport var getFilterable = function (M) {\n    var empty = left(M.empty);\n    var _a = getCompactable(M), compact = _a.compact, separate = _a.separate;\n    var filter = function (ma, predicate) {\n        return isLeft(ma) ? ma : predicate(ma.right) ? ma : empty;\n    };\n    var partition = function (ma, p) {\n        return isLeft(ma)\n            ? separated(ma, ma)\n            : p(ma.right)\n                ? separated(empty, right(ma.right))\n                : separated(right(ma.right), empty);\n    };\n    return {\n        URI: URI,\n        _E: undefined,\n        map: _map,\n        compact: compact,\n        separate: separate,\n        filter: filter,\n        filterMap: function (ma, f) {\n            if (isLeft(ma)) {\n                return ma;\n            }\n            var ob = f(ma.right);\n            return ob._tag === 'None' ? empty : right(ob.value);\n        },\n        partition: partition,\n        partitionMap: function (ma, f) {\n            if (isLeft(ma)) {\n                return separated(ma, ma);\n            }\n            var e = f(ma.right);\n            return isLeft(e) ? separated(right(e.left), empty) : separated(empty, right(e.right));\n        }\n    };\n};\n/**\n * Builds `Witherable` instance for `Either` given `Monoid` for the left side\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getWitherable = function (M) {\n    var F_ = getFilterable(M);\n    var C = getCompactable(M);\n    return {\n        URI: URI,\n        _E: undefined,\n        map: _map,\n        compact: F_.compact,\n        separate: F_.separate,\n        filter: F_.filter,\n        filterMap: F_.filterMap,\n        partition: F_.partition,\n        partitionMap: F_.partitionMap,\n        traverse: _traverse,\n        sequence: sequence,\n        reduce: _reduce,\n        foldMap: _foldMap,\n        reduceRight: _reduceRight,\n        wither: witherDefault(Traversable, C),\n        wilt: wiltDefault(Traversable, C)\n    };\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var getApplicativeValidation = function (SE) { return ({\n    URI: URI,\n    _E: undefined,\n    map: _map,\n    ap: function (fab, fa) {\n        return isLeft(fab)\n            ? isLeft(fa)\n                ? left(SE.concat(fab.left, fa.left))\n                : fab\n            : isLeft(fa)\n                ? fa\n                : right(fab.right(fa.right));\n    },\n    of: of\n}); };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var getAltValidation = function (SE) { return ({\n    URI: URI,\n    _E: undefined,\n    map: _map,\n    alt: function (me, that) {\n        if (isRight(me)) {\n            return me;\n        }\n        var ea = that();\n        return isLeft(ea) ? left(SE.concat(me.left, ea.left)) : ea;\n    }\n}); };\n/**\n * @category instance operations\n * @since 2.0.0\n */\nexport var map = function (f) { return function (fa) {\n    return isLeft(fa) ? fa : right(f(fa.right));\n}; };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: _map\n};\n/**\n * @category instance operations\n * @since 2.7.0\n */\nexport var of = right;\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Pointed = {\n    URI: URI,\n    of: of\n};\n/**\n * Less strict version of [`ap`](#ap).\n *\n * @category instance operations\n * @since 2.8.0\n */\nexport var apW = function (fa) { return function (fab) { return (isLeft(fab) ? fab : isLeft(fa) ? fa : right(fab.right(fa.right))); }; };\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category instance operations\n * @since 2.0.0\n */\nexport var ap = apW;\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Apply = {\n    URI: URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of\n};\n/**\n * Less strict version of [`chain`](#chain).\n *\n * @category instance operations\n * @since 2.6.0\n */\nexport var chainW = function (f) { return function (ma) {\n    return isLeft(ma) ? ma : f(ma.right);\n}; };\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category instance operations\n * @since 2.0.0\n */\nexport var chain = chainW;\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Chain = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain\n};\n/**\n * Left-associative fold of a structure.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n *\n * const startWith = 'prefix'\n * const concat = (a: string, b: string) => `${a}:${b}`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.reduce(startWith, concat)),\n *   'prefix:a'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.reduce(startWith, concat)),\n *   'prefix'\n * )\n *\n * @category instance operations\n * @since 2.0.0\n */\nexport var reduce = function (b, f) { return function (fa) {\n    return isLeft(fa) ? b : f(b, fa.right);\n}; };\n/**\n * Map each element of the structure to a monoid, and combine the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n * import * as S from 'fp-ts/string'\n *\n * const yell = (a: string) => `${a}!`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.foldMap(S.Monoid)(yell)),\n *   'a!'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.foldMap(S.Monoid)(yell)),\n *   S.Monoid.empty\n * )\n *\n * @category instance operations\n * @since 2.0.0\n */\nexport var foldMap = function (M) { return function (f) { return function (fa) {\n    return isLeft(fa) ? M.empty : f(fa.right);\n}; }; };\n/**\n * Right-associative fold of a structure.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n *\n * const startWith = 'postfix'\n * const concat = (a: string, b: string) => `${a}:${b}`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.reduceRight(startWith, concat)),\n *   'a:postfix'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.reduceRight(startWith, concat)),\n *   'postfix'\n * )\n *\n * @category instance operations\n * @since 2.0.0\n */\nexport var reduceRight = function (b, f) { return function (fa) {\n    return isLeft(fa) ? b : f(fa.right, b);\n}; };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * Map each element of a structure to an action, evaluate these actions from left to right, and collect the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as E from 'fp-ts/Either'\n * import * as O from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(['a']), E.traverse(O.Applicative)(RA.head)),\n *   O.some(E.right('a'))\n *  )\n *\n * assert.deepStrictEqual(\n *   pipe(E.right([]), E.traverse(O.Applicative)(RA.head)),\n *   O.none\n * )\n *\n * @category instance operations\n * @since 2.6.3\n */\nexport var traverse = function (F) { return function (f) { return function (ta) { return (isLeft(ta) ? F.of(left(ta.left)) : F.map(f(ta.right), right)); }; }; };\n/**\n * Evaluate each monadic action in the structure from left to right, and collect the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n * import * as O from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(O.some('a')), E.sequence(O.Applicative)),\n *   O.some(E.right('a'))\n *  )\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(O.none), E.sequence(O.Applicative)),\n *   O.none\n * )\n *\n * @category instance operations\n * @since 2.6.3\n */\nexport var sequence = function (F) { return function (ma) {\n    return isLeft(ma) ? F.of(left(ma.left)) : F.map(ma.right, right);\n}; };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n    URI: URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence\n};\n/**\n * Map a pair of functions over the two type arguments of the bifunctor.\n *\n * @category instance operations\n * @since 2.0.0\n */\nexport var bimap = function (f, g) { return function (fa) { return (isLeft(fa) ? left(f(fa.left)) : right(g(fa.right))); }; };\n/**\n * Map a function over the first type argument of a bifunctor.\n *\n * @category instance operations\n * @since 2.0.0\n */\nexport var mapLeft = function (f) { return function (fa) {\n    return isLeft(fa) ? left(f(fa.left)) : fa;\n}; };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Bifunctor = {\n    URI: URI,\n    bimap: _bimap,\n    mapLeft: _mapLeft\n};\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category instance operations\n * @since 2.9.0\n */\nexport var altW = function (that) { return function (fa) { return (isLeft(fa) ? that() : fa); }; };\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category instance operations\n * @since 2.0.0\n */\nexport var alt = altW;\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n    URI: URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instance operations\n * @since 2.0.0\n */\nexport var extend = function (f) { return function (wa) {\n    return isLeft(wa) ? wa : right(f(wa));\n}; };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Extend = {\n    URI: URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var ChainRec = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain,\n    chainRec: _chainRec\n};\n/**\n * @category instance operations\n * @since 2.6.3\n */\nexport var throwError = left;\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var MonadThrow = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain,\n    throwError: throwError\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var FromEither = {\n    URI: URI,\n    fromEither: identity\n};\n/**\n * @example\n * import { fromPredicate, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     1,\n *     fromPredicate(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     -1,\n *     fromPredicate(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   left('error')\n * )\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var fromPredicate = \n/*#__PURE__*/\nfromPredicate_(FromEither);\n// -------------------------------------------------------------------------------------\n// natural transformations\n// -------------------------------------------------------------------------------------\n/**\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n * import * as O from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     O.some(1),\n *     E.fromOption(() => 'error')\n *   ),\n *   E.right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     O.none,\n *     E.fromOption(() => 'error')\n *   ),\n *   E.left('error')\n * )\n *\n * @category natural transformations\n * @since 2.0.0\n */\nexport var fromOption = \n/*#__PURE__*/\nfromOption_(FromEither);\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * Returns `true` if the either is an instance of `Left`, `false` otherwise.\n *\n * @category refinements\n * @since 2.0.0\n */\nexport var isLeft = _.isLeft;\n/**\n * Returns `true` if the either is an instance of `Right`, `false` otherwise.\n *\n * @category refinements\n * @since 2.0.0\n */\nexport var isRight = _.isRight;\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * Less strict version of [`match`](#match).\n *\n * @category destructors\n * @since 2.10.0\n */\nexport var matchW = function (onLeft, onRight) { return function (ma) {\n    return isLeft(ma) ? onLeft(ma.left) : onRight(ma.right);\n}; };\n/**\n * Alias of [`matchW`](#matchw).\n *\n * @category destructors\n * @since 2.10.0\n */\nexport var foldW = matchW;\n/**\n * Takes two functions and an `Either` value, if the value is a `Left` the inner value is applied to the first function,\n * if the value is a `Right` the inner value is applied to the second function.\n *\n * @example\n * import { match, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * function onLeft(errors: Array<string>): string {\n *   return `Errors: ${errors.join(', ')}`\n * }\n *\n * function onRight(value: number): string {\n *   return `Ok: ${value}`\n * }\n *\n * assert.strictEqual(\n *   pipe(\n *     right(1),\n *     match(onLeft, onRight)\n *   ),\n *   'Ok: 1'\n * )\n * assert.strictEqual(\n *   pipe(\n *     left(['error 1', 'error 2']),\n *     match(onLeft, onRight)\n *   ),\n *   'Errors: error 1, error 2'\n * )\n *\n * @category destructors\n * @since 2.10.0\n */\nexport var match = matchW;\n/**\n * Alias of [`match`](#match).\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var fold = match;\n/**\n * Less strict version of [`getOrElse`](#getorelse).\n *\n * @category destructors\n * @since 2.6.0\n */\nexport var getOrElseW = function (onLeft) { return function (ma) {\n    return isLeft(ma) ? onLeft(ma.left) : ma.right;\n}; };\n/**\n * Returns the wrapped value if it's a `Right` or a default value if is a `Left`.\n *\n * @example\n * import { getOrElse, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     right(1),\n *     getOrElse(() => 0)\n *   ),\n *   1\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     left('error'),\n *     getOrElse(() => 0)\n *   ),\n *   0\n * )\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var getOrElse = getOrElseW;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var flap = \n/*#__PURE__*/\nflap_(Functor);\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var apFirst = \n/*#__PURE__*/\napFirst_(Apply);\n/**\n * Less strict version of [`apFirst`](#apfirst)\n *\n * @category combinators\n * @since 2.12.0\n */\nexport var apFirstW = apFirst;\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var apSecond = \n/*#__PURE__*/\napSecond_(Apply);\n/**\n * Less strict version of [`apSecond`](#apsecond)\n *\n * @category combinators\n * @since 2.12.0\n */\nexport var apSecondW = apSecond;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var chainFirst = \n/*#__PURE__*/\nchainFirst_(Chain);\n/**\n * Less strict version of [`chainFirst`](#chainfirst)\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.8.0\n */\nexport var chainFirstW = chainFirst;\n/**\n * Less strict version of [`flatten`](#flatten).\n *\n * @category combinators\n * @since 2.11.0\n */\nexport var flattenW = \n/*#__PURE__*/\nchainW(identity);\n/**\n * The `flatten` function is the conventional monad join operator. It is used to remove one level of monadic structure, projecting its bound argument into the outer level.\n *\n * Derivable from `Chain`.\n *\n * @example\n * import * as E from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(E.flatten(E.right(E.right('a'))), E.right('a'))\n * assert.deepStrictEqual(E.flatten(E.right(E.left('e'))), E.left('e'))\n * assert.deepStrictEqual(E.flatten(E.left('e')), E.left('e'))\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var flatten = flattenW;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var duplicate = \n/*#__PURE__*/\nextend(identity);\n/**\n * @category combinators\n * @since 2.10.0\n */\nexport var fromOptionK = \n/*#__PURE__*/\nfromOptionK_(FromEither);\n/**\n * @category combinators\n * @since 2.11.0\n */\nexport var chainOptionK = \n/*#__PURE__*/\nchainOptionK_(FromEither, Chain);\n/**\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     E.right(1),\n *     E.filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   E.right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.right(-1),\n *     E.filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   E.left('error')\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.left('a'),\n *     E.filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   E.left('a')\n * )\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var filterOrElse = \n/*#__PURE__*/\nfilterOrElse_(FromEither, Chain);\n/**\n * Less strict version of [`filterOrElse`](#filterorelse).\n *\n * @category combinators\n * @since 2.9.0\n */\nexport var filterOrElseW = filterOrElse;\n/**\n * Returns a `Right` if is a `Left` (and vice versa).\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var swap = function (ma) { return (isLeft(ma) ? right(ma.left) : left(ma.right)); };\n/**\n * Less strict version of [`orElse`](#orelse).\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var orElseW = function (onLeft) { return function (ma) {\n    return isLeft(ma) ? onLeft(ma.left) : ma;\n}; };\n/**\n * Useful for recovering from errors.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var orElse = orElseW;\n// -------------------------------------------------------------------------------------\n// interop\n// -------------------------------------------------------------------------------------\n/**\n * Takes a default and a nullable value, if the value is not nully, turn it into a `Right`, if the value is nully use\n * the provided default as a `Left`.\n *\n * @example\n * import { fromNullable, left, right } from 'fp-ts/Either'\n *\n * const parse = fromNullable('nully')\n *\n * assert.deepStrictEqual(parse(1), right(1))\n * assert.deepStrictEqual(parse(null), left('nully'))\n *\n * @category interop\n * @since 2.0.0\n */\nexport var fromNullable = function (e) { return function (a) {\n    return a == null ? left(e) : right(a);\n}; };\n/**\n * Constructs a new `Either` from a function that might throw.\n *\n * See also [`tryCatchK`](#trycatchk).\n *\n * @example\n * import * as E from 'fp-ts/Either'\n *\n * const unsafeHead = <A>(as: ReadonlyArray<A>): A => {\n *   if (as.length > 0) {\n *     return as[0]\n *   } else {\n *     throw new Error('empty array')\n *   }\n * }\n *\n * const head = <A>(as: ReadonlyArray<A>): E.Either<Error, A> =>\n *   E.tryCatch(() => unsafeHead(as), e => (e instanceof Error ? e : new Error('unknown error')))\n *\n * assert.deepStrictEqual(head([]), E.left(new Error('empty array')))\n * assert.deepStrictEqual(head([1, 2, 3]), E.right(1))\n *\n * @category interop\n * @since 2.0.0\n */\nexport var tryCatch = function (f, onThrow) {\n    try {\n        return right(f());\n    }\n    catch (e) {\n        return left(onThrow(e));\n    }\n};\n/**\n * Converts a function that may throw to one returning a `Either`.\n *\n * @category interop\n * @since 2.10.0\n */\nexport var tryCatchK = function (f, onThrow) { return function () {\n    var a = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        a[_i] = arguments[_i];\n    }\n    return tryCatch(function () { return f.apply(void 0, a); }, onThrow);\n}; };\n/**\n * @category interop\n * @since 2.9.0\n */\nexport var fromNullableK = function (e) {\n    var from = fromNullable(e);\n    return function (f) { return flow(f, from); };\n};\n/**\n * @category interop\n * @since 2.9.0\n */\nexport var chainNullableK = function (e) {\n    var from = fromNullableK(e);\n    return function (f) { return chain(from(f)); };\n};\n/**\n * @category interop\n * @since 2.10.0\n */\nexport var toUnion = \n/*#__PURE__*/\nfoldW(identity, identity);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Default value for the `onError` argument of `tryCatch`\n *\n * @since 2.0.0\n */\nexport function toError(e) {\n    return e instanceof Error ? e : new Error(String(e));\n}\nexport function elem(E) {\n    return function (a, ma) {\n        if (ma === undefined) {\n            var elemE_1 = elem(E);\n            return function (ma) { return elemE_1(a, ma); };\n        }\n        return isLeft(ma) ? false : E.equals(a, ma.right);\n    };\n}\n/**\n * Returns `false` if `Left` or returns the result of the application of the given predicate to the `Right` value.\n *\n * @example\n * import { exists, left, right } from 'fp-ts/Either'\n *\n * const gt2 = exists((n: number) => n > 2)\n *\n * assert.strictEqual(gt2(left('a')), false)\n * assert.strictEqual(gt2(right(1)), false)\n * assert.strictEqual(gt2(right(3)), true)\n *\n * @since 2.0.0\n */\nexport var exists = function (predicate) { return function (ma) {\n    return isLeft(ma) ? false : predicate(ma.right);\n}; };\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexport var Do = \n/*#__PURE__*/\nof(_.emptyRecord);\n/**\n * @since 2.8.0\n */\nexport var bindTo = \n/*#__PURE__*/\nbindTo_(Functor);\n/**\n * @since 2.8.0\n */\nexport var bind = \n/*#__PURE__*/\nbind_(Chain);\n/**\n * @since 2.8.0\n */\nexport var bindW = bind;\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexport var apS = \n/*#__PURE__*/\napS_(Apply);\n/**\n * @since 2.8.0\n */\nexport var apSW = apS;\n// -------------------------------------------------------------------------------------\n// sequence T\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nexport var ApT = \n/*#__PURE__*/\nof(_.emptyReadonlyArray);\n// -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n/**\n * Equivalent to `ReadonlyNonEmptyArray#traverseWithIndex(Applicative)`.\n *\n * @since 2.11.0\n */\nexport var traverseReadonlyNonEmptyArrayWithIndex = function (f) { return function (as) {\n    var e = f(0, _.head(as));\n    if (isLeft(e)) {\n        return e;\n    }\n    var out = [e.right];\n    for (var i = 1; i < as.length; i++) {\n        var e_1 = f(i, as[i]);\n        if (isLeft(e_1)) {\n            return e_1;\n        }\n        out.push(e_1.right);\n    }\n    return right(out);\n}; };\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @since 2.11.0\n */\nexport var traverseReadonlyArrayWithIndex = function (f) {\n    var g = traverseReadonlyNonEmptyArrayWithIndex(f);\n    return function (as) { return (_.isNonEmpty(as) ? g(as) : ApT); };\n};\n/**\n * @since 2.9.0\n */\nexport var traverseArrayWithIndex = traverseReadonlyArrayWithIndex;\n/**\n * @since 2.9.0\n */\nexport var traverseArray = function (f) { return traverseReadonlyArrayWithIndex(function (_, a) { return f(a); }); };\n/**\n * @since 2.9.0\n */\nexport var sequenceArray = \n/*#__PURE__*/\ntraverseArray(identity);\n/**\n * Use [`parse`](./Json.ts.html#parse) instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nexport function parseJSON(s, onError) {\n    return tryCatch(function () { return JSON.parse(s); }, onError);\n}\n/**\n * Use [`stringify`](./Json.ts.html#stringify) instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nexport var stringifyJSON = function (u, onError) {\n    return tryCatch(function () {\n        var s = JSON.stringify(u);\n        if (typeof s !== 'string') {\n            throw new Error('Converting unsupported structure to JSON');\n        }\n        return s;\n    }, onError);\n};\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var either = {\n    URI: URI,\n    map: _map,\n    of: of,\n    ap: _ap,\n    chain: _chain,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    bimap: _bimap,\n    mapLeft: _mapLeft,\n    alt: _alt,\n    extend: _extend,\n    chainRec: _chainRec,\n    throwError: throwError\n};\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getapplysemigroup) instead.\n *\n * Semigroup returning the left-most `Left` value. If both operands are `Right`s then the inner values\n * are concatenated using the provided `Semigroup`\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var getApplySemigroup = \n/*#__PURE__*/\ngetApplySemigroup_(Apply);\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getapplicativemonoid) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var getApplyMonoid = \n/*#__PURE__*/\ngetApplicativeMonoid(Applicative);\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getapplysemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var getValidationSemigroup = function (SE, SA) {\n    return getApplySemigroup_(getApplicativeValidation(SE))(SA);\n};\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getapplicativemonoid) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var getValidationMonoid = function (SE, MA) {\n    return getApplicativeMonoid(getApplicativeValidation(SE))(MA);\n};\n/**\n * Use [`getApplicativeValidation`](#getapplicativevalidation) and [`getAltValidation`](#getaltvalidation) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport function getValidation(SE) {\n    var ap = getApplicativeValidation(SE).ap;\n    var alt = getAltValidation(SE).alt;\n    return {\n        URI: URI,\n        _E: undefined,\n        map: _map,\n        of: of,\n        chain: _chain,\n        bimap: _bimap,\n        mapLeft: _mapLeft,\n        reduce: _reduce,\n        foldMap: _foldMap,\n        reduceRight: _reduceRight,\n        extend: _extend,\n        traverse: _traverse,\n        sequence: sequence,\n        chainRec: _chainRec,\n        throwError: throwError,\n        ap: ap,\n        alt: alt\n    };\n}\n","import { pipe } from './function';\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport var fromEquals = function (equals) { return ({\n    equals: function (x, y) { return x === y || equals(x, y); }\n}); };\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @category combinators\n * @since 2.10.0\n */\nexport var struct = function (eqs) {\n    return fromEquals(function (first, second) {\n        for (var key in eqs) {\n            if (!eqs[key].equals(first[key], second[key])) {\n                return false;\n            }\n        }\n        return true;\n    });\n};\n/**\n * Given a tuple of `Eq`s returns a `Eq` for the tuple\n *\n * @example\n * import { tuple } from 'fp-ts/Eq'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import * as B from 'fp-ts/boolean'\n *\n * const E = tuple(S.Eq, N.Eq, B.Eq)\n * assert.strictEqual(E.equals(['a', 1, true], ['a', 1, true]), true)\n * assert.strictEqual(E.equals(['a', 1, true], ['b', 1, true]), false)\n * assert.strictEqual(E.equals(['a', 1, true], ['a', 2, true]), false)\n * assert.strictEqual(E.equals(['a', 1, true], ['a', 1, false]), false)\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var tuple = function () {\n    var eqs = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        eqs[_i] = arguments[_i];\n    }\n    return fromEquals(function (first, second) { return eqs.every(function (E, i) { return E.equals(first[i], second[i]); }); });\n};\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n/* istanbul ignore next */\nvar contramap_ = function (fa, f) { return pipe(fa, contramap(f)); };\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * @category Contravariant\n * @since 2.0.0\n */\nexport var contramap = function (f) { return function (fa) {\n    return fromEquals(function (x, y) { return fa.equals(f(x), f(y)); });\n}; };\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var URI = 'Eq';\n/**\n * @category instances\n * @since 2.5.0\n */\nexport var eqStrict = {\n    equals: function (a, b) { return a === b; }\n};\nvar empty = {\n    equals: function () { return true; }\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var getSemigroup = function () { return ({\n    concat: function (x, y) { return fromEquals(function (a, b) { return x.equals(a, b) && y.equals(a, b); }); }\n}); };\n/**\n * @category instances\n * @since 2.6.0\n */\nexport var getMonoid = function () { return ({\n    concat: getSemigroup().concat,\n    empty: empty\n}); };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Contravariant = {\n    URI: URI,\n    contramap: contramap_\n};\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexport var getTupleEq = tuple;\n/**\n * Use [`struct`](#struct) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexport var getStructEq = struct;\n/**\n * Use [`eqStrict`](#eqstrict) instead\n *\n * @since 2.0.0\n * @deprecated\n */\nexport var strictEqual = eqStrict.equals;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var eq = Contravariant;\n/**\n * Use [`Eq`](./boolean.ts.html#eq) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var eqBoolean = eqStrict;\n/**\n * Use [`Eq`](./string.ts.html#eq) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var eqString = eqStrict;\n/**\n * Use [`Eq`](./number.ts.html#eq) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var eqNumber = eqStrict;\n/**\n * Use [`Eq`](./Date.ts.html#eq) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var eqDate = {\n    equals: function (first, second) { return first.valueOf() === second.valueOf(); }\n};\n","import { eqStrict } from './Eq';\nimport { constant, constTrue, pipe } from './function';\n// -------------------------------------------------------------------------------------\n// defaults\n// -------------------------------------------------------------------------------------\n/**\n * @category defaults\n * @since 2.10.0\n */\nexport var equalsDefault = function (compare) { return function (first, second) {\n    return first === second || compare(first, second) === 0;\n}; };\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport var fromCompare = function (compare) { return ({\n    equals: equalsDefault(compare),\n    compare: function (first, second) { return (first === second ? 0 : compare(first, second)); }\n}); };\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * Given a tuple of `Ord`s returns an `Ord` for the tuple.\n *\n * @example\n * import { tuple } from 'fp-ts/Ord'\n * import * as B from 'fp-ts/boolean'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n *\n * const O = tuple(S.Ord, N.Ord, B.Ord)\n * assert.strictEqual(O.compare(['a', 1, true], ['b', 2, true]), -1)\n * assert.strictEqual(O.compare(['a', 1, true], ['a', 2, true]), -1)\n * assert.strictEqual(O.compare(['a', 1, true], ['a', 1, false]), 1)\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var tuple = function () {\n    var ords = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        ords[_i] = arguments[_i];\n    }\n    return fromCompare(function (first, second) {\n        var i = 0;\n        for (; i < ords.length - 1; i++) {\n            var r = ords[i].compare(first[i], second[i]);\n            if (r !== 0) {\n                return r;\n            }\n        }\n        return ords[i].compare(first[i], second[i]);\n    });\n};\n/**\n * @category combinators\n * @since 2.10.0\n */\nexport var reverse = function (O) { return fromCompare(function (first, second) { return O.compare(second, first); }); };\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n/* istanbul ignore next */\nvar contramap_ = function (fa, f) { return pipe(fa, contramap(f)); };\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * @category Contravariant\n * @since 2.0.0\n */\nexport var contramap = function (f) { return function (fa) {\n    return fromCompare(function (first, second) { return fa.compare(f(first), f(second)); });\n}; };\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var URI = 'Ord';\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var getSemigroup = function () { return ({\n    concat: function (first, second) {\n        return fromCompare(function (a, b) {\n            var ox = first.compare(a, b);\n            return ox !== 0 ? ox : second.compare(a, b);\n        });\n    }\n}); };\n/**\n * Returns a `Monoid` such that:\n *\n * - its `concat(ord1, ord2)` operation will order first by `ord1`, and then by `ord2`\n * - its `empty` value is an `Ord` that always considers compared elements equal\n *\n * @example\n * import { sort } from 'fp-ts/Array'\n * import { contramap, reverse, getMonoid } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as B from 'fp-ts/boolean'\n * import { pipe } from 'fp-ts/function'\n * import { concatAll } from 'fp-ts/Monoid'\n * import * as N from 'fp-ts/number'\n *\n * interface User {\n *   readonly id: number\n *   readonly name: string\n *   readonly age: number\n *   readonly rememberMe: boolean\n * }\n *\n * const byName = pipe(\n *   S.Ord,\n *   contramap((p: User) => p.name)\n * )\n *\n * const byAge = pipe(\n *   N.Ord,\n *   contramap((p: User) => p.age)\n * )\n *\n * const byRememberMe = pipe(\n *   B.Ord,\n *   contramap((p: User) => p.rememberMe)\n * )\n *\n * const M = getMonoid<User>()\n *\n * const users: Array<User> = [\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true }\n * ]\n *\n * // sort by name, then by age, then by `rememberMe`\n * const O1 = concatAll(M)([byName, byAge, byRememberMe])\n * assert.deepStrictEqual(sort(O1)(users), [\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false }\n * ])\n *\n * // now `rememberMe = true` first, then by name, then by age\n * const O2 = concatAll(M)([reverse(byRememberMe), byName, byAge])\n * assert.deepStrictEqual(sort(O2)(users), [\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false }\n * ])\n *\n * @category instances\n * @since 2.4.0\n */\nexport var getMonoid = function () { return ({\n    concat: getSemigroup().concat,\n    empty: fromCompare(function () { return 0; })\n}); };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Contravariant = {\n    URI: URI,\n    contramap: contramap_\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nexport var trivial = {\n    equals: constTrue,\n    compare: \n    /*#__PURE__*/\n    constant(0)\n};\n/**\n * @since 2.11.0\n */\nexport var equals = function (O) { return function (second) { return function (first) {\n    return first === second || O.compare(first, second) === 0;\n}; }; };\n// TODO: curry in v3\n/**\n * Test whether one value is _strictly less than_ another\n *\n * @since 2.0.0\n */\nexport var lt = function (O) { return function (first, second) { return O.compare(first, second) === -1; }; };\n// TODO: curry in v3\n/**\n * Test whether one value is _strictly greater than_ another\n *\n * @since 2.0.0\n */\nexport var gt = function (O) { return function (first, second) { return O.compare(first, second) === 1; }; };\n// TODO: curry in v3\n/**\n * Test whether one value is _non-strictly less than_ another\n *\n * @since 2.0.0\n */\nexport var leq = function (O) { return function (first, second) { return O.compare(first, second) !== 1; }; };\n// TODO: curry in v3\n/**\n * Test whether one value is _non-strictly greater than_ another\n *\n * @since 2.0.0\n */\nexport var geq = function (O) { return function (first, second) { return O.compare(first, second) !== -1; }; };\n// TODO: curry in v3\n/**\n * Take the minimum of two values. If they are considered equal, the first argument is chosen\n *\n * @since 2.0.0\n */\nexport var min = function (O) { return function (first, second) {\n    return first === second || O.compare(first, second) < 1 ? first : second;\n}; };\n// TODO: curry in v3\n/**\n * Take the maximum of two values. If they are considered equal, the first argument is chosen\n *\n * @since 2.0.0\n */\nexport var max = function (O) { return function (first, second) {\n    return first === second || O.compare(first, second) > -1 ? first : second;\n}; };\n/**\n * Clamp a value between a minimum and a maximum\n *\n * @since 2.0.0\n */\nexport var clamp = function (O) {\n    var minO = min(O);\n    var maxO = max(O);\n    return function (low, hi) { return function (a) { return maxO(minO(a, hi), low); }; };\n};\n/**\n * Test whether a value is between a minimum and a maximum (inclusive)\n *\n * @since 2.0.0\n */\nexport var between = function (O) {\n    var ltO = lt(O);\n    var gtO = gt(O);\n    return function (low, hi) { return function (a) { return (ltO(a, low) || gtO(a, hi) ? false : true); }; };\n};\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n// tslint:disable: deprecation\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexport var getTupleOrd = tuple;\n/**\n * Use [`reverse`](#reverse) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexport var getDualOrd = reverse;\n/**\n * Use [`Contravariant`](#contravariant) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var ord = Contravariant;\n// default compare for primitive types\nfunction compare(first, second) {\n    return first < second ? -1 : first > second ? 1 : 0;\n}\nvar strictOrd = {\n    equals: eqStrict.equals,\n    compare: compare\n};\n/**\n * Use [`Ord`](./boolean.ts.html#ord) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var ordBoolean = strictOrd;\n/**\n * Use [`Ord`](./string.ts.html#ord) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var ordString = strictOrd;\n/**\n * Use [`Ord`](./number.ts.html#ord) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var ordNumber = strictOrd;\n/**\n * Use [`Ord`](./Date.ts.html#ord) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var ordDate = \n/*#__PURE__*/\npipe(ordNumber, \n/*#__PURE__*/\ncontramap(function (date) { return date.valueOf(); }));\n","/**\n * A `Magma` is a pair `(A, concat)` in which `A` is a non-empty set and `concat` is a binary operation on `A`\n *\n * See [Semigroup](https://gcanti.github.io/fp-ts/modules/Semigroup.ts.html) for some instances.\n *\n * @since 2.0.0\n */\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * The dual of a `Magma`, obtained by swapping the arguments of `concat`.\n *\n * @example\n * import { reverse, concatAll } from 'fp-ts/Magma'\n * import * as N from 'fp-ts/number'\n *\n * const subAll = concatAll(reverse(N.MagmaSub))(0)\n *\n * assert.deepStrictEqual(subAll([1, 2, 3]), 2)\n *\n * @category combinators\n * @since 2.11.0\n */\nexport var reverse = function (M) { return ({\n    concat: function (first, second) { return M.concat(second, first); }\n}); };\n/**\n * @category combinators\n * @since 2.11.0\n */\nexport var filterFirst = function (predicate) { return function (M) { return ({\n    concat: function (first, second) { return (predicate(first) ? M.concat(first, second) : second); }\n}); }; };\n/**\n * @category combinators\n * @since 2.11.0\n */\nexport var filterSecond = function (predicate) { return function (M) { return ({\n    concat: function (first, second) { return (predicate(second) ? M.concat(first, second) : first); }\n}); }; };\n/**\n * @category combinators\n * @since 2.11.0\n */\nexport var endo = function (f) { return function (M) { return ({\n    concat: function (first, second) { return M.concat(f(first), f(second)); }\n}); }; };\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Given a sequence of `as`, concat them and return the total.\n *\n * If `as` is empty, return the provided `startWith` value.\n *\n * @example\n * import { concatAll } from 'fp-ts/Magma'\n * import * as N from 'fp-ts/number'\n *\n * const subAll = concatAll(N.MagmaSub)(0)\n *\n * assert.deepStrictEqual(subAll([1, 2, 3]), -6)\n *\n * @since 2.11.0\n */\nexport var concatAll = function (M) { return function (startWith) { return function (as) {\n    return as.reduce(function (a, acc) { return M.concat(a, acc); }, startWith);\n}; }; };\n","/**\n * If a type `A` can form a `Semigroup` it has an **associative** binary operation.\n *\n * ```ts\n * interface Semigroup<A> {\n *   readonly concat: (x: A, y: A) => A\n * }\n * ```\n *\n * Associativity means the following equality must hold for any choice of `x`, `y`, and `z`.\n *\n * ```ts\n * concat(x, concat(y, z)) = concat(concat(x, y), z)\n * ```\n *\n * A common example of a semigroup is the type `string` with the operation `+`.\n *\n * ```ts\n * import { Semigroup } from 'fp-ts/Semigroup'\n *\n * const semigroupString: Semigroup<string> = {\n *   concat: (x, y) => x + y\n * }\n *\n * const x = 'x'\n * const y = 'y'\n * const z = 'z'\n *\n * semigroupString.concat(x, y) // 'xy'\n *\n * semigroupString.concat(x, semigroupString.concat(y, z)) // 'xyz'\n *\n * semigroupString.concat(semigroupString.concat(x, y), z) // 'xyz'\n * ```\n *\n * *Adapted from https://typelevel.org/cats*\n *\n * @since 2.0.0\n */\nimport { getSemigroup, identity } from './function';\nimport * as _ from './internal';\nimport * as M from './Magma';\nimport * as Or from './Ord';\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Get a semigroup where `concat` will return the minimum, based on the provided order.\n *\n * @example\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/Semigroup'\n *\n * const S1 = S.min(N.Ord)\n *\n * assert.deepStrictEqual(S1.concat(1, 2), 1)\n *\n * @category constructors\n * @since 2.10.0\n */\nexport var min = function (O) { return ({\n    concat: Or.min(O)\n}); };\n/**\n * Get a semigroup where `concat` will return the maximum, based on the provided order.\n *\n * @example\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/Semigroup'\n *\n * const S1 = S.max(N.Ord)\n *\n * assert.deepStrictEqual(S1.concat(1, 2), 2)\n *\n * @category constructors\n * @since 2.10.0\n */\nexport var max = function (O) { return ({\n    concat: Or.max(O)\n}); };\n/**\n * @category constructors\n * @since 2.10.0\n */\nexport var constant = function (a) { return ({\n    concat: function () { return a; }\n}); };\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * The dual of a `Semigroup`, obtained by swapping the arguments of `concat`.\n *\n * @example\n * import { reverse } from 'fp-ts/Semigroup'\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(reverse(S.Semigroup).concat('a', 'b'), 'ba')\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var reverse = M.reverse;\n/**\n * Given a struct of semigroups returns a semigroup for the struct.\n *\n * @example\n * import { struct } from 'fp-ts/Semigroup'\n * import * as N from 'fp-ts/number'\n *\n * interface Point {\n *   readonly x: number\n *   readonly y: number\n * }\n *\n * const S = struct<Point>({\n *   x: N.SemigroupSum,\n *   y: N.SemigroupSum\n * })\n *\n * assert.deepStrictEqual(S.concat({ x: 1, y: 2 }, { x: 3, y: 4 }), { x: 4, y: 6 })\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var struct = function (semigroups) { return ({\n    concat: function (first, second) {\n        var r = {};\n        for (var k in semigroups) {\n            if (_.has.call(semigroups, k)) {\n                r[k] = semigroups[k].concat(first[k], second[k]);\n            }\n        }\n        return r;\n    }\n}); };\n/**\n * Given a tuple of semigroups returns a semigroup for the tuple.\n *\n * @example\n * import { tuple } from 'fp-ts/Semigroup'\n * import * as B from 'fp-ts/boolean'\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/string'\n *\n * const S1 = tuple(S.Semigroup, N.SemigroupSum)\n * assert.deepStrictEqual(S1.concat(['a', 1], ['b', 2]), ['ab', 3])\n *\n * const S2 = tuple(S.Semigroup, N.SemigroupSum, B.SemigroupAll)\n * assert.deepStrictEqual(S2.concat(['a', 1, true], ['b', 2, false]), ['ab', 3, false])\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var tuple = function () {\n    var semigroups = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        semigroups[_i] = arguments[_i];\n    }\n    return ({\n        concat: function (first, second) { return semigroups.map(function (s, i) { return s.concat(first[i], second[i]); }); }\n    });\n};\n/**\n * Between each pair of elements insert `middle`.\n *\n * @example\n * import { intercalate } from 'fp-ts/Semigroup'\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * const S1 = pipe(S.Semigroup, intercalate(' + '))\n *\n * assert.strictEqual(S1.concat('a', 'b'), 'a + b')\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var intercalate = function (middle) { return function (S) { return ({\n    concat: function (x, y) { return S.concat(x, S.concat(middle, y)); }\n}); }; };\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * Always return the first argument.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.first<number>().concat(1, 2), 1)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var first = function () { return ({ concat: identity }); };\n/**\n * Always return the last argument.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.last<number>().concat(1, 2), 2)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var last = function () { return ({ concat: function (_, y) { return y; } }); };\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Given a sequence of `as`, concat them and return the total.\n *\n * If `as` is empty, return the provided `startWith` value.\n *\n * @example\n * import { concatAll } from 'fp-ts/Semigroup'\n * import * as N from 'fp-ts/number'\n *\n * const sum = concatAll(N.SemigroupSum)(0)\n *\n * assert.deepStrictEqual(sum([1, 2, 3]), 6)\n * assert.deepStrictEqual(sum([]), 0)\n *\n * @since 2.10.0\n */\nexport var concatAll = M.concatAll;\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use `void` module instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var semigroupVoid = constant(undefined);\n/**\n * Use [`getAssignSemigroup`](./struct.ts.html#getAssignSemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var getObjectSemigroup = function () { return ({\n    concat: function (first, second) { return Object.assign({}, first, second); }\n}); };\n/**\n * Use [`last`](#last) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var getLastSemigroup = last;\n/**\n * Use [`first`](#first) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var getFirstSemigroup = first;\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexport var getTupleSemigroup = tuple;\n/**\n * Use [`struct`](#struct) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexport var getStructSemigroup = struct;\n/**\n * Use [`reverse`](#reverse) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexport var getDualSemigroup = reverse;\n/**\n * Use [`max`](#max) instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nexport var getJoinSemigroup = max;\n/**\n * Use [`min`](#min) instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nexport var getMeetSemigroup = min;\n/**\n * Use [`intercalate`](#intercalate) instead.\n *\n * @category combinators\n * @since 2.5.0\n * @deprecated\n */\nexport var getIntercalateSemigroup = intercalate;\nexport function fold(S) {\n    var concatAllS = concatAll(S);\n    return function (startWith, as) { return (as === undefined ? concatAllS(startWith) : concatAllS(startWith)(as)); };\n}\n/**\n * Use [`SemigroupAll`](./boolean.ts.html#SemigroupAll) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var semigroupAll = {\n    concat: function (x, y) { return x && y; }\n};\n/**\n * Use [`SemigroupAny`](./boolean.ts.html#SemigroupAny) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var semigroupAny = {\n    concat: function (x, y) { return x || y; }\n};\n/**\n * Use [`getSemigroup`](./function.ts.html#getSemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var getFunctionSemigroup = getSemigroup;\n/**\n * Use [`Semigroup`](./string.ts.html#Semigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var semigroupString = {\n    concat: function (x, y) { return x + y; }\n};\n/**\n * Use [`SemigroupSum`](./number.ts.html#SemigroupSum) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var semigroupSum = {\n    concat: function (x, y) { return x + y; }\n};\n/**\n * Use [`SemigroupProduct`](./number.ts.html#SemigroupProduct) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var semigroupProduct = {\n    concat: function (x, y) { return x * y; }\n};\n","var __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nimport { apFirst as apFirst_, apS as apS_, apSecond as apSecond_ } from './Apply';\nimport { bind as bind_, chainFirst as chainFirst_ } from './Chain';\nimport { fromEquals } from './Eq';\nimport { flow, identity, pipe, SK } from './function';\nimport { bindTo as bindTo_, flap as flap_ } from './Functor';\nimport * as _ from './internal';\nimport { getMonoid } from './Ord';\nimport * as Se from './Semigroup';\n// -------------------------------------------------------------------------------------\n// internal\n// -------------------------------------------------------------------------------------\n/**\n * @internal\n */\nexport var empty = _.emptyReadonlyArray;\n/**\n * @internal\n */\nexport var isNonEmpty = _.isNonEmpty;\n/**\n * @internal\n */\nexport var isOutOfBound = function (i, as) { return i < 0 || i >= as.length; };\n/**\n * @internal\n */\nexport var prependW = function (head) { return function (tail) { return __spreadArray([head], tail); }; };\n/**\n * @internal\n */\nexport var prepend = prependW;\n/**\n * @internal\n */\nexport var appendW = function (end) { return function (init) { return __spreadArray(__spreadArray([], init), [end]); }; };\n/**\n * @internal\n */\nexport var append = appendW;\n/**\n * @internal\n */\nexport var unsafeInsertAt = function (i, a, as) {\n    if (isNonEmpty(as)) {\n        var xs = _.fromReadonlyNonEmptyArray(as);\n        xs.splice(i, 0, a);\n        return xs;\n    }\n    return [a];\n};\n/**\n * @internal\n */\nexport var unsafeUpdateAt = function (i, a, as) {\n    if (as[i] === a) {\n        return as;\n    }\n    else {\n        var xs = _.fromReadonlyNonEmptyArray(as);\n        xs[i] = a;\n        return xs;\n    }\n};\n/**\n * Remove duplicates from a `ReadonlyNonEmptyArray`, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/ReadonlyNonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.11.0\n */\nexport var uniq = function (E) { return function (as) {\n    if (as.length === 1) {\n        return as;\n    }\n    var out = [head(as)];\n    var rest = tail(as);\n    var _loop_1 = function (a) {\n        if (out.every(function (o) { return !E.equals(o, a); })) {\n            out.push(a);\n        }\n    };\n    for (var _i = 0, rest_1 = rest; _i < rest_1.length; _i++) {\n        var a = rest_1[_i];\n        _loop_1(a);\n    }\n    return out;\n}; };\n/**\n * Sort the elements of a `ReadonlyNonEmptyArray` in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import * as RNEA from 'fp-ts/ReadonlyNonEmptyArray'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   name: string\n *   age: number\n * }\n *\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n *\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = RNEA.sortBy([byName, byAge])\n *\n * const persons: RNEA.ReadonlyNonEmptyArray<Person> = [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 },\n *   { name: 'b', age: 2 }\n * ]\n *\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.11.0\n */\nexport var sortBy = function (ords) {\n    if (isNonEmpty(ords)) {\n        var M = getMonoid();\n        return sort(ords.reduce(M.concat, M.empty));\n    }\n    return identity;\n};\n/**\n * @category combinators\n * @since 2.11.0\n */\nexport var union = function (E) {\n    var uniqE = uniq(E);\n    return function (second) { return function (first) { return uniqE(pipe(first, concat(second))); }; };\n};\n/**\n * Rotate a `ReadonlyNonEmptyArray` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n * assert.deepStrictEqual(rotate(-2)([1, 2, 3, 4, 5]), [3, 4, 5, 1, 2])\n *\n * @category combinators\n * @since 2.11.0\n */\nexport var rotate = function (n) { return function (as) {\n    var len = as.length;\n    var m = Math.round(n) % len;\n    if (isOutOfBound(Math.abs(m), as) || m === 0) {\n        return as;\n    }\n    if (m < 0) {\n        var _a = splitAt(-m)(as), f = _a[0], s = _a[1];\n        return pipe(s, concat(f));\n    }\n    else {\n        return rotate(m - len)(as);\n    }\n}; };\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Return a `ReadonlyNonEmptyArray` from a `ReadonlyArray` returning `none` if the input is empty.\n *\n * @category constructors\n * @since 2.5.0\n */\nexport var fromReadonlyArray = function (as) {\n    return isNonEmpty(as) ? _.some(as) : _.none;\n};\n/**\n * Return a `ReadonlyNonEmptyArray` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { makeBy } from 'fp-ts/ReadonlyNonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(pipe(5, makeBy(double)), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.11.0\n */\nexport var makeBy = function (f) { return function (n) {\n    var j = Math.max(0, Math.floor(n));\n    var out = [f(0)];\n    for (var i = 1; i < j; i++) {\n        out.push(f(i));\n    }\n    return out;\n}; };\n/**\n * Create a `ReadonlyNonEmptyArray` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { replicate } from 'fp-ts/ReadonlyNonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(3, replicate('a')), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.11.0\n */\nexport var replicate = function (a) { return makeBy(function () { return a; }); };\n/**\n * Create a `ReadonlyNonEmptyArray` containing a range of integers, including both endpoints.\n *\n * @example\n * import { range } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.11.0\n */\nexport var range = function (start, end) {\n    return start <= end ? makeBy(function (i) { return start + i; })(end - start + 1) : [start];\n};\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * Return the tuple of the `head` and the `tail`.\n *\n * @example\n * import { unprepend } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(unprepend([1, 2, 3, 4]), [1, [2, 3, 4]])\n *\n * @category destructors\n * @since 2.9.0\n */\nexport var unprepend = function (as) { return [head(as), tail(as)]; };\n/**\n * Return the tuple of the `init` and the `last`.\n *\n * @example\n * import { unappend } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(unappend([1, 2, 3, 4]), [[1, 2, 3], 4])\n *\n * @category destructors\n * @since 2.9.0\n */\nexport var unappend = function (as) { return [init(as), last(as)]; };\n// -------------------------------------------------------------------------------------\n// interop\n// -------------------------------------------------------------------------------------\n/**\n * @category interop\n * @since 2.5.0\n */\nexport var fromArray = function (as) { return fromReadonlyArray(as.slice()); };\nexport function concatW(second) {\n    return function (first) { return first.concat(second); };\n}\nexport function concat(x, y) {\n    return y ? x.concat(y) : function (y) { return y.concat(x); };\n}\n/**\n * @category combinators\n * @since 2.5.0\n */\nexport var reverse = function (as) {\n    return as.length === 1 ? as : __spreadArray([last(as)], as.slice(0, -1).reverse());\n};\nexport function group(E) {\n    return function (as) {\n        var len = as.length;\n        if (len === 0) {\n            return empty;\n        }\n        var out = [];\n        var head = as[0];\n        var nea = [head];\n        for (var i = 1; i < len; i++) {\n            var a = as[i];\n            if (E.equals(a, head)) {\n                nea.push(a);\n            }\n            else {\n                out.push(nea);\n                head = a;\n                nea = [head];\n            }\n        }\n        out.push(nea);\n        return out;\n    };\n}\n/**\n * Splits an array into sub-non-empty-arrays stored in an object, based on the result of calling a `string`-returning\n * function on each element, and grouping the results according to values returned\n *\n * @example\n * import { groupBy } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(groupBy((s: string) => String(s.length))(['a', 'b', 'ab']), {\n *   '1': ['a', 'b'],\n *   '2': ['ab']\n * })\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var groupBy = function (f) { return function (as) {\n    var out = {};\n    for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n        var a = as_1[_i];\n        var k = f(a);\n        if (out.hasOwnProperty(k)) {\n            out[k].push(a);\n        }\n        else {\n            out[k] = [a];\n        }\n    }\n    return out;\n}; };\n/**\n * @category combinators\n * @since 2.5.0\n */\nexport var sort = function (O) { return function (as) {\n    return as.length === 1 ? as : as.slice().sort(O.compare);\n}; };\n/**\n * @category combinators\n * @since 2.5.0\n */\nexport var updateAt = function (i, a) {\n    return modifyAt(i, function () { return a; });\n};\n/**\n * @category combinators\n * @since 2.5.0\n */\nexport var modifyAt = function (i, f) { return function (as) { return (isOutOfBound(i, as) ? _.none : _.some(unsafeUpdateAt(i, f(as[i]), as))); }; };\n/**\n * @category combinators\n * @since 2.5.1\n */\nexport var zipWith = function (as, bs, f) {\n    var cs = [f(as[0], bs[0])];\n    var len = Math.min(as.length, bs.length);\n    for (var i = 1; i < len; i++) {\n        cs[i] = f(as[i], bs[i]);\n    }\n    return cs;\n};\nexport function zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return zipWith(as, bs, function (a, b) { return [a, b]; });\n}\n/**\n * @category combinators\n * @since 2.5.1\n */\nexport var unzip = function (abs) {\n    var fa = [abs[0][0]];\n    var fb = [abs[0][1]];\n    for (var i = 1; i < abs.length; i++) {\n        fa[i] = abs[i][0];\n        fb[i] = abs[i][1];\n    }\n    return [fa, fb];\n};\n/**\n * Prepend an element to every member of a `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { prependAll } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var prependAll = function (middle) { return function (as) {\n    var out = [middle, as[0]];\n    for (var i = 1; i < as.length; i++) {\n        out.push(middle, as[i]);\n    }\n    return out;\n}; };\n/**\n * Places an element in between members of a `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { intersperse } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\nexport var intersperse = function (middle) { return function (as) {\n    var rest = tail(as);\n    return isNonEmpty(rest) ? pipe(rest, prependAll(middle), prepend(head(as))) : as;\n}; };\n/**\n * @category combinators\n * @since 2.10.0\n */\nexport var chainWithIndex = function (f) { return function (as) {\n    var out = _.fromReadonlyNonEmptyArray(f(0, head(as)));\n    for (var i = 1; i < as.length; i++) {\n        out.push.apply(out, f(i, as[i]));\n    }\n    return out;\n}; };\n/**\n * A useful recursion pattern for processing a `ReadonlyNonEmptyArray` to produce a new `ReadonlyNonEmptyArray`, often used for \"chopping\" up the input\n * `ReadonlyNonEmptyArray`. Typically `chop` is called with some function that will consume an initial prefix of the `ReadonlyNonEmptyArray` and produce a\n * value and the tail of the `ReadonlyNonEmptyArray`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var chop = function (f) { return function (as) {\n    var _a = f(as), b = _a[0], rest = _a[1];\n    var out = [b];\n    var next = rest;\n    while (isNonEmpty(next)) {\n        var _b = f(next), b_1 = _b[0], rest_2 = _b[1];\n        out.push(b_1);\n        next = rest_2;\n    }\n    return out;\n}; };\n/**\n * Splits a `ReadonlyNonEmptyArray` into two pieces, the first piece has max `n` elements.\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var splitAt = function (n) { return function (as) {\n    var m = Math.max(1, n);\n    return m >= as.length ? [as, empty] : [pipe(as.slice(1, m), prepend(head(as))), as.slice(m)];\n}; };\n/**\n * Splits a `ReadonlyNonEmptyArray` into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the `ReadonlyNonEmptyArray`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var chunksOf = function (n) { return chop(splitAt(n)); };\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return pipe(fa, map(f)); };\n/* istanbul ignore next */\nvar _mapWithIndex = function (fa, f) { return pipe(fa, mapWithIndex(f)); };\nvar _ap = function (fab, fa) { return pipe(fab, ap(fa)); };\nvar _chain = function (ma, f) { return pipe(ma, chain(f)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return pipe(wa, extend(f)); };\n/* istanbul ignore next */\nvar _reduce = function (fa, b, f) { return pipe(fa, reduce(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) {\n    var foldMapM = foldMap(M);\n    return function (fa, f) { return pipe(fa, foldMapM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return pipe(fa, reduceRight(b, f)); };\n/* istanbul ignore next */\nvar _traverse = function (F) {\n    var traverseF = traverse(F);\n    return function (ta, f) { return pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return pipe(fa, alt(that)); };\n/* istanbul ignore next */\nvar _reduceWithIndex = function (fa, b, f) {\n    return pipe(fa, reduceWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = foldMapWithIndex(M);\n    return function (fa, f) { return pipe(fa, foldMapWithIndexM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return pipe(fa, reduceRightWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (ta, f) { return pipe(ta, traverseWithIndexF(f)); };\n};\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * @category Pointed\n * @since 2.5.0\n */\nexport var of = _.singleton;\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nexport var altW = function (that) { return function (as) { return pipe(as, concatW(that())); }; };\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.6.2\n */\nexport var alt = altW;\n/**\n * @category Apply\n * @since 2.5.0\n */\nexport var ap = function (as) { return chain(function (f) { return pipe(as, map(f)); }); };\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.5.0\n */\nexport var chain = function (f) { return chainWithIndex(function (_, a) { return f(a); }); };\n/**\n * @category Extend\n * @since 2.5.0\n */\nexport var extend = function (f) { return function (as) {\n    var next = tail(as);\n    var out = [f(as)];\n    while (isNonEmpty(next)) {\n        out.push(f(next));\n        next = tail(next);\n    }\n    return out;\n}; };\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var duplicate = \n/*#__PURE__*/\nextend(identity);\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var flatten = \n/*#__PURE__*/\nchain(identity);\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.5.0\n */\nexport var map = function (f) {\n    return mapWithIndex(function (_, a) { return f(a); });\n};\n/**\n * @category FunctorWithIndex\n * @since 2.5.0\n */\nexport var mapWithIndex = function (f) { return function (as) {\n    var out = [f(0, head(as))];\n    for (var i = 1; i < as.length; i++) {\n        out.push(f(i, as[i]));\n    }\n    return out;\n}; };\n/**\n * @category Foldable\n * @since 2.5.0\n */\nexport var reduce = function (b, f) {\n    return reduceWithIndex(b, function (_, b, a) { return f(b, a); });\n};\n/**\n * **Note**. The constraint is relaxed: a `Semigroup` instead of a `Monoid`.\n *\n * @category Foldable\n * @since 2.5.0\n */\nexport var foldMap = function (S) { return function (f) { return function (as) {\n    return as.slice(1).reduce(function (s, a) { return S.concat(s, f(a)); }, f(as[0]));\n}; }; };\n/**\n * @category Foldable\n * @since 2.5.0\n */\nexport var reduceRight = function (b, f) {\n    return reduceRightWithIndex(b, function (_, b, a) { return f(b, a); });\n};\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nexport var reduceWithIndex = function (b, f) { return function (as) {\n    return as.reduce(function (b, a, i) { return f(i, b, a); }, b);\n}; };\n/**\n * **Note**. The constraint is relaxed: a `Semigroup` instead of a `Monoid`.\n *\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nexport var foldMapWithIndex = function (S) { return function (f) { return function (as) { return as.slice(1).reduce(function (s, a, i) { return S.concat(s, f(i + 1, a)); }, f(0, as[0])); }; }; };\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nexport var reduceRightWithIndex = function (b, f) { return function (as) { return as.reduceRight(function (b, a, i) { return f(i, a, b); }, b); }; };\n/**\n * @category Traversable\n * @since 2.6.3\n */\nexport var traverse = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\n/**\n * @category Traversable\n * @since 2.6.3\n */\nexport var sequence = function (F) { return traverseWithIndex(F)(SK); };\n/**\n * @category TraversableWithIndex\n * @since 2.6.3\n */\nexport var traverseWithIndex = function (F) { return function (f) { return function (as) {\n    var out = F.map(f(0, head(as)), of);\n    for (var i = 1; i < as.length; i++) {\n        out = F.ap(F.map(out, function (bs) { return function (b) { return pipe(bs, append(b)); }; }), f(i, as[i]));\n    }\n    return out;\n}; }; };\n/**\n * @category Comonad\n * @since 2.6.3\n */\nexport var extract = _.head;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.5.0\n */\nexport var URI = 'ReadonlyNonEmptyArray';\n/**\n * @category instances\n * @since 2.5.0\n */\nexport var getShow = function (S) { return ({\n    show: function (as) { return \"[\" + as.map(S.show).join(', ') + \"]\"; }\n}); };\n/**\n * Builds a `Semigroup` instance for `ReadonlyNonEmptyArray`\n *\n * @category instances\n * @since 2.5.0\n */\nexport var getSemigroup = function () { return ({\n    concat: concat\n}); };\n/**\n * @example\n * import { getEq } from 'fp-ts/ReadonlyNonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * const E = getEq(N.Eq)\n * assert.strictEqual(E.equals([1, 2], [1, 2]), true)\n * assert.strictEqual(E.equals([1, 2], [1, 3]), false)\n *\n * @category instances\n * @since 2.5.0\n */\nexport var getEq = function (E) {\n    return fromEquals(function (xs, ys) { return xs.length === ys.length && xs.every(function (x, i) { return E.equals(x, ys[i]); }); });\n};\n/**\n * @category combinators\n * @since 2.11.0\n */\nexport var getUnionSemigroup = function (E) {\n    var unionE = union(E);\n    return {\n        concat: function (first, second) { return unionE(second)(first); }\n    };\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var flap = \n/*#__PURE__*/\nflap_(Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Pointed = {\n    URI: URI,\n    of: of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FunctorWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Apply = {\n    URI: URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var apFirst = \n/*#__PURE__*/\napFirst_(Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var apSecond = \n/*#__PURE__*/\napSecond_(Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Chain = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var chainFirst = \n/*#__PURE__*/\nchainFirst_(Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FoldableWithIndex = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n    URI: URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var TraversableWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n    URI: URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Comonad = {\n    URI: URI,\n    map: _map,\n    extend: _extend,\n    extract: extract\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexport var Do = \n/*#__PURE__*/\nof(_.emptyRecord);\n/**\n * @since 2.8.0\n */\nexport var bindTo = \n/*#__PURE__*/\nbindTo_(Functor);\n/**\n * @since 2.8.0\n */\nexport var bind = \n/*#__PURE__*/\nbind_(Chain);\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexport var apS = \n/*#__PURE__*/\napS_(Apply);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.5.0\n */\nexport var head = extract;\n/**\n * @since 2.5.0\n */\nexport var tail = _.tail;\n/**\n * @since 2.5.0\n */\nexport var last = function (as) { return as[as.length - 1]; };\n/**\n * Get all but the last element of a non empty array, creating a new array.\n *\n * @example\n * import { init } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), [1, 2])\n * assert.deepStrictEqual(init([1]), [])\n *\n * @since 2.5.0\n */\nexport var init = function (as) { return as.slice(0, -1); };\n/**\n * @since 2.5.0\n */\nexport var min = function (O) {\n    var S = Se.min(O);\n    return function (as) { return as.reduce(S.concat); };\n};\n/**\n * @since 2.5.0\n */\nexport var max = function (O) {\n    var S = Se.max(O);\n    return function (as) { return as.reduce(S.concat); };\n};\n/**\n * @since 2.10.0\n */\nexport var concatAll = function (S) { return function (as) { return as.reduce(S.concat); }; };\n/**\n * Break a `ReadonlyArray` into its first element and remaining elements.\n *\n * @category destructors\n * @since 2.11.0\n */\nexport var matchLeft = function (f) { return function (as) {\n    return f(head(as), tail(as));\n}; };\n/**\n * Break a `ReadonlyArray` into its initial elements and the last element.\n *\n * @category destructors\n * @since 2.11.0\n */\nexport var matchRight = function (f) { return function (as) {\n    return f(init(as), last(as));\n}; };\n/**\n * Apply a function to the head, creating a new `ReadonlyNonEmptyArray`.\n *\n * @since 2.11.0\n */\nexport var modifyHead = function (f) { return function (as) { return __spreadArray([\n    f(head(as))\n], tail(as)); }; };\n/**\n * Change the head, creating a new `ReadonlyNonEmptyArray`.\n *\n * @category combinators\n * @since 2.11.0\n */\nexport var updateHead = function (a) { return modifyHead(function () { return a; }); };\n/**\n * Apply a function to the last element, creating a new `ReadonlyNonEmptyArray`.\n *\n * @since 2.11.0\n */\nexport var modifyLast = function (f) { return function (as) {\n    return pipe(init(as), append(f(last(as))));\n}; };\n/**\n * Change the last element, creating a new `ReadonlyNonEmptyArray`.\n *\n * @category combinators\n * @since 2.11.0\n */\nexport var updateLast = function (a) { return modifyLast(function () { return a; }); };\n/**\n * Places an element in between members of a `ReadonlyNonEmptyArray`, then folds the results using the provided `Semigroup`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { intercalate } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(intercalate(S.Semigroup)('-')(['a', 'b', 'c']), 'a-b-c')\n *\n * @since 2.12.0\n */\nexport var intercalate = function (S) {\n    var concatAllS = concatAll(S);\n    return function (middle) { return flow(intersperse(middle), concatAllS); };\n};\nexport function groupSort(O) {\n    var sortO = sort(O);\n    var groupO = group(O);\n    return function (as) { return (isNonEmpty(as) ? groupO(sortO(as)) : empty); };\n}\nexport function filter(predicate) {\n    return filterWithIndex(function (_, a) { return predicate(a); });\n}\n/**\n * Use [`filterWithIndex`](./ReadonlyArray.ts.html#filterwithindex) instead.\n *\n * @category combinators\n * @since 2.5.0\n * @deprecated\n */\nexport var filterWithIndex = function (predicate) { return function (as) { return fromReadonlyArray(as.filter(function (a, i) { return predicate(i, a); })); }; };\n/**\n * Use [`unprepend`](#unprepend) instead.\n *\n * @category destructors\n * @since 2.10.0\n * @deprecated\n */\nexport var uncons = unprepend;\n/**\n * Use [`unappend`](#unappend) instead.\n *\n * @category destructors\n * @since 2.10.0\n * @deprecated\n */\nexport var unsnoc = unappend;\nexport function cons(head, tail) {\n    return tail === undefined ? prepend(head) : pipe(tail, prepend(head));\n}\n/**\n * Use [`append`](./ReadonlyArray.ts.html#append) instead.\n *\n * @category constructors\n * @since 2.5.0\n * @deprecated\n */\nexport var snoc = function (init, end) { return pipe(init, concat([end])); };\n/**\n * Use [`insertAt`](./ReadonlyArray.ts.html#insertat) instead.\n *\n * @category combinators\n * @since 2.5.0\n * @deprecated\n */\nexport var insertAt = function (i, a) { return function (as) {\n    return i < 0 || i > as.length ? _.none : _.some(unsafeInsertAt(i, a, as));\n}; };\n/**\n * Use [`prependAll`](#prependall) instead.\n *\n * @category combinators\n * @since 2.9.0\n * @deprecated\n */\nexport var prependToAll = prependAll;\n/**\n * Use [`concatAll`](#concatall) instead.\n *\n * @since 2.5.0\n * @deprecated\n */\nexport var fold = concatAll;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.5.0\n * @deprecated\n */\nexport var readonlyNonEmptyArray = {\n    URI: URI,\n    of: of,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    ap: _ap,\n    chain: _chain,\n    extend: _extend,\n    extract: extract,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    alt: _alt\n};\n","var __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nimport { apFirst as apFirst_, apS as apS_, apSecond as apSecond_ } from './Apply';\nimport { bind as bind_, chainFirst as chainFirst_ } from './Chain';\nimport { identity, pipe } from './function';\nimport { bindTo as bindTo_, flap as flap_ } from './Functor';\nimport * as _ from './internal';\nimport { getMonoid } from './Ord';\nimport * as RNEA from './ReadonlyNonEmptyArray';\n// -------------------------------------------------------------------------------------\n// internal\n// -------------------------------------------------------------------------------------\n/**\n * @internal\n */\nexport var isNonEmpty = function (as) { return as.length > 0; };\n/**\n * @internal\n */\nexport var isOutOfBound = function (i, as) { return i < 0 || i >= as.length; };\n/**\n * @internal\n */\nexport var prependW = function (head) { return function (tail) { return __spreadArray([head], tail); }; };\n/**\n * @internal\n */\nexport var prepend = prependW;\n/**\n * @internal\n */\nexport var appendW = function (end) { return function (init) { return __spreadArray(__spreadArray([], init), [end]); }; };\n/**\n * @internal\n */\nexport var append = appendW;\n/**\n * @internal\n */\nexport var unsafeInsertAt = function (i, a, as) {\n    if (isNonEmpty(as)) {\n        var xs = fromReadonlyNonEmptyArray(as);\n        xs.splice(i, 0, a);\n        return xs;\n    }\n    return [a];\n};\n/**\n * @internal\n */\nexport var unsafeUpdateAt = function (i, a, as) {\n    var xs = fromReadonlyNonEmptyArray(as);\n    xs[i] = a;\n    return xs;\n};\n/**\n * Remove duplicates from a `NonEmptyArray`, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/NonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.11.0\n */\nexport var uniq = function (E) { return function (as) {\n    if (as.length === 1) {\n        return copy(as);\n    }\n    var out = [head(as)];\n    var rest = tail(as);\n    var _loop_1 = function (a) {\n        if (out.every(function (o) { return !E.equals(o, a); })) {\n            out.push(a);\n        }\n    };\n    for (var _i = 0, rest_1 = rest; _i < rest_1.length; _i++) {\n        var a = rest_1[_i];\n        _loop_1(a);\n    }\n    return out;\n}; };\n/**\n * Sort the elements of a `NonEmptyArray` in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import * as NEA from 'fp-ts/NonEmptyArray'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   name: string\n *   age: number\n * }\n *\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n *\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = NEA.sortBy([byName, byAge])\n *\n * const persons: NEA.NonEmptyArray<Person> = [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 },\n *   { name: 'b', age: 2 }\n * ]\n *\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.11.0\n */\nexport var sortBy = function (ords) {\n    if (isNonEmpty(ords)) {\n        var M = getMonoid();\n        return sort(ords.reduce(M.concat, M.empty));\n    }\n    return copy;\n};\n/**\n * @category combinators\n * @since 2.11.0\n */\nexport var union = function (E) {\n    var uniqE = uniq(E);\n    return function (second) { return function (first) { return uniqE(pipe(first, concat(second))); }; };\n};\n/**\n * Rotate a `NonEmptyArray` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n * assert.deepStrictEqual(rotate(-2)([1, 2, 3, 4, 5]), [3, 4, 5, 1, 2])\n *\n * @category combinators\n * @since 2.11.0\n */\nexport var rotate = function (n) { return function (as) {\n    var len = as.length;\n    var m = Math.round(n) % len;\n    if (isOutOfBound(Math.abs(m), as) || m === 0) {\n        return copy(as);\n    }\n    if (m < 0) {\n        var _a = splitAt(-m)(as), f = _a[0], s = _a[1];\n        return pipe(s, concat(f));\n    }\n    else {\n        return rotate(m - len)(as);\n    }\n}; };\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.10.0\n */\nexport var fromReadonlyNonEmptyArray = _.fromReadonlyNonEmptyArray;\n/**\n * Builds a `NonEmptyArray` from an `Array` returning `none` if `as` is an empty array\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var fromArray = function (as) { return (isNonEmpty(as) ? _.some(as) : _.none); };\n/**\n * Return a `NonEmptyArray` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { makeBy } from 'fp-ts/NonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(pipe(5, makeBy(double)), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.11.0\n */\nexport var makeBy = function (f) { return function (n) {\n    var j = Math.max(0, Math.floor(n));\n    var out = [f(0)];\n    for (var i = 1; i < j; i++) {\n        out.push(f(i));\n    }\n    return out;\n}; };\n/**\n * Create a `NonEmptyArray` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { replicate } from 'fp-ts/NonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(3, replicate('a')), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.11.0\n */\nexport var replicate = function (a) { return makeBy(function () { return a; }); };\n/**\n * Create a `NonEmptyArray` containing a range of integers, including both endpoints.\n *\n * @example\n * import { range } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.11.0\n */\nexport var range = function (start, end) {\n    return start <= end ? makeBy(function (i) { return start + i; })(end - start + 1) : [start];\n};\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * Return the tuple of the `head` and the `tail`.\n *\n * @example\n * import { unprepend } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(unprepend([1, 2, 3]), [1, [2, 3]])\n *\n * @category destructors\n * @since 2.9.0\n */\nexport var unprepend = function (as) { return [head(as), tail(as)]; };\n/**\n * Return the tuple of the `init` and the `last`.\n *\n * @example\n * import { unappend } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(unappend([1, 2, 3, 4]), [[1, 2, 3], 4])\n *\n * @category destructors\n * @since 2.9.0\n */\nexport var unappend = function (as) { return [init(as), last(as)]; };\nexport function concatW(second) {\n    return function (first) { return first.concat(second); };\n}\nexport function concat(x, y) {\n    return y ? x.concat(y) : function (y) { return y.concat(x); };\n}\n/**\n * @category combinators\n * @since 2.0.0\n */\nexport var reverse = function (as) { return __spreadArray([last(as)], as.slice(0, -1).reverse()); };\nexport function group(E) {\n    return function (as) {\n        var len = as.length;\n        if (len === 0) {\n            return [];\n        }\n        var out = [];\n        var head = as[0];\n        var nea = [head];\n        for (var i = 1; i < len; i++) {\n            var a = as[i];\n            if (E.equals(a, head)) {\n                nea.push(a);\n            }\n            else {\n                out.push(nea);\n                head = a;\n                nea = [head];\n            }\n        }\n        out.push(nea);\n        return out;\n    };\n}\n/**\n * Splits an array into sub-non-empty-arrays stored in an object, based on the result of calling a `string`-returning\n * function on each element, and grouping the results according to values returned\n *\n * @example\n * import { groupBy } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(groupBy((s: string) => String(s.length))(['a', 'b', 'ab']), {\n *   '1': ['a', 'b'],\n *   '2': ['ab']\n * })\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var groupBy = function (f) { return function (as) {\n    var out = {};\n    for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n        var a = as_1[_i];\n        var k = f(a);\n        if (out.hasOwnProperty(k)) {\n            out[k].push(a);\n        }\n        else {\n            out[k] = [a];\n        }\n    }\n    return out;\n}; };\n/**\n * @category combinators\n * @since 2.0.0\n */\nexport var sort = function (O) { return function (as) {\n    return as.slice().sort(O.compare);\n}; };\n/**\n * @category combinators\n * @since 2.0.0\n */\nexport var insertAt = function (i, a) { return function (as) {\n    return i < 0 || i > as.length ? _.none : _.some(unsafeInsertAt(i, a, as));\n}; };\n/**\n * @category combinators\n * @since 2.0.0\n */\nexport var updateAt = function (i, a) {\n    return modifyAt(i, function () { return a; });\n};\n/**\n * @category combinators\n * @since 2.0.0\n */\nexport var modifyAt = function (i, f) { return function (as) {\n    return isOutOfBound(i, as) ? _.none : _.some(unsafeUpdateAt(i, f(as[i]), as));\n}; };\n/**\n * @category combinators\n * @since 2.0.0\n */\nexport var copy = fromReadonlyNonEmptyArray;\n/**\n * @category Pointed\n * @since 2.0.0\n */\nexport var of = function (a) { return [a]; };\n/**\n * @category combinators\n * @since 2.5.1\n */\nexport var zipWith = function (as, bs, f) {\n    var cs = [f(as[0], bs[0])];\n    var len = Math.min(as.length, bs.length);\n    for (var i = 1; i < len; i++) {\n        cs[i] = f(as[i], bs[i]);\n    }\n    return cs;\n};\nexport function zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return zipWith(as, bs, function (a, b) { return [a, b]; });\n}\n/**\n * @category combinators\n * @since 2.5.1\n */\nexport var unzip = function (abs) {\n    var fa = [abs[0][0]];\n    var fb = [abs[0][1]];\n    for (var i = 1; i < abs.length; i++) {\n        fa[i] = abs[i][0];\n        fb[i] = abs[i][1];\n    }\n    return [fa, fb];\n};\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { prependAll } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var prependAll = function (middle) { return function (as) {\n    var out = [middle, as[0]];\n    for (var i = 1; i < as.length; i++) {\n        out.push(middle, as[i]);\n    }\n    return out;\n}; };\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { intersperse } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\nexport var intersperse = function (middle) { return function (as) {\n    var rest = tail(as);\n    return isNonEmpty(rest) ? pipe(rest, prependAll(middle), prepend(head(as))) : copy(as);\n}; };\n/**\n * @category combinators\n * @since 2.0.0\n */\nexport var foldMapWithIndex = RNEA.foldMapWithIndex;\n/**\n * @category combinators\n * @since 2.0.0\n */\nexport var foldMap = RNEA.foldMap;\n/**\n * @category combinators\n * @since 2.10.0\n */\nexport var chainWithIndex = function (f) { return function (as) {\n    var out = fromReadonlyNonEmptyArray(f(0, head(as)));\n    for (var i = 1; i < as.length; i++) {\n        out.push.apply(out, f(i, as[i]));\n    }\n    return out;\n}; };\n/**\n * @category combinators\n * @since 2.10.0\n */\nexport var chop = function (f) { return function (as) {\n    var _a = f(as), b = _a[0], rest = _a[1];\n    var out = [b];\n    var next = rest;\n    while (isNonEmpty(next)) {\n        var _b = f(next), b_1 = _b[0], rest_2 = _b[1];\n        out.push(b_1);\n        next = rest_2;\n    }\n    return out;\n}; };\n/**\n * Splits a `NonEmptyArray` into two pieces, the first piece has max `n` elements.\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var splitAt = function (n) { return function (as) {\n    var m = Math.max(1, n);\n    return m >= as.length ? [copy(as), []] : [pipe(as.slice(1, m), prepend(head(as))), as.slice(m)];\n}; };\n/**\n * @category combinators\n * @since 2.10.0\n */\nexport var chunksOf = function (n) { return chop(splitAt(n)); };\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n/* istanbul ignore next */\nvar _map = function (fa, f) { return pipe(fa, map(f)); };\n/* istanbul ignore next */\nvar _mapWithIndex = function (fa, f) { return pipe(fa, mapWithIndex(f)); };\n/* istanbul ignore next */\nvar _ap = function (fab, fa) { return pipe(fab, ap(fa)); };\n/* istanbul ignore next */\nvar _chain = function (ma, f) { return pipe(ma, chain(f)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return pipe(wa, extend(f)); };\n/* istanbul ignore next */\nvar _reduce = function (fa, b, f) { return pipe(fa, reduce(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) {\n    var foldMapM = foldMap(M);\n    return function (fa, f) { return pipe(fa, foldMapM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return pipe(fa, reduceRight(b, f)); };\n/* istanbul ignore next */\nvar _traverse = function (F) {\n    var traverseF = traverse(F);\n    return function (ta, f) { return pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return pipe(fa, alt(that)); };\n/* istanbul ignore next */\nvar _reduceWithIndex = function (fa, b, f) {\n    return pipe(fa, reduceWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = foldMapWithIndex(M);\n    return function (fa, f) { return pipe(fa, foldMapWithIndexM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return pipe(fa, reduceRightWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (ta, f) { return pipe(ta, traverseWithIndexF(f)); };\n};\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nexport var altW = function (that) { return function (as) {\n    return pipe(as, concatW(that()));\n}; };\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.6.2\n */\nexport var alt = altW;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.0.0\n */\nexport var ap = function (as) {\n    return chain(function (f) { return pipe(as, map(f)); });\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.0.0\n */\nexport var chain = function (f) {\n    return chainWithIndex(function (_, a) { return f(a); });\n};\n/**\n * @category Extend\n * @since 2.0.0\n */\nexport var extend = function (f) { return function (as) {\n    var next = tail(as);\n    var out = [f(as)];\n    while (isNonEmpty(next)) {\n        out.push(f(next));\n        next = tail(next);\n    }\n    return out;\n}; };\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var duplicate = \n/*#__PURE__*/\nextend(identity);\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var flatten = \n/*#__PURE__*/\nchain(identity);\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\nexport var map = function (f) { return mapWithIndex(function (_, a) { return f(a); }); };\n/**\n * @category FunctorWithIndex\n * @since 2.0.0\n */\nexport var mapWithIndex = function (f) { return function (as) {\n    var out = [f(0, head(as))];\n    for (var i = 1; i < as.length; i++) {\n        out.push(f(i, as[i]));\n    }\n    return out;\n}; };\n/**\n * @category Foldable\n * @since 2.0.0\n */\nexport var reduce = RNEA.reduce;\n/**\n * @category FoldableWithIndex\n * @since 2.0.0\n */\nexport var reduceWithIndex = RNEA.reduceWithIndex;\n/**\n * @category Foldable\n * @since 2.0.0\n */\nexport var reduceRight = RNEA.reduceRight;\n/**\n * @category FoldableWithIndex\n * @since 2.0.0\n */\nexport var reduceRightWithIndex = RNEA.reduceRightWithIndex;\n/**\n * @since 2.6.3\n */\nexport var traverse = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\n/**\n * @since 2.6.3\n */\nexport var sequence = function (F) { return traverseWithIndex(F)(function (_, a) { return a; }); };\n/**\n * @since 2.6.3\n */\nexport var traverseWithIndex = function (F) { return function (f) { return function (as) {\n    var out = F.map(f(0, head(as)), of);\n    for (var i = 1; i < as.length; i++) {\n        out = F.ap(F.map(out, function (bs) { return function (b) { return pipe(bs, append(b)); }; }), f(i, as[i]));\n    }\n    return out;\n}; }; };\n/**\n * @since 2.7.0\n */\nexport var extract = RNEA.head;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var URI = 'NonEmptyArray';\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var getShow = RNEA.getShow;\n/**\n * Builds a `Semigroup` instance for `NonEmptyArray`\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getSemigroup = function () { return ({\n    concat: concat\n}); };\n/**\n * @example\n * import { getEq } from 'fp-ts/NonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * const E = getEq(N.Eq)\n * assert.strictEqual(E.equals([1, 2], [1, 2]), true)\n * assert.strictEqual(E.equals([1, 2], [1, 3]), false)\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getEq = RNEA.getEq;\n/**\n * @category combinators\n * @since 2.11.0\n */\nexport var getUnionSemigroup = function (E) {\n    var unionE = union(E);\n    return {\n        concat: function (first, second) { return unionE(second)(first); }\n    };\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var flap = \n/*#__PURE__*/\nflap_(Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Pointed = {\n    URI: URI,\n    of: of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FunctorWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Apply = {\n    URI: URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var apFirst = \n/*#__PURE__*/\napFirst_(Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var apSecond = \n/*#__PURE__*/\napSecond_(Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Chain = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var chainFirst = \n/*#__PURE__*/\nchainFirst_(Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FoldableWithIndex = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n    URI: URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var TraversableWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n    URI: URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Comonad = {\n    URI: URI,\n    map: _map,\n    extend: _extend,\n    extract: extract\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexport var Do = \n/*#__PURE__*/\nof(_.emptyRecord);\n/**\n * @since 2.8.0\n */\nexport var bindTo = \n/*#__PURE__*/\nbindTo_(Functor);\n/**\n * @since 2.8.0\n */\nexport var bind = \n/*#__PURE__*/\nbind_(Chain);\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexport var apS = \n/*#__PURE__*/\napS_(Apply);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.0.0\n */\nexport var head = RNEA.head;\n/**\n * @since 2.0.0\n */\nexport var tail = function (as) { return as.slice(1); };\n/**\n * @since 2.0.0\n */\nexport var last = RNEA.last;\n/**\n * Get all but the last element of a non empty array, creating a new array.\n *\n * @example\n * import { init } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), [1, 2])\n * assert.deepStrictEqual(init([1]), [])\n *\n * @since 2.2.0\n */\nexport var init = function (as) { return as.slice(0, -1); };\n/**\n * @since 2.0.0\n */\nexport var min = RNEA.min;\n/**\n * @since 2.0.0\n */\nexport var max = RNEA.max;\n/**\n * @since 2.10.0\n */\nexport var concatAll = function (S) { return function (as) { return as.reduce(S.concat); }; };\n/**\n * Break an `Array` into its first element and remaining elements.\n *\n * @category destructors\n * @since 2.11.0\n */\nexport var matchLeft = function (f) { return function (as) { return f(head(as), tail(as)); }; };\n/**\n * Break an `Array` into its initial elements and the last element.\n *\n * @category destructors\n * @since 2.11.0\n */\nexport var matchRight = function (f) { return function (as) {\n    return f(init(as), last(as));\n}; };\n/**\n * Apply a function to the head, creating a new `NonEmptyArray`.\n *\n * @since 2.11.0\n */\nexport var modifyHead = function (f) { return function (as) { return __spreadArray([\n    f(head(as))\n], tail(as)); }; };\n/**\n * Change the head, creating a new `NonEmptyArray`.\n *\n * @category combinators\n * @since 2.11.0\n */\nexport var updateHead = function (a) { return modifyHead(function () { return a; }); };\n/**\n * Apply a function to the last element, creating a new `NonEmptyArray`.\n *\n * @since 2.11.0\n */\nexport var modifyLast = function (f) { return function (as) {\n    return pipe(init(as), append(f(last(as))));\n}; };\n/**\n * Change the last element, creating a new `NonEmptyArray`.\n *\n * @category combinators\n * @since 2.11.0\n */\nexport var updateLast = function (a) { return modifyLast(function () { return a; }); };\n/**\n * Places an element in between members of a `NonEmptyArray`, then folds the results using the provided `Semigroup`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { intercalate } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(intercalate(S.Semigroup)('-')(['a', 'b', 'c']), 'a-b-c')\n *\n * @since 2.12.0\n */\nexport var intercalate = RNEA.intercalate;\nexport function groupSort(O) {\n    var sortO = sort(O);\n    var groupO = group(O);\n    return function (as) { return (isNonEmpty(as) ? groupO(sortO(as)) : []); };\n}\nexport function filter(predicate) {\n    return filterWithIndex(function (_, a) { return predicate(a); });\n}\n/**\n * Use [`filterWithIndex`](./Array.ts.html#filterwithindex) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexport var filterWithIndex = function (predicate) { return function (as) { return fromArray(as.filter(function (a, i) { return predicate(i, a); })); }; };\n/**\n * Use [`unprepend`](#unprepend) instead.\n *\n * @category destructors\n * @since 2.9.0\n * @deprecated\n */\nexport var uncons = unprepend;\n/**\n * Use [`unappend`](#unappend) instead.\n *\n * @category destructors\n * @since 2.9.0\n * @deprecated\n */\nexport var unsnoc = unappend;\nexport function cons(head, tail) {\n    return tail === undefined ? prepend(head) : pipe(tail, prepend(head));\n}\n/**\n * Use [`append`](./Array.ts.html#append) instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nexport var snoc = function (init, end) { return pipe(init, append(end)); };\n/**\n * Use [`prependAll`](#prependall) instead.\n *\n * @category combinators\n * @since 2.9.0\n * @deprecated\n */\nexport var prependToAll = prependAll;\n/**\n * Use [`concatAll`](#concatall) instead.\n *\n * @since 2.5.0\n * @deprecated\n */\nexport var fold = RNEA.concatAll;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var nonEmptyArray = {\n    URI: URI,\n    of: of,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    ap: _ap,\n    chain: _chain,\n    extend: _extend,\n    extract: extract,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    alt: _alt\n};\n","// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * @category refinements\n * @since 2.11.0\n */\nexport var isNumber = function (u) { return typeof u === 'number'; };\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Eq = {\n    equals: function (first, second) { return first === second; }\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Ord = {\n    equals: Eq.equals,\n    compare: function (first, second) { return (first < second ? -1 : first > second ? 1 : 0); }\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Bounded = {\n    equals: Eq.equals,\n    compare: Ord.compare,\n    top: Infinity,\n    bottom: -Infinity\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Show = {\n    show: function (n) { return JSON.stringify(n); }\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var MagmaSub = {\n    concat: function (first, second) { return first - second; }\n};\n/**\n * `number` semigroup under addition.\n *\n * @example\n * import { SemigroupSum } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(SemigroupSum.concat(2, 3), 5)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var SemigroupSum = {\n    concat: function (first, second) { return first + second; }\n};\n/**\n * `number` semigroup under multiplication.\n *\n * @example\n * import { SemigroupProduct } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(SemigroupProduct.concat(2, 3), 6)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var SemigroupProduct = {\n    concat: function (first, second) { return first * second; }\n};\n/**\n * `number` monoid under addition.\n *\n * The `empty` value is `0`.\n *\n * @example\n * import { MonoidSum } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(MonoidSum.concat(2, MonoidSum.empty), 2)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var MonoidSum = {\n    concat: SemigroupSum.concat,\n    empty: 0\n};\n/**\n * `number` monoid under multiplication.\n *\n * The `empty` value is `1`.\n *\n * @example\n * import { MonoidProduct } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(MonoidProduct.concat(2, MonoidProduct.empty), 2)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var MonoidProduct = {\n    concat: SemigroupProduct.concat,\n    empty: 1\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Field = {\n    add: SemigroupSum.concat,\n    zero: 0,\n    mul: SemigroupProduct.concat,\n    one: 1,\n    sub: MagmaSub.concat,\n    degree: function (_) { return 1; },\n    div: function (first, second) { return first / second; },\n    mod: function (first, second) { return first % second; }\n};\n","export function guard(F, P) {\n    return function (b) { return (b ? P.of(undefined) : F.zero()); };\n}\n","var __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nimport { apFirst as apFirst_, apS as apS_, apSecond as apSecond_ } from './Apply';\nimport { bind as bind_, chainFirst as chainFirst_ } from './Chain';\nimport { fromEquals } from './Eq';\nimport { fromEitherK as fromEitherK_ } from './FromEither';\nimport { identity, pipe } from './function';\nimport { bindTo as bindTo_, flap as flap_ } from './Functor';\nimport * as _ from './internal';\nimport * as N from './number';\nimport { fromCompare } from './Ord';\nimport * as RNEA from './ReadonlyNonEmptyArray';\nimport { separated } from './Separated';\nimport { filterE as filterE_, wiltDefault, witherDefault } from './Witherable';\nimport { guard as guard_ } from './Zero';\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * Test whether a `ReadonlyArray` is empty.\n *\n * @example\n * import { isEmpty } from 'fp-ts/ReadonlyArray'\n *\n * assert.strictEqual(isEmpty([]), true)\n *\n * @category refinements\n * @since 2.5.0\n */\nexport var isEmpty = function (as) { return as.length === 0; };\n/**\n * Test whether a `ReadonlyArray` is non empty.\n *\n * @category refinements\n * @since 2.5.0\n */\nexport var isNonEmpty = RNEA.isNonEmpty;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Prepend an element to the front of a `ReadonlyArray`, creating a new `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { prepend } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([2, 3, 4], prepend(1)), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.10.0\n */\nexport var prepend = RNEA.prepend;\n/**\n * Less strict version of [`prepend`](#prepend).\n *\n * @category constructors\n * @since 2.11.0\n */\nexport var prependW = RNEA.prependW;\n/**\n * Append an element to the end of a `ReadonlyArray`, creating a new `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { append } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], append(4)), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.10.0\n */\nexport var append = RNEA.append;\n/**\n * Less strict version of [`append`](#append).\n *\n * @category constructors\n * @since 2.11.0\n */\nexport var appendW = RNEA.appendW;\n/**\n * Return a `ReadonlyArray` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { makeBy } from 'fp-ts/ReadonlyArray'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.5.0\n */\nexport var makeBy = function (n, f) { return (n <= 0 ? empty : RNEA.makeBy(f)(n)); };\n/**\n * Create a `ReadonlyArray` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { replicate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.5.0\n */\nexport var replicate = function (n, a) { return makeBy(n, function () { return a; }); };\nexport function fromPredicate(predicate) {\n    return function (a) { return (predicate(a) ? [a] : empty); };\n}\n// -------------------------------------------------------------------------------------\n// natural transformations\n// -------------------------------------------------------------------------------------\n/**\n * @category natural transformations\n * @since 2.11.0\n */\nexport var fromOption = function (ma) { return (_.isNone(ma) ? empty : [ma.value]); };\n/**\n * Transforms an `Either` to a `ReadonlyArray`.\n *\n * @category natural transformations\n * @since 2.11.0\n */\nexport var fromEither = function (e) { return (_.isLeft(e) ? empty : [e.right]); };\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * Less strict version of [`match`](#match).\n *\n * @category destructors\n * @since 2.11.0\n */\nexport var matchW = function (onEmpty, onNonEmpty) { return function (as) { return (isNonEmpty(as) ? onNonEmpty(as) : onEmpty()); }; };\n/**\n * @category destructors\n * @since 2.11.0\n */\nexport var match = matchW;\n/**\n * Less strict version of [`matchLeft`](#matchleft).\n *\n * @category destructors\n * @since 2.11.0\n */\nexport var matchLeftW = function (onEmpty, onNonEmpty) { return function (as) { return (isNonEmpty(as) ? onNonEmpty(RNEA.head(as), RNEA.tail(as)) : onEmpty()); }; };\n/**\n * Break a `ReadonlyArray` into its first element and remaining elements.\n *\n * @example\n * import { matchLeft } from 'fp-ts/ReadonlyArray'\n *\n * const len: <A>(as: ReadonlyArray<A>) => number = matchLeft(() => 0, (_, tail) => 1 + len(tail))\n * assert.strictEqual(len([1, 2, 3]), 3)\n *\n * @category destructors\n * @since 2.10.0\n */\nexport var matchLeft = matchLeftW;\n/**\n * Alias of [`matchLeft`](#matchleft).\n *\n * @category destructors\n * @since 2.5.0\n */\nexport var foldLeft = matchLeft;\n/**\n * Less strict version of [`matchRight`](#matchright).\n *\n * @category destructors\n * @since 2.11.0\n */\nexport var matchRightW = function (onEmpty, onNonEmpty) { return function (as) { return (isNonEmpty(as) ? onNonEmpty(RNEA.init(as), RNEA.last(as)) : onEmpty()); }; };\n/**\n * Break a `ReadonlyArray` into its initial elements and the last element.\n *\n * @category destructors\n * @since 2.10.0\n */\nexport var matchRight = matchRightW;\n/**\n * Alias of [`matchRight`](#matchright).\n *\n * @category destructors\n * @since 2.5.0\n */\nexport var foldRight = matchRight;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @category combinators\n * @since 2.7.0\n */\nexport var chainWithIndex = function (f) { return function (as) {\n    if (isEmpty(as)) {\n        return empty;\n    }\n    var out = [];\n    for (var i = 0; i < as.length; i++) {\n        out.push.apply(out, f(i, as[i]));\n    }\n    return out;\n}; };\n/**\n * Same as `reduce` but it carries over the intermediate steps.\n *\n * @example\n * import { scanLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var scanLeft = function (b, f) { return function (as) {\n    var len = as.length;\n    var out = new Array(len + 1);\n    out[0] = b;\n    for (var i = 0; i < len; i++) {\n        out[i + 1] = f(out[i], as[i]);\n    }\n    return out;\n}; };\n/**\n * Fold an array from the right, keeping all intermediate results instead of only the final result\n *\n * @example\n * import { scanRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var scanRight = function (b, f) { return function (as) {\n    var len = as.length;\n    var out = new Array(len + 1);\n    out[len] = b;\n    for (var i = len - 1; i >= 0; i--) {\n        out[i] = f(as[i], out[i + 1]);\n    }\n    return out;\n}; };\n/**\n * Calculate the number of elements in a `ReadonlyArray`.\n *\n * @since 2.10.0\n */\nexport var size = function (as) { return as.length; };\n/**\n * Test whether an array contains a particular index\n *\n * @since 2.5.0\n */\nexport var isOutOfBound = RNEA.isOutOfBound;\nexport function lookup(i, as) {\n    return as === undefined ? function (as) { return lookup(i, as); } : isOutOfBound(i, as) ? _.none : _.some(as[i]);\n}\n/**\n * Get the first element in an array, or `None` if the array is empty\n *\n * @example\n * import { head } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(head([1, 2, 3]), some(1))\n * assert.deepStrictEqual(head([]), none)\n *\n * @since 2.5.0\n */\nexport var head = function (as) { return (isNonEmpty(as) ? _.some(RNEA.head(as)) : _.none); };\n/**\n * Get the last element in an array, or `None` if the array is empty\n *\n * @example\n * import { last } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(last([1, 2, 3]), some(3))\n * assert.deepStrictEqual(last([]), none)\n *\n * @since 2.5.0\n */\nexport var last = function (as) { return (isNonEmpty(as) ? _.some(RNEA.last(as)) : _.none); };\n/**\n * Get all but the first element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { tail } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(tail([]), none)\n *\n * @since 2.5.0\n */\nexport var tail = function (as) {\n    return isNonEmpty(as) ? _.some(RNEA.tail(as)) : _.none;\n};\n/**\n * Get all but the last element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { init } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))\n * assert.deepStrictEqual(init([]), none)\n *\n * @since 2.5.0\n */\nexport var init = function (as) {\n    return isNonEmpty(as) ? _.some(RNEA.init(as)) : _.none;\n};\n/**\n * Keep only a max number of elements from the start of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.takeLeft(2)), [1, 2])\n *\n * // out of bounds\n * assert.strictEqual(pipe(input, RA.takeLeft(4)), input)\n * assert.strictEqual(pipe(input, RA.takeLeft(-1)), input)\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var takeLeft = function (n) { return function (as) {\n    return isOutOfBound(n, as) ? as : n === 0 ? empty : as.slice(0, n);\n}; };\n/**\n * Keep only a max number of elements from the end of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.takeRight(2)), [2, 3])\n *\n * // out of bounds\n * assert.strictEqual(pipe(input, RA.takeRight(4)), input)\n * assert.strictEqual(pipe(input, RA.takeRight(-1)), input)\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var takeRight = function (n) { return function (as) {\n    return isOutOfBound(n, as) ? as : n === 0 ? empty : as.slice(-n);\n}; };\nexport function takeLeftWhile(predicate) {\n    return function (as) {\n        var out = [];\n        for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n            var a = as_1[_i];\n            if (!predicate(a)) {\n                break;\n            }\n            out.push(a);\n        }\n        var len = out.length;\n        return len === as.length ? as : len === 0 ? empty : out;\n    };\n}\nvar spanLeftIndex = function (as, predicate) {\n    var l = as.length;\n    var i = 0;\n    for (; i < l; i++) {\n        if (!predicate(as[i])) {\n            break;\n        }\n    }\n    return i;\n};\nexport function spanLeft(predicate) {\n    return function (as) {\n        var _a = splitAt(spanLeftIndex(as, predicate))(as), init = _a[0], rest = _a[1];\n        return { init: init, rest: rest };\n    };\n}\n/**\n * Drop a max number of elements from the start of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.dropLeft(2)), [3])\n * assert.strictEqual(pipe(input, RA.dropLeft(0)), input)\n * assert.strictEqual(pipe(input, RA.dropLeft(-1)), input)\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var dropLeft = function (n) { return function (as) {\n    return n <= 0 || isEmpty(as) ? as : n >= as.length ? empty : as.slice(n, as.length);\n}; };\n/**\n * Drop a max number of elements from the end of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.dropRight(2)), [1])\n * assert.strictEqual(pipe(input, RA.dropRight(0)), input)\n * assert.strictEqual(pipe(input, RA.dropRight(-1)), input)\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var dropRight = function (n) { return function (as) {\n    return n <= 0 || isEmpty(as) ? as : n >= as.length ? empty : as.slice(0, as.length - n);\n}; };\nexport function dropLeftWhile(predicate) {\n    return function (as) {\n        var i = spanLeftIndex(as, predicate);\n        return i === 0 ? as : i === as.length ? empty : as.slice(i);\n    };\n}\n/**\n * Find the first index for which a predicate holds\n *\n * @example\n * import { findIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)\n *\n * @since 2.5.0\n */\nexport var findIndex = function (predicate) { return function (as) {\n    for (var i = 0; i < as.length; i++) {\n        if (predicate(as[i])) {\n            return _.some(i);\n        }\n    }\n    return _.none;\n}; };\nexport function findFirst(predicate) {\n    return function (as) {\n        for (var i = 0; i < as.length; i++) {\n            if (predicate(as[i])) {\n                return _.some(as[i]);\n            }\n        }\n        return _.none;\n    };\n}\n/**\n * Find the first element returned by an option based selector function\n *\n * @example\n * import { findFirstMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the first person that has an age\n * assert.deepStrictEqual(findFirstMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Mary'))\n *\n * @since 2.5.0\n */\nexport var findFirstMap = function (f) { return function (as) {\n    for (var i = 0; i < as.length; i++) {\n        var out = f(as[i]);\n        if (_.isSome(out)) {\n            return out;\n        }\n    }\n    return _.none;\n}; };\nexport function findLast(predicate) {\n    return function (as) {\n        for (var i = as.length - 1; i >= 0; i--) {\n            if (predicate(as[i])) {\n                return _.some(as[i]);\n            }\n        }\n        return _.none;\n    };\n}\n/**\n * Find the last element returned by an option based selector function\n *\n * @example\n * import { findLastMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the last person that has an age\n * assert.deepStrictEqual(findLastMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Joey'))\n *\n * @since 2.5.0\n */\nexport var findLastMap = function (f) { return function (as) {\n    for (var i = as.length - 1; i >= 0; i--) {\n        var out = f(as[i]);\n        if (_.isSome(out)) {\n            return out;\n        }\n    }\n    return _.none;\n}; };\n/**\n * Returns the index of the last element of the list which matches the predicate\n *\n * @example\n * import { findLastIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface X {\n *   readonly a: number\n *   readonly b: number\n * }\n * const xs: ReadonlyArray<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 1)(xs), some(1))\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 4)(xs), none)\n *\n *\n * @since 2.5.0\n */\nexport var findLastIndex = function (predicate) { return function (as) {\n    for (var i = as.length - 1; i >= 0; i--) {\n        if (predicate(as[i])) {\n            return _.some(i);\n        }\n    }\n    return _.none;\n}; };\n/**\n * Insert an element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { insertAt } from 'fp-ts/ReadonlyArray'\n * import { some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))\n *\n * @since 2.5.0\n */\nexport var insertAt = function (i, a) { return function (as) {\n    return i < 0 || i > as.length ? _.none : _.some(RNEA.unsafeInsertAt(i, a, as));\n}; };\n/**\n * Change the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { updateAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))\n * assert.deepStrictEqual(updateAt(1, 1)([]), none)\n *\n * @since 2.5.0\n */\nexport var updateAt = function (i, a) {\n    return modifyAt(i, function () { return a; });\n};\n/**\n * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { deleteAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(deleteAt(1)([]), none)\n *\n * @since 2.5.0\n */\nexport var deleteAt = function (i) { return function (as) {\n    return isOutOfBound(i, as) ? _.none : _.some(unsafeDeleteAt(i, as));\n}; };\n/**\n * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out\n * of bounds\n *\n * @example\n * import { modifyAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * const double = (x: number): number => x * 2\n * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))\n * assert.deepStrictEqual(modifyAt(1, double)([]), none)\n *\n * @since 2.5.0\n */\nexport var modifyAt = function (i, f) { return function (as) {\n    return isOutOfBound(i, as) ? _.none : _.some(unsafeUpdateAt(i, f(as[i]), as));\n}; };\n/**\n * Reverse an array, creating a new array\n *\n * @example\n * import { reverse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var reverse = function (as) { return (as.length <= 1 ? as : as.slice().reverse()); };\n/**\n * Extracts from an array of `Either` all the `Right` elements. All the `Right` elements are extracted in order\n *\n * @example\n * import { rights } from 'fp-ts/ReadonlyArray'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var rights = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Right') {\n            r.push(a.right);\n        }\n    }\n    return r;\n};\n/**\n * Extracts from an array of `Either` all the `Left` elements. All the `Left` elements are extracted in order\n *\n * @example\n * import { lefts } from 'fp-ts/ReadonlyArray'\n * import { left, right } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var lefts = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Left') {\n            r.push(a.left);\n        }\n    }\n    return r;\n};\n/**\n * Sort the elements of an array in increasing order, creating a new array\n *\n * @example\n * import { sort } from 'fp-ts/ReadonlyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(sort(N.Ord)([3, 2, 1]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var sort = function (O) { return function (as) {\n    return as.length <= 1 ? as : as.slice().sort(O.compare);\n}; };\n// TODO: curry and make data-last in v3\n/**\n * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one\n * input array is short, excess elements of the longer array are discarded.\n *\n * @example\n * import { zipWith } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var zipWith = function (fa, fb, f) {\n    var fc = [];\n    var len = Math.min(fa.length, fb.length);\n    for (var i = 0; i < len; i++) {\n        fc[i] = f(fa[i], fb[i]);\n    }\n    return fc;\n};\nexport function zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return zipWith(as, bs, function (a, b) { return [a, b]; });\n}\n/**\n * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays\n *\n * @example\n * import { unzip } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var unzip = function (as) {\n    var fa = [];\n    var fb = [];\n    for (var i = 0; i < as.length; i++) {\n        fa[i] = as[i][0];\n        fb[i] = as[i][1];\n    }\n    return [fa, fb];\n};\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { prependAll } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var prependAll = function (middle) {\n    var f = RNEA.prependAll(middle);\n    return function (as) { return (isNonEmpty(as) ? f(as) : as); };\n};\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { intersperse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\nexport var intersperse = function (middle) {\n    var f = RNEA.intersperse(middle);\n    return function (as) { return (isNonEmpty(as) ? f(as) : as); };\n};\n/**\n * Rotate a `ReadonlyArray` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var rotate = function (n) {\n    var f = RNEA.rotate(n);\n    return function (as) { return (isNonEmpty(as) ? f(as) : as); };\n};\nexport function elem(E) {\n    return function (a, as) {\n        if (as === undefined) {\n            var elemE_1 = elem(E);\n            return function (as) { return elemE_1(a, as); };\n        }\n        var predicate = function (element) { return E.equals(element, a); };\n        var i = 0;\n        for (; i < as.length; i++) {\n            if (predicate(as[i])) {\n                return true;\n            }\n        }\n        return false;\n    };\n}\n/**\n * Remove duplicates from an array, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/ReadonlyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var uniq = function (E) {\n    var f = RNEA.uniq(E);\n    return function (as) { return (isNonEmpty(as) ? f(as) : as); };\n};\n/**\n * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import { sortBy } from 'fp-ts/ReadonlyArray'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age: number\n * }\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = sortBy([byName, byAge])\n *\n * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var sortBy = function (ords) {\n    var f = RNEA.sortBy(ords);\n    return function (as) { return (isNonEmpty(as) ? f(as) : as); };\n};\n/**\n * A useful recursion pattern for processing a `ReadonlyArray` to produce a new `ReadonlyArray`, often used for \"chopping\" up the input\n * `ReadonlyArray`. Typically `chop` is called with some function that will consume an initial prefix of the `ReadonlyArray` and produce a\n * value and the tail of the `ReadonlyArray`.\n *\n * @example\n * import { Eq } from 'fp-ts/Eq'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * const group = <A>(S: Eq<A>): ((as: ReadonlyArray<A>) => ReadonlyArray<ReadonlyArray<A>>) => {\n *   return RA.chop(as => {\n *     const { init, rest } = pipe(as, RA.spanLeft((a: A) => S.equals(a, as[0])))\n *     return [init, rest]\n *   })\n * }\n * assert.deepStrictEqual(group(N.Eq)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var chop = function (f) {\n    var g = RNEA.chop(f);\n    return function (as) { return (isNonEmpty(as) ? g(as) : empty); };\n};\n/**\n * Splits a `ReadonlyArray` into two pieces, the first piece has max `n` elements.\n *\n * @example\n * import { splitAt } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var splitAt = function (n) { return function (as) {\n    return n >= 1 && isNonEmpty(as) ? RNEA.splitAt(n)(as) : isEmpty(as) ? [as, empty] : [empty, as];\n}; };\n/**\n * Splits a `ReadonlyArray` into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the `ReadonlyArray`. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that:\n *\n * ```ts\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `as`.\n *\n * @example\n * import { chunksOf } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var chunksOf = function (n) {\n    var f = RNEA.chunksOf(n);\n    return function (as) { return (isNonEmpty(as) ? f(as) : empty); };\n};\n/**\n * @category combinators\n * @since 2.11.0\n */\nexport var fromOptionK = function (f) { return function () {\n    var a = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        a[_i] = arguments[_i];\n    }\n    return fromOption(f.apply(void 0, a));\n}; };\nexport function comprehension(input, f, g) {\n    if (g === void 0) { g = function () { return true; }; }\n    var go = function (scope, input) {\n        return isNonEmpty(input)\n            ? pipe(RNEA.head(input), chain(function (x) { return go(pipe(scope, append(x)), RNEA.tail(input)); }))\n            : g.apply(void 0, scope) ? [f.apply(void 0, scope)]\n                : empty;\n    };\n    return go(empty, input);\n}\n/**\n * @category combinators\n * @since 2.11.0\n */\nexport var concatW = function (second) { return function (first) {\n    return isEmpty(first) ? second : isEmpty(second) ? first : first.concat(second);\n}; };\n/**\n * @category combinators\n * @since 2.11.0\n */\nexport var concat = concatW;\nexport function union(E) {\n    var unionE = RNEA.union(E);\n    return function (first, second) {\n        if (second === undefined) {\n            var unionE_1 = union(E);\n            return function (second) { return unionE_1(second, first); };\n        }\n        return isNonEmpty(first) && isNonEmpty(second) ? unionE(second)(first) : isNonEmpty(first) ? first : second;\n    };\n}\nexport function intersection(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var intersectionE_1 = intersection(E);\n            return function (ys) { return intersectionE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return elemE(a, ys); });\n    };\n}\nexport function difference(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var differenceE_1 = difference(E);\n            return function (ys) { return differenceE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return !elemE(a, ys); });\n    };\n}\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return pipe(fa, map(f)); };\nvar _mapWithIndex = function (fa, f) { return pipe(fa, mapWithIndex(f)); };\nvar _ap = function (fab, fa) { return pipe(fab, ap(fa)); };\nvar _chain = function (ma, f) { return pipe(ma, chain(f)); };\nvar _filter = function (fa, predicate) {\n    return pipe(fa, filter(predicate));\n};\nvar _filterMap = function (fa, f) { return pipe(fa, filterMap(f)); };\nvar _partition = function (fa, predicate) {\n    return pipe(fa, partition(predicate));\n};\nvar _partitionMap = function (fa, f) { return pipe(fa, partitionMap(f)); };\nvar _partitionWithIndex = function (fa, predicateWithIndex) { return pipe(fa, partitionWithIndex(predicateWithIndex)); };\nvar _partitionMapWithIndex = function (fa, f) { return pipe(fa, partitionMapWithIndex(f)); };\nvar _alt = function (fa, that) { return pipe(fa, alt(that)); };\nvar _reduce = function (fa, b, f) { return pipe(fa, reduce(b, f)); };\nvar _foldMap = function (M) {\n    var foldMapM = foldMap(M);\n    return function (fa, f) { return pipe(fa, foldMapM(f)); };\n};\nvar _reduceRight = function (fa, b, f) { return pipe(fa, reduceRight(b, f)); };\nvar _reduceWithIndex = function (fa, b, f) {\n    return pipe(fa, reduceWithIndex(b, f));\n};\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = foldMapWithIndex(M);\n    return function (fa, f) { return pipe(fa, foldMapWithIndexM(f)); };\n};\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return pipe(fa, reduceRightWithIndex(b, f));\n};\nvar _filterMapWithIndex = function (fa, f) { return pipe(fa, filterMapWithIndex(f)); };\nvar _filterWithIndex = function (fa, predicateWithIndex) { return pipe(fa, filterWithIndex(predicateWithIndex)); };\nvar _extend = function (fa, f) { return pipe(fa, extend(f)); };\nvar _traverse = function (F) {\n    var traverseF = traverse(F);\n    return function (ta, f) { return pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (ta, f) { return pipe(ta, traverseWithIndexF(f)); };\n};\n/** @internal */\nexport var _chainRecDepthFirst = function (a, f) { return pipe(a, chainRecDepthFirst(f)); };\n/** @internal */\nexport var _chainRecBreadthFirst = function (a, f) { return pipe(a, chainRecBreadthFirst(f)); };\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * @category Pointed\n * @since 2.5.0\n */\nexport var of = RNEA.of;\n/**\n * @category Zero\n * @since 2.7.0\n */\nexport var zero = function () { return empty; };\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nexport var altW = function (that) { return function (fa) {\n    return fa.concat(that());\n}; };\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.5.0\n */\nexport var alt = altW;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.5.0\n */\nexport var ap = function (fa) {\n    return chain(function (f) { return pipe(fa, map(f)); });\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.5.0\n */\nexport var chain = function (f) { return function (ma) {\n    return pipe(ma, chainWithIndex(function (_, a) { return f(a); }));\n}; };\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var flatten = \n/*#__PURE__*/\nchain(identity);\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.5.0\n */\nexport var map = function (f) { return function (fa) {\n    return fa.map(function (a) { return f(a); });\n}; };\n/**\n * @category FunctorWithIndex\n * @since 2.5.0\n */\nexport var mapWithIndex = function (f) { return function (fa) { return fa.map(function (a, i) { return f(i, a); }); }; };\n/**\n * @category Compactable\n * @since 2.5.0\n */\nexport var separate = function (fa) {\n    var left = [];\n    var right = [];\n    for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {\n        var e = fa_1[_i];\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return separated(left, right);\n};\n/**\n * @category Filterable\n * @since 2.5.0\n */\nexport var filter = function (predicate) { return function (as) { return as.filter(predicate); }; };\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nexport var filterMapWithIndex = function (f) { return function (fa) {\n    var out = [];\n    for (var i = 0; i < fa.length; i++) {\n        var optionB = f(i, fa[i]);\n        if (_.isSome(optionB)) {\n            out.push(optionB.value);\n        }\n    }\n    return out;\n}; };\n/**\n * @category Filterable\n * @since 2.5.0\n */\nexport var filterMap = function (f) {\n    return filterMapWithIndex(function (_, a) { return f(a); });\n};\n/**\n * @category Compactable\n * @since 2.5.0\n */\nexport var compact = \n/*#__PURE__*/\nfilterMap(identity);\n/**\n * @category Filterable\n * @since 2.5.0\n */\nexport var partition = function (predicate) {\n    return partitionWithIndex(function (_, a) { return predicate(a); });\n};\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nexport var partitionWithIndex = function (predicateWithIndex) { return function (as) {\n    var left = [];\n    var right = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (predicateWithIndex(i, a)) {\n            right.push(a);\n        }\n        else {\n            left.push(a);\n        }\n    }\n    return separated(left, right);\n}; };\n/**\n * @category Filterable\n * @since 2.5.0\n */\nexport var partitionMap = function (f) {\n    return partitionMapWithIndex(function (_, a) { return f(a); });\n};\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nexport var partitionMapWithIndex = function (f) { return function (fa) {\n    var left = [];\n    var right = [];\n    for (var i = 0; i < fa.length; i++) {\n        var e = f(i, fa[i]);\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return separated(left, right);\n}; };\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nexport var filterWithIndex = function (predicateWithIndex) { return function (as) {\n    return as.filter(function (a, i) { return predicateWithIndex(i, a); });\n}; };\n/**\n * @category Extend\n * @since 2.5.0\n */\nexport var extend = function (f) { return function (wa) { return wa.map(function (_, i) { return f(wa.slice(i)); }); }; };\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var duplicate = \n/*#__PURE__*/\nextend(identity);\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nexport var foldMapWithIndex = function (M) { return function (f) { return function (fa) {\n    return fa.reduce(function (b, a, i) { return M.concat(b, f(i, a)); }, M.empty);\n}; }; };\n/**\n * @category Foldable\n * @since 2.5.0\n */\nexport var reduce = function (b, f) {\n    return reduceWithIndex(b, function (_, b, a) { return f(b, a); });\n};\n/**\n * @category Foldable\n * @since 2.5.0\n */\nexport var foldMap = function (M) {\n    var foldMapWithIndexM = foldMapWithIndex(M);\n    return function (f) { return foldMapWithIndexM(function (_, a) { return f(a); }); };\n};\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nexport var reduceWithIndex = function (b, f) { return function (fa) {\n    var len = fa.length;\n    var out = b;\n    for (var i = 0; i < len; i++) {\n        out = f(i, out, fa[i]);\n    }\n    return out;\n}; };\n/**\n * @category Foldable\n * @since 2.5.0\n */\nexport var reduceRight = function (b, f) {\n    return reduceRightWithIndex(b, function (_, a, b) { return f(a, b); });\n};\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nexport var reduceRightWithIndex = function (b, f) { return function (fa) { return fa.reduceRight(function (b, a, i) { return f(i, a, b); }, b); }; };\n/**\n * @category Traversable\n * @since 2.6.3\n */\nexport var traverse = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\n/**\n * @category Traversable\n * @since 2.6.3\n */\nexport var sequence = function (F) { return function (ta) {\n    return _reduce(ta, F.of(zero()), function (fas, fa) {\n        return F.ap(F.map(fas, function (as) { return function (a) { return pipe(as, append(a)); }; }), fa);\n    });\n}; };\n/**\n * @category TraversableWithIndex\n * @since 2.6.3\n */\nexport var traverseWithIndex = function (F) { return function (f) {\n    return reduceWithIndex(F.of(zero()), function (i, fbs, a) {\n        return F.ap(F.map(fbs, function (bs) { return function (b) { return pipe(bs, append(b)); }; }), f(i, a));\n    });\n}; };\n/**\n * @category Witherable\n * @since 2.6.5\n */\nexport var wither = function (F) {\n    var _witherF = _wither(F);\n    return function (f) { return function (fa) { return _witherF(fa, f); }; };\n};\n/**\n * @category Witherable\n * @since 2.6.5\n */\nexport var wilt = function (F) {\n    var _wiltF = _wilt(F);\n    return function (f) { return function (fa) { return _wiltF(fa, f); }; };\n};\n/**\n * @category Unfoldable\n * @since 2.6.6\n */\nexport var unfold = function (b, f) {\n    var out = [];\n    var bb = b;\n    while (true) {\n        var mt = f(bb);\n        if (_.isSome(mt)) {\n            var _a = mt.value, a = _a[0], b_1 = _a[1];\n            out.push(a);\n            bb = b_1;\n        }\n        else {\n            break;\n        }\n    }\n    return out;\n};\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.5.0\n */\nexport var URI = 'ReadonlyArray';\n/**\n * @category instances\n * @since 2.5.0\n */\nexport var getShow = function (S) { return ({\n    show: function (as) { return \"[\" + as.map(S.show).join(', ') + \"]\"; }\n}); };\n/**\n * @category instances\n * @since 2.5.0\n */\nexport var getSemigroup = function () { return ({\n    concat: function (first, second) { return (isEmpty(first) ? second : isEmpty(second) ? first : first.concat(second)); }\n}); };\n/**\n * Returns a `Monoid` for `ReadonlyArray<A>`.\n *\n * @example\n * import { getMonoid } from 'fp-ts/ReadonlyArray'\n *\n * const M = getMonoid<number>()\n * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])\n *\n * @category instances\n * @since 2.5.0\n */\nexport var getMonoid = function () { return ({\n    concat: getSemigroup().concat,\n    empty: empty\n}); };\n/**\n * Derives an `Eq` over the `ReadonlyArray` of a given element type from the `Eq` of that type. The derived `Eq` defines two\n * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of\n * different lengths, the result is non equality.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { getEq } from 'fp-ts/ReadonlyArray'\n *\n * const E = getEq(S.Eq)\n * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)\n * assert.strictEqual(E.equals(['a'], []), false)\n *\n * @category instances\n * @since 2.5.0\n */\nexport var getEq = function (E) {\n    return fromEquals(function (xs, ys) { return xs.length === ys.length && xs.every(function (x, i) { return E.equals(x, ys[i]); }); });\n};\n/**\n * Derives an `Ord` over the `ReadonlyArray` of a given element type from the `Ord` of that type. The ordering between two such\n * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in\n * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have\n * the same length, the result is equality.\n *\n * @example\n * import { getOrd } from 'fp-ts/ReadonlyArray'\n * import * as S from 'fp-ts/string'\n *\n * const O = getOrd(S.Ord)\n * assert.strictEqual(O.compare(['b'], ['a']), 1)\n * assert.strictEqual(O.compare(['a'], ['a']), 0)\n * assert.strictEqual(O.compare(['a'], ['b']), -1)\n *\n *\n * @category instances\n * @since 2.5.0\n */\nexport var getOrd = function (O) {\n    return fromCompare(function (a, b) {\n        var aLen = a.length;\n        var bLen = b.length;\n        var len = Math.min(aLen, bLen);\n        for (var i = 0; i < len; i++) {\n            var ordering = O.compare(a[i], b[i]);\n            if (ordering !== 0) {\n                return ordering;\n            }\n        }\n        return N.Ord.compare(aLen, bLen);\n    });\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var getUnionSemigroup = function (E) {\n    var unionE = union(E);\n    return {\n        concat: function (first, second) { return unionE(second)(first); }\n    };\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var getUnionMonoid = function (E) { return ({\n    concat: getUnionSemigroup(E).concat,\n    empty: empty\n}); };\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var getIntersectionSemigroup = function (E) {\n    var intersectionE = intersection(E);\n    return {\n        concat: function (first, second) { return intersectionE(second)(first); }\n    };\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var getDifferenceMagma = function (E) {\n    var differenceE = difference(E);\n    return {\n        concat: function (first, second) { return differenceE(second)(first); }\n    };\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var flap = \n/*#__PURE__*/\nflap_(Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Pointed = {\n    URI: URI,\n    of: of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FunctorWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Apply = {\n    URI: URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var apFirst = \n/*#__PURE__*/\napFirst_(Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var apSecond = \n/*#__PURE__*/\napSecond_(Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Chain = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var chainFirst = \n/*#__PURE__*/\nchainFirst_(Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Unfoldable = {\n    URI: URI,\n    unfold: unfold\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n    URI: URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var Zero = {\n    URI: URI,\n    zero: zero\n};\n/**\n * @category constructors\n * @since 2.11.0\n */\nexport var guard = \n/*#__PURE__*/\nguard_(Zero, Pointed);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alternative = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    alt: _alt,\n    zero: zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Extend = {\n    URI: URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Compactable = {\n    URI: URI,\n    compact: compact,\n    separate: separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Filterable = {\n    URI: URI,\n    map: _map,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FilterableWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FoldableWithIndex = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n    URI: URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var TraversableWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverse: _traverse,\n    sequence: sequence,\n    traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category ChainRec\n * @since 2.11.0\n */\nexport var chainRecDepthFirst = function (f) { return function (a) {\n    var todo = __spreadArray([], f(a));\n    var out = [];\n    while (todo.length > 0) {\n        var e = todo.shift();\n        if (_.isLeft(e)) {\n            todo.unshift.apply(todo, f(e.left));\n        }\n        else {\n            out.push(e.right);\n        }\n    }\n    return out;\n}; };\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var ChainRecDepthFirst = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain,\n    chainRec: _chainRecDepthFirst\n};\n/**\n * @category ChainRec\n * @since 2.11.0\n */\nexport var chainRecBreadthFirst = function (f) { return function (a) {\n    var initial = f(a);\n    var todo = [];\n    var out = [];\n    function go(e) {\n        if (_.isLeft(e)) {\n            f(e.left).forEach(function (v) { return todo.push(v); });\n        }\n        else {\n            out.push(e.right);\n        }\n    }\n    for (var _i = 0, initial_1 = initial; _i < initial_1.length; _i++) {\n        var e = initial_1[_i];\n        go(e);\n    }\n    while (todo.length > 0) {\n        go(todo.shift());\n    }\n    return out;\n}; };\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var ChainRecBreadthFirst = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain,\n    chainRec: _chainRecBreadthFirst\n};\nvar _wither = \n/*#__PURE__*/\nwitherDefault(Traversable, Compactable);\nvar _wilt = \n/*#__PURE__*/\nwiltDefault(Traversable, Compactable);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Witherable = {\n    URI: URI,\n    map: _map,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    wither: _wither,\n    wilt: _wilt\n};\n/**\n * Filter values inside a context.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as T from 'fp-ts/Task'\n *\n * const filterE = RA.filterE(T.ApplicativePar)\n * async function test() {\n *   assert.deepStrictEqual(\n *     await pipe(\n *       [-1, 2, 3],\n *       filterE((n) => T.of(n > 0))\n *     )(),\n *     [2, 3]\n *   )\n * }\n * test()\n *\n * @since 2.11.0\n */\nexport var filterE = \n/*#__PURE__*/\nfilterE_(Witherable);\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var FromEither = {\n    URI: URI,\n    fromEither: fromEither\n};\n/**\n * @category combinators\n * @since 2.11.0\n */\nexport var fromEitherK = \n/*#__PURE__*/\nfromEitherK_(FromEither);\n// -------------------------------------------------------------------------------------\n// unsafe\n// -------------------------------------------------------------------------------------\n/**\n * @category unsafe\n * @since 2.5.0\n */\nexport var unsafeInsertAt = RNEA.unsafeInsertAt;\n/**\n * @category unsafe\n * @since 2.5.0\n */\nexport var unsafeUpdateAt = function (i, a, as) {\n    return isNonEmpty(as) ? RNEA.unsafeUpdateAt(i, a, as) : as;\n};\n/**\n * @category unsafe\n * @since 2.5.0\n */\nexport var unsafeDeleteAt = function (i, as) {\n    var xs = as.slice();\n    xs.splice(i, 1);\n    return xs;\n};\n// -------------------------------------------------------------------------------------\n// interop\n// -------------------------------------------------------------------------------------\n/**\n * @category interop\n * @since 2.5.0\n */\nexport var toArray = function (as) { return as.slice(); };\n/**\n * @category interop\n * @since 2.5.0\n */\nexport var fromArray = function (as) { return (isEmpty(as) ? empty : as.slice()); };\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * An empty array\n *\n * @since 2.5.0\n */\nexport var empty = RNEA.empty;\nexport function every(predicate) {\n    return function (as) { return as.every(predicate); };\n}\n/**\n * Check if a predicate holds true for any array member.\n *\n * @example\n * import { some } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const isPositive = (n: number): boolean => n > 0\n *\n * assert.deepStrictEqual(pipe([-1, -2, 3], some(isPositive)), true)\n * assert.deepStrictEqual(pipe([-1, -2, -3], some(isPositive)), false)\n *\n * @since 2.9.0\n */\nexport var some = function (predicate) { return function (as) {\n    return as.some(predicate);\n}; };\n/**\n * Alias of [`some`](#some)\n *\n * @since 2.11.0\n */\nexport var exists = some;\n/**\n * Places an element in between members of a `ReadonlyArray`, then folds the results using the provided `Monoid`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { intercalate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(intercalate(S.Monoid)('-')(['a', 'b', 'c']), 'a-b-c')\n *\n * @since 2.12.0\n */\nexport var intercalate = function (M) {\n    var intercalateM = RNEA.intercalate(M);\n    return function (middle) { return match(function () { return M.empty; }, intercalateM(middle)); };\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexport var Do = \n/*#__PURE__*/\nof(_.emptyRecord);\n/**\n * @since 2.8.0\n */\nexport var bindTo = \n/*#__PURE__*/\nbindTo_(Functor);\n/**\n * @since 2.8.0\n */\nexport var bind = \n/*#__PURE__*/\nbind_(Chain);\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexport var apS = \n/*#__PURE__*/\napS_(Apply);\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n// tslint:disable: deprecation\n/**\n * Use `ReadonlyNonEmptyArray` module instead.\n *\n * @category constructors\n * @since 2.5.0\n * @deprecated\n */\nexport var range = RNEA.range;\n/**\n * Use [`prepend`](#prepend) instead.\n *\n * @category constructors\n * @since 2.5.0\n * @deprecated\n */\nexport var cons = RNEA.cons;\n/**\n * Use [`append`](#append) instead.\n *\n * @category constructors\n * @since 2.5.0\n * @deprecated\n */\nexport var snoc = RNEA.snoc;\n/**\n * Use [`prependAll`](#prependall) instead.\n *\n * @category combinators\n * @since 2.9.0\n * @deprecated\n */\nexport var prependToAll = prependAll;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.5.0\n * @deprecated\n */\nexport var readonlyArray = {\n    URI: URI,\n    compact: compact,\n    separate: separate,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    mapWithIndex: _mapWithIndex,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex,\n    alt: _alt,\n    zero: zero,\n    unfold: unfold,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    extend: _extend,\n    wither: _wither,\n    wilt: _wilt\n};\n","import { apFirst as apFirst_, apS as apS_, apSecond as apSecond_ } from './Apply';\nimport { bind as bind_, chainFirst as chainFirst_ } from './Chain';\nimport { fromEitherK as fromEitherK_ } from './FromEither';\nimport { identity, pipe } from './function';\nimport { bindTo as bindTo_, flap as flap_ } from './Functor';\nimport * as _ from './internal';\nimport * as NEA from './NonEmptyArray';\nimport * as RA from './ReadonlyArray';\nimport { separated } from './Separated';\nimport { filterE as filterE_, wiltDefault, witherDefault } from './Witherable';\nimport { guard as guard_ } from './Zero';\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * Test whether an array is empty\n *\n * @example\n * import { isEmpty } from 'fp-ts/Array'\n *\n * assert.strictEqual(isEmpty([]), true)\n * assert.strictEqual(isEmpty(['a']), false)\n *\n * @category refinements\n * @since 2.0.0\n */\nexport var isEmpty = function (as) { return as.length === 0; };\n/**\n * Test whether an array is non empty narrowing down the type to `NonEmptyArray<A>`\n *\n * @example\n * import { isNonEmpty } from 'fp-ts/Array'\n *\n * assert.strictEqual(isNonEmpty([]), false)\n * assert.strictEqual(isNonEmpty(['a']), true)\n *\n * @category refinements\n * @since 2.0.0\n */\nexport var isNonEmpty = NEA.isNonEmpty;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Prepend an element to the front of a `Array`, creating a new `NonEmptyArray`.\n *\n * @example\n * import { prepend } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([2, 3, 4], prepend(1)), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.10.0\n */\nexport var prepend = NEA.prepend;\n/**\n * Less strict version of [`prepend`](#prepend).\n *\n * @example\n * import { prependW } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([2, 3, 4], prependW(\"a\")), [\"a\", 2, 3, 4]);\n *\n * @category constructors\n * @since 2.11.0\n */\nexport var prependW = NEA.prependW;\n/**\n * Append an element to the end of a `Array`, creating a new `NonEmptyArray`.\n *\n * @example\n * import { append } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], append(4)), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.10.0\n */\nexport var append = NEA.append;\n/**\n * Less strict version of [`append`](#append).\n *\n * @example\n * import { appendW } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], appendW(\"d\")), [1, 2, 3, \"d\"]);\n *\n * @category constructors\n * @since 2.11.0\n */\nexport var appendW = NEA.appendW;\n/**\n * Return a `Array` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { makeBy } from 'fp-ts/Array'\n *\n * const double = (i: number): number => i * 2\n * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])\n * assert.deepStrictEqual(makeBy(-3, double), [])\n * assert.deepStrictEqual(makeBy(4.32164, double), [0, 2, 4, 6])\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var makeBy = function (n, f) { return (n <= 0 ? [] : NEA.makeBy(f)(n)); };\n/**\n * Create a `Array` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { replicate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])\n * assert.deepStrictEqual(replicate(-3, 'a'), [])\n * assert.deepStrictEqual(replicate(2.985647, 'a'), ['a', 'a'])\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var replicate = function (n, a) { return makeBy(n, function () { return a; }); };\nexport function fromPredicate(predicate) {\n    return function (a) { return (predicate(a) ? [a] : []); };\n}\n// -------------------------------------------------------------------------------------\n// natural transformations\n// -------------------------------------------------------------------------------------\n/**\n * Create an array from an `Option`. The resulting array will contain the content of the\n * `Option` if it is `Some` and it will be empty if the `Option` is `None`.\n *\n * @example\n * import { fromOption } from 'fp-ts/Array'\n * import { option } from \"fp-ts\";\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(option.some(\"a\"), fromOption),[\"a\"])\n * assert.deepStrictEqual(pipe(option.none, fromOption),[])\n *\n * @category natural transformations\n * @since 2.11.0\n */\nexport var fromOption = function (ma) { return (_.isNone(ma) ? [] : [ma.value]); };\n/**\n * Create an array from an `Either`. The resulting array will contain the content of the\n * `Either` if it is `Right` and it will be empty if the `Either` is `Left`.\n *\n * @example\n * import { fromEither } from 'fp-ts/Array'\n * import { either } from \"fp-ts\";\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(either.right(\"r\"), fromEither), [\"r\"]);\n * assert.deepStrictEqual(pipe(either.left(\"l\"), fromEither), []);\n *\n * @category natural transformations\n * @since 2.11.0\n */\nexport var fromEither = function (e) { return (_.isLeft(e) ? [] : [e.right]); };\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * Less strict version of [`match`](#match). It will work when `onEmpty` and `onNonEmpty`\n * have different return types.\n *\n * @example\n * import { matchW } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const matcherW = matchW(\n *   () => \"No elements\",\n *   (as) => as.length\n * );\n * assert.deepStrictEqual(pipe([1, 2, 3, 4], matcherW), 4);\n * assert.deepStrictEqual(pipe([], matcherW), \"No elements\");\n *\n * @category destructors\n * @since 2.11.0\n */\nexport var matchW = function (onEmpty, onNonEmpty) { return function (as) {\n    return isNonEmpty(as) ? onNonEmpty(as) : onEmpty();\n}; };\n/**\n * Takes an array, if the array is empty it returns the result of `onEmpty`, otherwise\n * it passes the array to `onNonEmpty` and returns the result.\n *\n * @example\n * import { match } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const matcher = match(\n *   () => \"No elements\",\n *   (as) => `Found ${as.length} element(s)`\n * );\n * assert.deepStrictEqual(pipe([1, 2, 3, 4], matcher), \"Found 4 element(s)\");\n * assert.deepStrictEqual(pipe([], matcher), \"No elements\");\n *\n * @category destructors\n * @since 2.11.0\n */\nexport var match = matchW;\n/**\n * Less strict version of [`matchLeft`](#matchleft). It will work when `onEmpty` and\n * `onNonEmpty` have different return types.\n *\n * @example\n * import { matchLeftW } from 'fp-ts/Array'\n *\n * const f = matchLeftW(\n *   () => 0,\n *   (head: string, tail: string[]) => `Found \"${head}\" followed by ${tail.length} elements`\n * );\n * assert.strictEqual(f([\"a\", \"b\", \"c\"]), 'Found \"a\" followed by 2 elements');\n * assert.strictEqual(f([]), 0);\n *\n * @category destructors\n * @since 2.11.0\n */\nexport var matchLeftW = function (onEmpty, onNonEmpty) { return function (as) { return (isNonEmpty(as) ? onNonEmpty(NEA.head(as), NEA.tail(as)) : onEmpty()); }; };\n/**\n * Takes an array, if the array is empty it returns the result of `onEmpty`, otherwise\n * it passes the array to `onNonEmpty` broken into its first element and remaining elements.\n *\n * @example\n * import { matchLeft } from 'fp-ts/Array'\n *\n * const len: <A>(as: Array<A>) => number = matchLeft(() => 0, (_, tail) => 1 + len(tail))\n * assert.strictEqual(len([1, 2, 3]), 3)\n *\n * @category destructors\n * @since 2.10.0\n */\nexport var matchLeft = matchLeftW;\n/**\n * Alias of [`matchLeft`](#matchleft).\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var foldLeft = matchLeft;\n/**\n * Less strict version of [`matchRight`](#matchright). It will work when `onEmpty` and\n * `onNonEmpty` have different return types.\n *\n * @example\n * import { matchRightW } from 'fp-ts/Array'\n *\n * const f = matchRightW(\n *   () => 0,\n *   (head: string[], tail: string) => `Found ${head.length} elements folllowed by \"${tail}\"`\n * );\n * assert.strictEqual(f([\"a\", \"b\", \"c\"]), 'Found 2 elements folllowed by \"c\"');\n * assert.strictEqual(f([]), 0);\n *\n * @category destructors\n * @since 2.11.0\n */\nexport var matchRightW = function (onEmpty, onNonEmpty) { return function (as) { return (isNonEmpty(as) ? onNonEmpty(NEA.init(as), NEA.last(as)) : onEmpty()); }; };\n/**\n * Takes an array, if the array is empty it returns the result of `onEmpty`, otherwise\n * it passes the array to `onNonEmpty` broken  into its initial elements and the last element.\n *\n * @example\n * import { matchRight } from 'fp-ts/Array'\n *\n * const len: <A>(as: Array<A>) => number = matchRight(\n *   () => 0,\n *   (head, _) => 1 + len(head)\n * );\n * assert.strictEqual(len([1, 2, 3]), 3);\n *\n * @category destructors\n * @since 2.10.0\n */\nexport var matchRight = matchRightW;\n/**\n * Alias of [`matchRight`](#matchright).\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var foldRight = matchRight;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * Same as [`chain`](#chain), but passing also the index to the iterating function.\n *\n * @example\n * import { chainWithIndex, replicate } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (index: number, x: string) => replicate(2, `${x}${index}`);\n * assert.deepStrictEqual(pipe([\"a\", \"b\", \"c\"], chainWithIndex(f)), [\"a0\", \"a0\", \"b1\", \"b1\", \"c2\", \"c2\"]);\n *\n * @category combinators\n * @since 2.7.0\n */\nexport var chainWithIndex = function (f) { return function (as) {\n    var out = [];\n    for (var i = 0; i < as.length; i++) {\n        out.push.apply(out, f(i, as[i]));\n    }\n    return out;\n}; };\n/**\n * Same as `reduce` but it carries over the intermediate steps\n *\n * @example\n * import { scanLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var scanLeft = function (b, f) { return function (as) {\n    var len = as.length;\n    var out = new Array(len + 1);\n    out[0] = b;\n    for (var i = 0; i < len; i++) {\n        out[i + 1] = f(out[i], as[i]);\n    }\n    return out;\n}; };\n/**\n * Fold an array from the right, keeping all intermediate results instead of only the final result\n *\n * @example\n * import { scanRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var scanRight = function (b, f) { return function (as) {\n    var len = as.length;\n    var out = new Array(len + 1);\n    out[len] = b;\n    for (var i = len - 1; i >= 0; i--) {\n        out[i] = f(as[i], out[i + 1]);\n    }\n    return out;\n}; };\n/**\n * Calculate the number of elements in a `Array`.\n *\n * @example\n * import { size } from 'fp-ts/Array'\n *\n * assert.strictEqual(size([\"a\",\"b\",\"c\"]),3)\n *\n * @since 2.10.0\n */\nexport var size = function (as) { return as.length; };\n/**\n * Test whether an array contains a particular index\n *\n * @example\n * import { isOutOfBound } from 'fp-ts/Array'\n *\n * assert.strictEqual(isOutOfBound(1,[\"a\",\"b\",\"c\"]),false)\n * assert.strictEqual(isOutOfBound(-1,[\"a\",\"b\",\"c\"]),true)\n * assert.strictEqual(isOutOfBound(3,[\"a\",\"b\",\"c\"]),true)\n *\n * @since 2.0.0\n */\nexport var isOutOfBound = NEA.isOutOfBound;\n// TODO: remove non-curried overloading in v3\n/**\n * This function provides a safe way to read a value at a particular index from an array.\n * It returns a `none` if the index is out of bounds, and a `some` of the element if the\n * index is valid.\n *\n * @example\n * import { lookup } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], lookup(1)), some(2))\n * assert.deepStrictEqual(pipe([1, 2, 3], lookup(3)), none)\n *\n * @since 2.0.0\n */\nexport var lookup = RA.lookup;\n/**\n * Get the first element in an array, or `None` if the array is empty\n *\n * @example\n * import { head } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(head([1, 2, 3]), some(1))\n * assert.deepStrictEqual(head([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var head = RA.head;\n/**\n * Get the last element in an array, or `None` if the array is empty\n *\n * @example\n * import { last } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(last([1, 2, 3]), some(3))\n * assert.deepStrictEqual(last([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var last = RA.last;\n/**\n * Get all but the first element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { tail } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(tail([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var tail = function (as) { return (isNonEmpty(as) ? _.some(NEA.tail(as)) : _.none); };\n/**\n * Get all but the last element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { init } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))\n * assert.deepStrictEqual(init([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var init = function (as) { return (isNonEmpty(as) ? _.some(NEA.init(as)) : _.none); };\n/**\n * Keep only a max number of elements from the start of an `Array`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { takeLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(takeLeft(2)([1, 2, 3, 4, 5]), [1, 2]);\n * assert.deepStrictEqual(takeLeft(7)([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n * assert.deepStrictEqual(takeLeft(0)([1, 2, 3, 4, 5]), []);\n * assert.deepStrictEqual(takeLeft(-1)([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var takeLeft = function (n) { return function (as) { return (isOutOfBound(n, as) ? copy(as) : as.slice(0, n)); }; };\n/**\n * Keep only a max number of elements from the end of an `Array`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { takeRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(takeRight(2)([1, 2, 3, 4, 5]), [4, 5]);\n * assert.deepStrictEqual(takeRight(7)([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n * assert.deepStrictEqual(takeRight(0)([1, 2, 3, 4, 5]), []);\n * assert.deepStrictEqual(takeRight(-1)([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var takeRight = function (n) { return function (as) {\n    return isOutOfBound(n, as) ? copy(as) : n === 0 ? [] : as.slice(-n);\n}; };\nexport function takeLeftWhile(predicate) {\n    return function (as) {\n        var out = [];\n        for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n            var a = as_1[_i];\n            if (!predicate(a)) {\n                break;\n            }\n            out.push(a);\n        }\n        return out;\n    };\n}\nvar spanLeftIndex = function (as, predicate) {\n    var l = as.length;\n    var i = 0;\n    for (; i < l; i++) {\n        if (!predicate(as[i])) {\n            break;\n        }\n    }\n    return i;\n};\nexport function spanLeft(predicate) {\n    return function (as) {\n        var _a = splitAt(spanLeftIndex(as, predicate))(as), init = _a[0], rest = _a[1];\n        return { init: init, rest: rest };\n    };\n}\n/**\n * Creates a new `Array` which is a copy of the input dropping a max number of elements from the start.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { dropLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(dropLeft(2)([1, 2, 3]), [3]);\n * assert.deepStrictEqual(dropLeft(5)([1, 2, 3]), []);\n * assert.deepStrictEqual(dropLeft(0)([1, 2, 3]), [1, 2, 3]);\n * assert.deepStrictEqual(dropLeft(-2)([1, 2, 3]), [1, 2, 3]);\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var dropLeft = function (n) { return function (as) {\n    return n <= 0 || isEmpty(as) ? copy(as) : n >= as.length ? [] : as.slice(n, as.length);\n}; };\n/**\n * Creates a new `Array` which is a copy of the input dropping a max number of elements from the end.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { dropRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(dropRight(2)([1, 2, 3]), [1]);\n * assert.deepStrictEqual(dropRight(5)([1, 2, 3]), []);\n * assert.deepStrictEqual(dropRight(0)([1, 2, 3]), [1, 2, 3]);\n * assert.deepStrictEqual(dropRight(-2)([1, 2, 3]), [1, 2, 3]);\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var dropRight = function (n) { return function (as) {\n    return n <= 0 || isEmpty(as) ? copy(as) : n >= as.length ? [] : as.slice(0, as.length - n);\n}; };\nexport function dropLeftWhile(predicate) {\n    return function (as) { return as.slice(spanLeftIndex(as, predicate)); };\n}\n/**\n * `findIndex` returns an `Option` containing the first index for which a predicate holds.\n * It returns `None` if no element satisfies the predicate.\n * Similar to [`findFirst`](#findFirst) but returning the index instead of the element.\n *\n * @example\n * import { findIndex } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)\n *\n * @since 2.0.0\n */\nexport var findIndex = RA.findIndex;\nexport function findFirst(predicate) {\n    return RA.findFirst(predicate);\n}\n/**\n * Given a selector function which takes an element and returns an option,\n * this function applies the selector to each element of the array and\n * returns the first `Some` result. Otherwise it returns `None`.\n *\n * @example\n * import { findFirstMap } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string;\n *   readonly age: number;\n * }\n *\n * const persons: Array<Person> = [\n *   { name: \"John\", age: 16 },\n *   { name: \"Mary\", age: 45 },\n *   { name: \"Joey\", age: 28 },\n * ];\n *\n * const nameOfPersonAbove18 = (p: Person) => (p.age <= 18 ? none : some(p.name));\n * const nameOfPersonAbove70 = (p: Person) => (p.age <= 70 ? none : some(p.name));\n * assert.deepStrictEqual(findFirstMap(nameOfPersonAbove18)(persons), some(\"Mary\"));\n * assert.deepStrictEqual(findFirstMap(nameOfPersonAbove70)(persons), none);\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var findFirstMap = RA.findFirstMap;\nexport function findLast(predicate) {\n    return RA.findLast(predicate);\n}\n/**\n * Given a selector function which takes an element and returns an option,\n * this function applies the selector to each element of the array starting from the\n * end and returns the last `Some` result. Otherwise it returns `None`.\n *\n * @example\n * import { findLastMap } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string;\n *   readonly age: number;\n * }\n *\n * const persons: Array<Person> = [\n *   { name: \"John\", age: 16 },\n *   { name: \"Mary\", age: 45 },\n *   { name: \"Joey\", age: 28 },\n * ];\n *\n * const nameOfPersonAbove18 = (p: Person) => (p.age <= 18 ? none : some(p.name));\n * const nameOfPersonAbove70 = (p: Person) => (p.age <= 70 ? none : some(p.name));\n * assert.deepStrictEqual(findLastMap(nameOfPersonAbove18)(persons), some(\"Joey\"));\n * assert.deepStrictEqual(findLastMap(nameOfPersonAbove70)(persons), none);\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var findLastMap = RA.findLastMap;\n/**\n * Returns the index of the last element of the list which matches the predicate.\n * It returns an `Option` containing the index or `None` if not found.\n *\n * @example\n * import { findLastIndex } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface X {\n *   readonly a: number\n *   readonly b: number\n * }\n * const xs: Array<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 1)(xs), some(1))\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 4)(xs), none)\n *\n * @since 2.0.0\n */\nexport var findLastIndex = RA.findLastIndex;\n/**\n * This function takes an array and makes a new array containing the same elements.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var copy = function (as) { return as.slice(); };\n/**\n * Insert an element at the specified index, creating a new array,\n * or returning `None` if the index is out of bounds.\n *\n * @example\n * import { insertAt } from 'fp-ts/Array'\n * import { some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))\n *\n * @since 2.0.0\n */\nexport var insertAt = function (i, a) { return function (as) {\n    return i < 0 || i > as.length ? _.none : _.some(unsafeInsertAt(i, a, as));\n}; };\n/**\n * Change the element at the specified index, creating a new array,\n * or returning `None` if the index is out of bounds.\n *\n * @example\n * import { updateAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))\n * assert.deepStrictEqual(updateAt(1, 1)([]), none)\n *\n * @since 2.0.0\n */\nexport var updateAt = function (i, a) { return modifyAt(i, function () { return a; }); };\n/**\n * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds.\n *\n * @example\n * import { deleteAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(deleteAt(1)([]), none)\n *\n * @since 2.0.0\n */\nexport var deleteAt = function (i) { return function (as) {\n    return isOutOfBound(i, as) ? _.none : _.some(unsafeDeleteAt(i, as));\n}; };\n/**\n * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out\n * of bounds.\n *\n * @example\n * import { modifyAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * const double = (x: number): number => x * 2\n * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))\n * assert.deepStrictEqual(modifyAt(1, double)([]), none)\n *\n * @since 2.0.0\n */\nexport var modifyAt = function (i, f) { return function (as) {\n    return isOutOfBound(i, as) ? _.none : _.some(unsafeUpdateAt(i, f(as[i]), as));\n}; };\n/**\n * Reverse an array, creating a new array\n *\n * @example\n * import { reverse } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var reverse = function (as) { return (isEmpty(as) ? [] : as.slice().reverse()); };\n/**\n * Takes an `Array` of `Either` and produces a new `Array` containing\n * the values of all the `Right` elements in the same order.\n *\n * @example\n * import { rights } from 'fp-ts/Array'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var rights = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Right') {\n            r.push(a.right);\n        }\n    }\n    return r;\n};\n/**\n * Takes an `Array` of `Either` and produces a new `Array` containing\n * the values of all the `Left` elements in the same order.\n *\n * @example\n * import { lefts } from 'fp-ts/Array'\n * import { left, right } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var lefts = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Left') {\n            r.push(a.left);\n        }\n    }\n    return r;\n};\n/**\n * Sort the elements of an array in increasing order, creating a new array\n *\n * @example\n * import { sort } from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(sort(N.Ord)([3, 2, 1]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var sort = function (O) { return function (as) {\n    return as.length <= 1 ? copy(as) : as.slice().sort(O.compare);\n}; };\n/**\n * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one\n * input array is short, excess elements of the longer array are discarded.\n *\n * @example\n * import { zipWith } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var zipWith = function (fa, fb, f) {\n    var fc = [];\n    var len = Math.min(fa.length, fb.length);\n    for (var i = 0; i < len; i++) {\n        fc[i] = f(fa[i], fb[i]);\n    }\n    return fc;\n};\nexport function zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return zipWith(as, bs, function (a, b) { return [a, b]; });\n}\n/**\n * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays\n *\n * @example\n * import { unzip } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])\n *\n * @since 2.0.0\n */\nexport var unzip = function (as) {\n    var fa = [];\n    var fb = [];\n    for (var i = 0; i < as.length; i++) {\n        fa[i] = as[i][0];\n        fb[i] = as[i][1];\n    }\n    return [fa, fb];\n};\n/**\n * Creates a new `Array`, prepending an element to every member of the input `Array`.\n *\n * @example\n * import { prependAll } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var prependAll = function (middle) {\n    var f = NEA.prependAll(middle);\n    return function (as) { return (isNonEmpty(as) ? f(as) : []); };\n};\n/**\n * Creates a new `Array` placing an element in between members of the input `Array`.\n *\n * @example\n * import { intersperse } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\nexport var intersperse = function (middle) {\n    var f = NEA.intersperse(middle);\n    return function (as) { return (isNonEmpty(as) ? f(as) : copy(as)); };\n};\n/**\n * Creates a new `Array` rotating the input `Array` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var rotate = function (n) {\n    var f = NEA.rotate(n);\n    return function (as) { return (isNonEmpty(as) ? f(as) : copy(as)); };\n};\n// TODO: remove non-curried overloading in v3\n/**\n * Test if a value is a member of an `Array`. Takes a `Eq<A>` as a single\n * argument which returns the function to use to search for a value of type `A` in\n * an `Array<A>`.\n *\n * @example\n * import { elem } from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(pipe([1, 2, 3], elem(N.Eq)(2)), true)\n * assert.strictEqual(pipe([1, 2, 3], elem(N.Eq)(0)), false)\n *\n * @since 2.0.0\n */\nexport var elem = RA.elem;\n/**\n * Creates a new `Array` removing duplicate elements, keeping the first occurrence of an element,\n * based on a `Eq<A>`.\n *\n * @example\n * import { uniq } from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var uniq = function (E) {\n    var f = NEA.uniq(E);\n    return function (as) { return (isNonEmpty(as) ? f(as) : copy(as)); };\n};\n/**\n * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import { sortBy } from 'fp-ts/Array'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age: number\n * }\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = sortBy([byName, byAge])\n *\n * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var sortBy = function (ords) {\n    var f = NEA.sortBy(ords);\n    return function (as) { return (isNonEmpty(as) ? f(as) : copy(as)); };\n};\n/**\n * A useful recursion pattern for processing an array to produce a new array, often used for \"chopping\" up the input\n * array. Typically chop is called with some function that will consume an initial prefix of the array and produce a\n * value and the rest of the array.\n *\n * @example\n * import { Eq } from 'fp-ts/Eq'\n * import * as A from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * const group = <A>(S: Eq<A>): ((as: Array<A>) => Array<Array<A>>) => {\n *   return A.chop(as => {\n *     const { init, rest } = pipe(as, A.spanLeft((a: A) => S.equals(a, as[0])))\n *     return [init, rest]\n *   })\n * }\n * assert.deepStrictEqual(group(N.Eq)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var chop = function (f) {\n    var g = NEA.chop(f);\n    return function (as) { return (isNonEmpty(as) ? g(as) : []); };\n};\n/**\n * Splits an `Array` into two pieces, the first piece has max `n` elements.\n *\n * @example\n * import { splitAt } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var splitAt = function (n) { return function (as) {\n    return n >= 1 && isNonEmpty(as) ? NEA.splitAt(n)(as) : isEmpty(as) ? [copy(as), []] : [[], copy(as)];\n}; };\n/**\n * Splits an array into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the array. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that\n *\n * ```ts\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `xs`.\n *\n * @example\n * import { chunksOf } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var chunksOf = function (n) {\n    var f = NEA.chunksOf(n);\n    return function (as) { return (isNonEmpty(as) ? f(as) : []); };\n};\n/**\n * @category combinators\n * @since 2.11.0\n */\nexport var fromOptionK = function (f) { return function () {\n    var a = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        a[_i] = arguments[_i];\n    }\n    return fromOption(f.apply(void 0, a));\n}; };\nexport function comprehension(input, f, g) {\n    if (g === void 0) { g = function () { return true; }; }\n    var go = function (scope, input) {\n        return isNonEmpty(input)\n            ? pipe(NEA.head(input), chain(function (x) { return go(pipe(scope, append(x)), NEA.tail(input)); }))\n            : g.apply(void 0, scope) ? [f.apply(void 0, scope)]\n                : [];\n    };\n    return go([], input);\n}\n/**\n * @category combinators\n * @since 2.11.0\n */\nexport var concatW = function (second) { return function (first) {\n    return isEmpty(first) ? copy(second) : isEmpty(second) ? copy(first) : first.concat(second);\n}; };\n/**\n * @category combinators\n * @since 2.11.0\n */\nexport var concat = concatW;\nexport function union(E) {\n    var unionE = NEA.union(E);\n    return function (first, second) {\n        if (second === undefined) {\n            var unionE_1 = union(E);\n            return function (second) { return unionE_1(second, first); };\n        }\n        return isNonEmpty(first) && isNonEmpty(second)\n            ? unionE(second)(first)\n            : isNonEmpty(first)\n                ? copy(first)\n                : copy(second);\n    };\n}\nexport function intersection(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var intersectionE_1 = intersection(E);\n            return function (ys) { return intersectionE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return elemE(a, ys); });\n    };\n}\nexport function difference(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var differenceE_1 = difference(E);\n            return function (ys) { return differenceE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return !elemE(a, ys); });\n    };\n}\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return pipe(fa, map(f)); };\n/* istanbul ignore next */\nvar _mapWithIndex = function (fa, f) { return pipe(fa, mapWithIndex(f)); };\nvar _ap = function (fab, fa) { return pipe(fab, ap(fa)); };\nvar _chain = function (ma, f) { return pipe(ma, chain(f)); };\n/* istanbul ignore next */\nvar _filter = function (fa, predicate) { return pipe(fa, filter(predicate)); };\n/* istanbul ignore next */\nvar _filterMap = function (fa, f) { return pipe(fa, filterMap(f)); };\n/* istanbul ignore next */\nvar _partition = function (fa, predicate) {\n    return pipe(fa, partition(predicate));\n};\n/* istanbul ignore next */\nvar _partitionMap = function (fa, f) { return pipe(fa, partitionMap(f)); };\n/* istanbul ignore next */\nvar _partitionWithIndex = function (fa, predicateWithIndex) { return pipe(fa, partitionWithIndex(predicateWithIndex)); };\n/* istanbul ignore next */\nvar _partitionMapWithIndex = function (fa, f) { return pipe(fa, partitionMapWithIndex(f)); };\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return pipe(fa, alt(that)); };\nvar _reduce = function (fa, b, f) { return pipe(fa, reduce(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) {\n    var foldMapM = foldMap(M);\n    return function (fa, f) { return pipe(fa, foldMapM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return pipe(fa, reduceRight(b, f)); };\n/* istanbul ignore next */\nvar _reduceWithIndex = function (fa, b, f) {\n    return pipe(fa, reduceWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = foldMapWithIndex(M);\n    return function (fa, f) { return pipe(fa, foldMapWithIndexM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return pipe(fa, reduceRightWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _filterMapWithIndex = function (fa, f) { return pipe(fa, filterMapWithIndex(f)); };\n/* istanbul ignore next */\nvar _filterWithIndex = function (fa, predicateWithIndex) { return pipe(fa, filterWithIndex(predicateWithIndex)); };\n/* istanbul ignore next */\nvar _extend = function (fa, f) { return pipe(fa, extend(f)); };\n/* istanbul ignore next */\nvar _traverse = function (F) {\n    var traverseF = traverse(F);\n    return function (ta, f) { return pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (ta, f) { return pipe(ta, traverseWithIndexF(f)); };\n};\nvar _chainRecDepthFirst = RA._chainRecDepthFirst;\nvar _chainRecBreadthFirst = RA._chainRecBreadthFirst;\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * Given an element of the base type, `of` builds an `Array` containing just that\n * element of the base type (this is useful for building a `Monad`).\n *\n * @example\n * import { of } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(of(\"a\"), [\"a\"]);\n *\n * @category Pointed\n * @since 2.0.0\n */\nexport var of = NEA.of;\n/**\n * Makes an empty `Array`, useful for building a [`Monoid`](#Monoid)\n *\n * @category Zero\n * @since 2.7.0\n */\nexport var zero = function () { return []; };\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: Array<A>) => Array<B>`.\n * In practice it applies the base function to each element of the array and collects the\n * results in a new array.\n *\n * @example\n * import { map } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (n: number) => n * 2;\n * assert.deepStrictEqual(pipe([1, 2, 3], map(f)), [2, 4, 6]);\n *\n * @category Functor\n * @since 2.0.0\n */\nexport var map = function (f) { return function (fa) { return fa.map(function (a) { return f(a); }); }; };\n/**\n * Apply a function to an argument under a type constructor.\n *\n * It can be used to extend the concept of [`map`](#map) to a function that\n * takes more than one parameter as described\n * read [here](https://dev.to/gcanti/getting-started-with-fp-ts-applicative-1kb3)\n *\n * @example\n * import { ap, map, of } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * // a curried function with 3 input parameteres\n * const f = (s1: string) => (n: number) => (s2: string) => s1 + n + s2;\n *\n * // let's use `ap` to iterate `f` over an array for each input parameter\n * assert.deepStrictEqual(pipe([\"a\", \"b\"], map(f), ap([1, 2]), ap([\"😀\", \"😫\", \"😎\"])), [\n *   \"a1😀\", \"a1😫\", \"a1😎\",\n *   \"a2😀\", \"a2😫\", \"a2😎\",\n *   \"b1😀\", \"b1😫\", \"b1😎\",\n *   \"b2😀\", \"b2😫\", \"b2😎\",\n * ]);\n *\n * // given Array implements the Applicative interface with the `of` method,\n * // we can write exactly the same thing in a more symmetric way\n * // using `of` on `f` and `ap` on each array in input\n * assert.deepStrictEqual(\n *   pipe(of(f), ap([\"a\", \"b\"]), ap([1, 2]), ap([\"😀\", \"😫\", \"😎\"])),\n *   pipe([\"a\", \"b\"], map(f), ap([1, 2]), ap([\"😀\", \"😫\", \"😎\"]))\n * );\n *\n * @category Apply\n * @since 2.0.0\n */\nexport var ap = function (fa) { return chain(function (f) { return pipe(fa, map(f)); }); };\n/**\n * Composes computations in sequence, using the return value of one computation to\n * determine the next computation.\n *\n * In other words it takes a function `f` that produces an array from a single element of\n * the base type `A` and returns a new function which applies `f` to each element of the\n * input array (like [`map`](#map)) and, instead of returning an array of arrays, concatenates the\n * results into a single array (like [`flatten`](#flatten)).\n *\n * This is the `chain` component of the array `Monad`.\n *\n * @example\n * import { chain, map, replicate } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (n: number) => replicate(n, `${n}`);\n * assert.deepStrictEqual(pipe([1, 2, 3], map(f)), [[\"1\"], [\"2\", \"2\"], [\"3\", \"3\", \"3\"]]);\n * assert.deepStrictEqual(pipe([1, 2, 3], chain(f)), [\"1\", \"2\", \"2\", \"3\", \"3\", \"3\"]);\n *\n * @category Monad\n * @since 2.0.0\n */\nexport var chain = function (f) { return function (ma) {\n    return pipe(ma, chainWithIndex(function (_, a) { return f(a); }));\n}; };\n/**\n * Takes an array of arrays of `A` and flattens them into an array of `A`\n * by concatenating the elements of each array in order.\n *\n * Derivable from [`chain`](#chain).\n *\n * @example\n * import { flatten } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(flatten([[\"a\"], [\"b\", \"c\"], [\"d\", \"e\", \"f\"]]), [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"]);\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var flatten = \n/*#__PURE__*/\nchain(identity);\n/**\n * Same as [`map`](#map), but the iterating function takes both the index and the value\n * of the element.\n *\n * @example\n * import { mapWithIndex } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (i: number, s: string) => `${s} - ${i}`;\n * assert.deepStrictEqual(pipe([\"a\", \"b\", \"c\"], mapWithIndex(f)), [\"a - 0\", \"b - 1\", \"c - 2\"]);\n *\n * @category FunctorWithIndex\n * @since 2.0.0\n */\nexport var mapWithIndex = function (f) { return function (fa) {\n    return fa.map(function (a, i) { return f(i, a); });\n}; };\n/**\n * Maps an array with an iterating function that takes the index and the value of\n * each element and returns an `Option`. It keeps only the `Some` values discarding\n * the `None`s.\n *\n * Same as [`filterMap`](#filterMap), but with an iterating function which takes also\n * the index as input.\n *\n * @example\n * import { filterMapWithIndex } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n * import { option } from \"fp-ts\";\n *\n * const f = (i: number, s: string) => (i % 2 === 1 ? option.some(s.toUpperCase()) : option.none);\n * assert.deepStrictEqual(pipe([\"a\", \"no\", \"neither\", \"b\"], filterMapWithIndex(f)), [\"NO\", \"B\"]);\n *\n * @category FilterableWithIndex\n * @since 2.0.0\n */\nexport var filterMapWithIndex = function (f) { return function (fa) {\n    var out = [];\n    for (var i = 0; i < fa.length; i++) {\n        var optionB = f(i, fa[i]);\n        if (_.isSome(optionB)) {\n            out.push(optionB.value);\n        }\n    }\n    return out;\n}; };\n/**\n * Maps an array with an iterating function that returns an `Option`\n * and it keeps only the `Some` values discarding the `None`s.\n *\n * @example\n * import { filterMap } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n * import { option } from \"fp-ts\";\n *\n * const f = (s: string) => s.length === 1 ? option.some(s.toUpperCase()) : option.none;\n * assert.deepStrictEqual(pipe([\"a\", \"no\", \"neither\", \"b\"], filterMap(f)), [\"A\", \"B\"]);\n *\n * @category Filterable\n * @since 2.0.0\n */\nexport var filterMap = function (f) {\n    return filterMapWithIndex(function (_, a) { return f(a); });\n};\n/**\n * Compact an array of `Option`s discarding the `None` values and\n * keeping the `Some` values. It returns a new array containing the values of\n * the `Some` options.\n *\n * @example\n * import { compact } from 'fp-ts/Array'\n * import { option } from \"fp-ts\";\n *\n * assert.deepStrictEqual(compact([option.some(\"a\"), option.none, option.some(\"b\")]), [\"a\", \"b\"]);\n *\n * @category Compactable\n * @since 2.0.0\n */\nexport var compact = \n/*#__PURE__*/\nfilterMap(identity);\n/**\n * Separate an array of `Either`s into `Left`s and `Right`s, creating two new arrays:\n * one containing all the left values and one containing all the right values.\n *\n * @example\n * import { separate } from 'fp-ts/Array'\n * import { either } from \"fp-ts\";\n *\n * assert.deepStrictEqual(separate([either.right(\"r1\"), either.left(\"l1\"), either.right(\"r2\")]), {\n *   left: [\"l1\"],\n *   right: [\"r1\", \"r2\"],\n * });\n *\n * @category Compactable\n * @since 2.0.0\n */\nexport var separate = function (fa) {\n    var left = [];\n    var right = [];\n    for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {\n        var e = fa_1[_i];\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return separated(left, right);\n};\n/**\n * Given an iterating function that is a `Predicate` or a `Refinement`,\n * `filter` creates a new `Array` containing the elements of the original\n * `Array` for which the iterating function is `true`.\n *\n * @example\n * import { filter } from 'fp-ts/Array'\n * import { isString } from \"fp-ts/lib/string\";\n *\n * assert.deepStrictEqual(filter(isString)([\"a\", 1, {}, \"b\", 5]), [\"a\", \"b\"]);\n * assert.deepStrictEqual(filter((x:number) => x > 0)([-3, 1, -2, 5]), [1, 5]);\n *\n * @category Filterable\n * @since 2.0.0\n */\nexport var filter = function (predicate) { return function (as) { return as.filter(predicate); }; };\n/**\n * Given an iterating function that is a `Predicate` or a `Refinement`,\n * `partition` creates two new `Array`s: `right` containing the elements of the original\n * `Array` for which the iterating function is `true`, `left` containing the elements\n * for which it is false.\n *\n * @example\n * import { partition } from 'fp-ts/Array'\n * import { isString } from \"fp-ts/lib/string\";\n *\n * assert.deepStrictEqual(partition(isString)([\"a\", 1, {}, \"b\", 5]), { left: [1, {}, 5], right: [\"a\", \"b\"] });\n * assert.deepStrictEqual(partition((x: number) => x > 0)([-3, 1, -2, 5]), { left: [-3, -2], right: [1, 5] });\n *\n * @category Filterable\n * @since 2.0.0\n */\nexport var partition = function (predicate) {\n    return partitionWithIndex(function (_, a) { return predicate(a); });\n};\n/**\n * Same as [`partition`](#partition), but passing also the index to the iterating function.\n *\n * @example\n * import { partitionWithIndex } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(partitionWithIndex((index, x: number) => index < 3 && x > 0)([-2, 5, 6, 7]), {\n *   left: [-2, 7],\n *   right: [5, 6],\n * });\n *\n * @category FilterableWithIndex\n * @since 2.0.0\n */\nexport var partitionWithIndex = function (predicateWithIndex) { return function (as) {\n    var left = [];\n    var right = [];\n    for (var i = 0; i < as.length; i++) {\n        var b = as[i];\n        if (predicateWithIndex(i, b)) {\n            right.push(b);\n        }\n        else {\n            left.push(b);\n        }\n    }\n    return separated(left, right);\n}; };\n/**\n * Given an iterating function that returns an `Either`,\n * `partitionMap` applies the iterating function to each element and it creates two `Array`s:\n * `right` containing the values of `Right` results, `left` containing the values of `Left` results.\n *\n * @example\n * import { partitionMap } from 'fp-ts/Array'\n * import { Either, left, right } from \"fp-ts/lib/Either\";\n *\n * const upperIfString = <B>(x: B): Either<B, string> =>\n *   typeof x === \"string\" ? right(x.toUpperCase()) : left(x);\n * assert.deepStrictEqual(partitionMap(upperIfString)([-2, \"hello\", 6, 7, \"world\"]), {\n *   left: [-2, 6, 7],\n *   right: [ 'HELLO', 'WORLD' ],\n * });\n *\n * @category Filterable\n * @since 2.0.0\n */\nexport var partitionMap = function (f) { return partitionMapWithIndex(function (_, a) { return f(a); }); };\n/**\n * Same as [`partitionMap`](#partitionMap), but passing also the index to the iterating function.\n *\n * @example\n * import { partitionMapWithIndex } from 'fp-ts/Array'\n * import { Either, left, right } from \"fp-ts/lib/Either\";\n *\n * const upperIfStringBefore3 = <B>(index: number, x: B): Either<B, string> =>\n *   index < 3 && typeof x === \"string\" ? right(x.toUpperCase()) : left(x);\n * assert.deepStrictEqual(partitionMapWithIndex(upperIfStringBefore3)([-2, \"hello\", 6, 7, \"world\"]), {\n *   left: [-2, 6, 7, \"world\"],\n *   right: [\"HELLO\"],\n * });\n *\n * @category FilterableWithIndex\n * @since 2.0.0\n */\nexport var partitionMapWithIndex = function (f) { return function (fa) {\n    var left = [];\n    var right = [];\n    for (var i = 0; i < fa.length; i++) {\n        var e = f(i, fa[i]);\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return separated(left, right);\n}; };\n/**\n * Less strict version of [`alt`](#alt), it can concatenate `Array`s of different base types.\n *\n * @example\n * import { altW } from 'fp-ts/Array';\n *\n * assert.deepStrictEqual(altW(() => [2, 3, 4])([\"a\"]), [\"a\", 2, 3, 4]);\n *\n * @category Alt\n * @since 2.9.0\n */\nexport var altW = function (that) { return function (fa) { return fa.concat(that()); }; };\n/**\n * `alt` implements the `Alt` iterface by concatenation of `Array`s.\n * `Alt` interface is similar to `Semigroup` for higher-kinded types such\n * as `Array` and `Option`: the example below shows both `Alt`'s `alt` and\n * `Semigroup`'s `concat` functions.\n *\n * @example\n * import { alt, concat } from 'fp-ts/Array';\n *\n * assert.deepStrictEqual(alt(() => [2, 3, 4])([1]), [1, 2, 3, 4]);\n * assert.deepStrictEqual(concat([2, 3, 4])([1]), [1, 2, 3, 4]);\n *\n * @category Alt\n * @since 2.0.0\n */\nexport var alt = altW;\n/**\n * Same as [`filter`](#filter), but passing also the index to the iterating function.\n *\n * @example\n * import { filterWithIndex } from 'fp-ts/Array';\n *\n * const f = (index: number, x: number) => x > 0 && index <= 2;\n * assert.deepStrictEqual(filterWithIndex(f)([-3, 1, -2, 5]), [1]);\n *\n * @category FilterableWithIndex\n * @since 2.0.0\n */\nexport var filterWithIndex = function (predicateWithIndex) { return function (as) {\n    return as.filter(function (b, i) { return predicateWithIndex(i, b); });\n}; };\n/**\n * Given an iterating function that takes `Array<A>` as input, `extend` returns\n * an array containing the results of the iterating function applied to the whole input\n * `Array`, then to the input `Array` without the first element, then to the input\n * `Array` without the first two elements, etc.\n *\n * @example\n * import { extend } from 'fp-ts/Array'\n *\n * const f = (a: string[]) => a.join(\",\");\n * assert.deepStrictEqual(extend(f)([\"a\", \"b\", \"c\"]), [\"a,b,c\", \"b,c\", \"c\"]);\n *\n * @category Extend\n * @since 2.0.0\n */\nexport var extend = function (f) { return function (wa) {\n    return wa.map(function (_, i) { return f(wa.slice(i)); });\n}; };\n/**\n * `duplicate` returns an array containing the whole input `Array`,\n * then to the input `Array` dropping the first element, then to the input\n * `Array` dropping the first two elements, etc.\n * Derivable from `Extend`.\n *\n * @example\n * import { duplicate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(duplicate([\"a\", \"b\", \"c\"]), [[\"a\", \"b\", \"c\"], [\"b\", \"c\"], [\"c\"]]);\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var duplicate = \n/*#__PURE__*/\nextend(identity);\n/**\n * Map and fold an `Array`.\n * Map the `Array` passing each value to the iterating function.\n * Then fold the results using the provided `Monoid`.\n *\n * @example\n * import { foldMap } from 'fp-ts/Array'\n *\n * const monoid = { concat: (a: string, b: string) => a + b, empty: \"\" };\n * const f = (s: string) => s.toUpperCase()\n * assert.deepStrictEqual(foldMap(monoid)(f)([\"a\", \"b\", \"c\"]), \"ABC\");\n *\n * @category Foldable\n * @since 2.0.0\n */\nexport var foldMap = RA.foldMap;\n/**\n * Same as [`foldMap`](#foldMap) but passing also the index to the iterating function.\n *\n * @example\n * import { foldMapWithIndex } from 'fp-ts/Array'\n *\n * const monoid = { concat: (a: string, b: string) => a + b, empty: \"\" };\n * const f = (index:number, s: string) => `${s.toUpperCase()}(${index})`\n * assert.deepStrictEqual(foldMapWithIndex(monoid)(f)([\"a\", \"b\", \"c\"]), \"A(0)B(1)C(2)\");\n *\n * @category FoldableWithIndex\n * @since 2.0.0\n */\nexport var foldMapWithIndex = RA.foldMapWithIndex;\n/**\n * Reduces an `Array`.\n *\n * `reduce` executes the supplied iterating function on each element of the array,\n * in order, passing in the element and the return value from the calculation on the preceding element.\n *\n * The first time that the iterating function is called there is no \"return value of the\n * previous calculation\", the initial value is used in its place.\n *\n * @example\n * import { reduce } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(reduce(5, (acc: number, cur: number) => acc * cur)([2, 3]), 5 * 2 * 3);\n *\n * @category Foldable\n * @since 2.0.0\n */\nexport var reduce = RA.reduce;\n/**\n * Same as [`reduce`](#reduce) but passing also the index to the iterating function.\n *\n * @example\n * import { reduceWithIndex } from 'fp-ts/Array'\n *\n * const f = (index: number, acc: string, cur: unknown) =>\n *   acc + (typeof cur === \"string\" ? cur.toUpperCase() + index : \"\");\n * assert.deepStrictEqual(reduceWithIndex(\"\", f)([2, \"a\", \"b\", null]), \"A1B2\");\n *\n * @category FoldableWithIndex\n * @since 2.0.0\n */\nexport var reduceWithIndex = RA.reduceWithIndex;\n/**\n * Same as [`reduce`](#reduce) but applied from the end to the start.\n *\n * *Note*: the iterating function in this case takes the accumulator as the last argument.\n *\n * @example\n * import { reduceRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(reduceRight(\"\", (cur: string, acc: string) => acc + cur)([\"a\", \"b\", \"c\"]), \"cba\");\n *\n * @category Foldable\n * @since 2.0.0\n */\nexport var reduceRight = RA.reduceRight;\n/**\n * Same as [`reduceRight`](#reduceRight) but passing also the index to the iterating function.\n *\n * @example\n * import { reduceRightWithIndex } from 'fp-ts/Array'\n *\n * const f = (index: number, cur: unknown, acc: string) =>\n *   acc + (typeof cur === \"string\" ? cur.toUpperCase() + index : \"\");\n * assert.deepStrictEqual(reduceRightWithIndex(\"\", f)([2, \"a\", \"b\", null]), \"B2A1\");\n *\n * @category FoldableWithIndex\n * @since 2.0.0\n */\nexport var reduceRightWithIndex = RA.reduceRightWithIndex;\n/**\n * Given an iterating function that returns a `HKT` (higher kinded type), `traverse`\n * applies the iterating function to each element of the `Array` and then [`sequence`](#sequence)-s\n * the results using the provided `Applicative`.\n *\n * E.g. suppose you have an `Array` and you want to format each element with a function\n * that returns a result or an error as `f = (a: A) => Either<Error, B>`, using `traverse`\n * you can apply `f` to all elements and directly obtain as a result an `Either<Error,Array<B>>`\n * i.e. an `Array<B>` if all the results are `B`, or an `Error` if some of the results\n * are `Error`s.\n *\n * @example\n * import { traverse } from 'fp-ts/Array'\n * import { Applicative, left, right } from \"fp-ts/lib/Either\";\n *\n * const f = (x: unknown) =>\n *   typeof x === \"string\" ? right(x.toUpperCase()) : left(new Error(\"not a string\"));\n * assert.deepStrictEqual(traverse(Applicative)(f)([\"a\", \"b\"]), right([\"A\", \"B\"]));\n * assert.deepStrictEqual(traverse(Applicative)(f)([\"a\", 5]), left(new Error(\"not a string\")));\n *\n * @category Traversable\n * @since 2.6.3\n */\nexport var traverse = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\n/**\n * `sequence` takes an `Array` where elements are `HKT<A>` (higher kinded type) and,\n * using an applicative of that `HKT`, returns an `HKT` of `Array<A>`.\n * E.g. it can turn an `Array<Either<Error, string>>` into an `Either<Error, Array<string>>`.\n *\n * `sequence` requires an `Applicative` of the `HKT` you are targeting, e.g. to turn an\n * `Array<Either<E, A>>` into an `Either<E, Array<A>>`, it needs an\n * `Applicative` for `Either`, to to turn an `Array<Option<A>>` into an `Option<Array<A>>`,\n * it needs an `Applicative` for `Option`.\n *\n * @example\n * import { sequence } from 'fp-ts/Array'\n * import { Applicative, left, right } from \"fp-ts/lib/Either\";\n *\n * assert.deepStrictEqual(sequence(Applicative)([right(\"a\"), right(\"b\")]), right([\"a\", \"b\"]));\n * assert.deepStrictEqual(\n *   sequence(Applicative)([right(\"a\"), left(new Error(\"not a string\"))]),\n *   left(new Error(\"not a string\"))\n * );\n *\n * @category Traversable\n * @since 2.6.3\n */\nexport var sequence = function (F) { return function (ta) {\n    return _reduce(ta, F.of(zero()), function (fas, fa) {\n        return F.ap(F.map(fas, function (as) { return function (a) { return pipe(as, append(a)); }; }), fa);\n    });\n}; };\n/**\n * Same as [`traverse`](#traverse) but passing also the index to the iterating function.\n *\n * @example\n * import { traverseWithIndex } from 'fp-ts/Array'\n * import { Applicative, left, right } from \"fp-ts/lib/Either\";\n *\n * const f = (index:number, x:unknown) =>\n *   typeof x === \"string\" ? right(x.toUpperCase() + index) : left(new Error(\"not a string\"));\n * assert.deepStrictEqual(traverseWithIndex(Applicative)(f)([\"a\", \"b\"]), right([\"A0\", \"B1\"]));\n * assert.deepStrictEqual(traverseWithIndex(Applicative)(f)([\"a\", 5]), left(new Error(\"not a string\")));\n *\n * @category TraversableWithIndex\n * @since 2.6.3\n */\nexport var traverseWithIndex = function (F) { return function (f) {\n    return reduceWithIndex(F.of(zero()), function (i, fbs, a) {\n        return F.ap(F.map(fbs, function (bs) { return function (b) { return pipe(bs, append(b)); }; }), f(i, a));\n    });\n}; };\n/**\n * @category Witherable\n * @since 2.6.5\n */\nexport var wither = function (F) {\n    var _witherF = _wither(F);\n    return function (f) { return function (fa) { return _witherF(fa, f); }; };\n};\n/**\n * @category Witherable\n * @since 2.6.5\n */\nexport var wilt = function (F) {\n    var _wiltF = _wilt(F);\n    return function (f) { return function (fa) { return _wiltF(fa, f); }; };\n};\n/**\n * `unfold` takes a function `f` which returns an `Option` of a tuple containing an outcome\n * value and an input for the following iteration.\n * `unfold` applies `f` to the initial value `b` and then recursively to the second\n * element of the tuple contained in the returned `option` of the previous\n * calculation until `f` returns `Option.none`.\n *\n * @example\n * import { unfold } from 'fp-ts/Array'\n * import { option } from 'fp-ts'\n *\n * const f = (n: number) => {\n *   if (n <= 0) return option.none;\n *   const returnValue = n * 2;\n *   const inputForNextRound = n - 1;\n *   return option.some([returnValue, inputForNextRound] as const);\n * };\n * assert.deepStrictEqual(unfold(5, f), [10, 8, 6, 4, 2]);\n *\n * @category Unfoldable\n * @since 2.6.6\n */\nexport var unfold = function (b, f) {\n    var out = [];\n    var bb = b;\n    while (true) {\n        var mt = f(bb);\n        if (_.isSome(mt)) {\n            var _a = mt.value, a = _a[0], b_1 = _a[1];\n            out.push(a);\n            bb = b_1;\n        }\n        else {\n            break;\n        }\n    }\n    return out;\n};\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var URI = 'Array';\n/**\n * `getShow` makes a `Show` for an `Array<A>` from a `Show` for\n * an `A`.\n *\n * @example\n * import { getShow } from 'fp-ts/Array'\n *\n * const numShow = { show: (n: number) => (n >= 0 ? `${n}` : `(${-n})`) };\n * assert.deepStrictEqual(getShow(numShow).show([-2, -1, 0, 1]), \"[(2), (1), 0, 1]\");\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getShow = RA.getShow;\n/**\n * Get a `Semigroup` based on the concatenation of `Array`s.\n * See also [`getMonoid`](#getMonoid).\n *\n * @example\n * import { getSemigroup } from 'fp-ts/Array'\n *\n * const S = getSemigroup<number>();\n * assert.deepStrictEqual(S.concat([1, 2], [2, 3]), [1, 2, 2, 3]);\n *\n * @category instances\n * @since 2.10.0\n */\nexport var getSemigroup = function () { return ({\n    concat: function (first, second) { return first.concat(second); }\n}); };\n/**\n * Returns a `Monoid` for `Array<A>` based on the concatenation of `Array`s.\n *\n * @example\n * import { getMonoid } from 'fp-ts/Array'\n *\n * const M = getMonoid<number>()\n * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getMonoid = function () { return ({\n    concat: getSemigroup().concat,\n    empty: []\n}); };\n/**\n * Derives an `Eq` over the `Array` of a given element type from the `Eq` of that type. The derived `Eq` defines two\n * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of\n * different lengths, the result is non equality.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { getEq } from 'fp-ts/Array'\n *\n * const E = getEq(S.Eq)\n * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)\n * assert.strictEqual(E.equals(['a'], []), false)\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getEq = RA.getEq;\n/**\n * Derives an `Ord` over the `Array` of a given element type from the `Ord` of that type. The ordering between two such\n * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in\n * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have\n * the same length, the result is equality.\n *\n * @example\n * import { getOrd } from 'fp-ts/Array'\n * import * as S from 'fp-ts/string'\n *\n * const O = getOrd(S.Ord)\n * assert.strictEqual(O.compare(['b'], ['a']), 1)\n * assert.strictEqual(O.compare(['a'], ['a']), 0)\n * assert.strictEqual(O.compare(['a'], ['b']), -1)\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getOrd = RA.getOrd;\n/**\n * Get a `Semigroup` based on the union of the elements of `Array`s.\n * Elements which equal according to the provided `Eq` are included\n * only once in the result.\n * See also [`getUnionMonoid`](#getUnionMonoid).\n *\n * @example\n * import { getUnionSemigroup } from 'fp-ts/Array';\n * import { Eq } from 'fp-ts/number';\n *\n * const S = getUnionSemigroup<number>(Eq);\n * assert.deepStrictEqual(S.concat([1, 2], [2, 3]), [1, 2, 3]);\n *\n * @category instances\n * @since 2.11.0\n */\nexport var getUnionSemigroup = function (E) {\n    var unionE = union(E);\n    return {\n        concat: function (first, second) { return unionE(second)(first); }\n    };\n};\n/**\n * Get a `Monoid` based on the union of the elements of `Array`s.\n * Elements which equal according to the provided `Eq` are included\n * only once in the result.\n *\n * @example\n * import { getUnionMonoid } from 'fp-ts/Array'\n * import { Eq } from 'fp-ts/number';\n *\n * const M = getUnionMonoid<number>(Eq);\n * assert.deepStrictEqual(M.concat([1, 2], [2, 3]), [1, 2, 3]);\n * assert.deepStrictEqual(M.empty,[]);\n *\n * @category instances\n * @since 2.11.0\n */\nexport var getUnionMonoid = function (E) { return ({\n    concat: getUnionSemigroup(E).concat,\n    empty: []\n}); };\n/**\n * Get a `Semigroup` based on the intersection of the elements of `Array`s.\n * Only elements present in the two arrays which are equal according to the\n * provided `Eq` are included in the result.\n *\n * @example\n * import { getIntersectionSemigroup } from 'fp-ts/Array'\n * import { Eq } from 'fp-ts/number';\n *\n * const S = getIntersectionSemigroup<number>(Eq);\n * assert.deepStrictEqual(S.concat([1, 2], [2, 3]), [2]);\n *\n * @category instances\n * @since 2.11.0\n */\nexport var getIntersectionSemigroup = function (E) {\n    var intersectionE = intersection(E);\n    return {\n        concat: function (first, second) { return intersectionE(second)(first); }\n    };\n};\n/**\n * Get a `Magma` for `Array` where the `concat` function is the differnce between\n * the first and the second array, i.e. the result contains all the elements of the\n * first array for which their is no equal element in the second array according\n * to the `Eq` provided.\n *\n *\n * @example\n * import { getDifferenceMagma } from 'fp-ts/Array'\n * import { Eq } from 'fp-ts/number';\n *\n * const S = getDifferenceMagma<number>(Eq);\n * assert.deepStrictEqual(S.concat([1, 2], [2, 3]), [1]);\n *\n * @category instances\n * @since 2.11.0\n */\nexport var getDifferenceMagma = function (E) {\n    var differenceE = difference(E);\n    return {\n        concat: function (first, second) { return differenceE(second)(first); }\n    };\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: _map\n};\n/**\n * Given an input an `Array` of functions, `flap` returns an `Array` containing\n * the results of applying each function to the given input.\n *\n * @example\n * import { flap } from 'fp-ts/Array'\n *\n * const funs = [\n *   (n: number) => `Double: ${n * 2}`,\n *   (n: number) => `Triple: ${n * 3}`,\n *   (n: number) => `Square: ${n * n}`,\n * ];\n * assert.deepStrictEqual(flap(4)(funs), ['Double: 8', 'Triple: 12', 'Square: 16']);\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var flap = \n/*#__PURE__*/\nflap_(Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Pointed = {\n    URI: URI,\n    of: of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FunctorWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Apply = {\n    URI: URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var apFirst = \n/*#__PURE__*/\napFirst_(Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var apSecond = \n/*#__PURE__*/\napSecond_(Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Chain = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var chainFirst = \n/*#__PURE__*/\nchainFirst_(Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Unfoldable = {\n    URI: URI,\n    unfold: unfold\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n    URI: URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var Zero = {\n    URI: URI,\n    zero: zero\n};\n/**\n * @category constructors\n * @since 2.11.0\n */\nexport var guard = \n/*#__PURE__*/\nguard_(Zero, Pointed);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alternative = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    alt: _alt,\n    zero: zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Extend = {\n    URI: URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Compactable = {\n    URI: URI,\n    compact: compact,\n    separate: separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Filterable = {\n    URI: URI,\n    map: _map,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FilterableWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FoldableWithIndex = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n    URI: URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var TraversableWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverse: _traverse,\n    sequence: sequence,\n    traverseWithIndex: _traverseWithIndex\n};\nvar _wither = \n/*#__PURE__*/\nwitherDefault(Traversable, Compactable);\nvar _wilt = \n/*#__PURE__*/\nwiltDefault(Traversable, Compactable);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Witherable = {\n    URI: URI,\n    map: _map,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    wither: _wither,\n    wilt: _wilt\n};\n/**\n * @category ChainRec\n * @since 2.11.0\n */\nexport var chainRecDepthFirst = RA.chainRecDepthFirst;\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var ChainRecDepthFirst = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain,\n    chainRec: _chainRecDepthFirst\n};\n/**\n * @category ChainRec\n * @since 2.11.0\n */\nexport var chainRecBreadthFirst = RA.chainRecBreadthFirst;\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var ChainRecBreadthFirst = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain,\n    chainRec: _chainRecBreadthFirst\n};\n/**\n * Filter values inside a context.\n *\n * @since 2.11.0\n */\nexport var filterE = \n/*#__PURE__*/\nfilterE_(Witherable);\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var FromEither = {\n    URI: URI,\n    fromEither: fromEither\n};\n/**\n * @category combinators\n * @since 2.11.0\n */\nexport var fromEitherK = \n/*#__PURE__*/\nfromEitherK_(FromEither);\n// -------------------------------------------------------------------------------------\n// unsafe\n// -------------------------------------------------------------------------------------\n/**\n * @category unsafe\n * @since 2.0.0\n */\nexport var unsafeInsertAt = NEA.unsafeInsertAt;\n/**\n * @category unsafe\n * @since 2.0.0\n */\nexport var unsafeUpdateAt = function (i, a, as) {\n    return isNonEmpty(as) ? NEA.unsafeUpdateAt(i, a, as) : [];\n};\n/**\n * @category unsafe\n * @since 2.0.0\n */\nexport var unsafeDeleteAt = function (i, as) {\n    var xs = as.slice();\n    xs.splice(i, 1);\n    return xs;\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * `every` tells if the provided predicate holds true for every element in the `Array`.\n *\n * @example\n * import { every } from 'fp-ts/Array'\n *\n * assert.equal(every((x: number) => x >= 0)([1, 2, 3]), true);\n * assert.equal(every((x: number) => x >= 0)([-1, 2, 3]), false);\n *\n * @since 2.9.0\n */\nexport var every = RA.every;\n/**\n * `some` tells if the provided predicate holds true at least for one element in the `Array`.\n *\n * @example\n * import { some } from 'fp-ts/Array'\n *\n * assert.equal(some((x: number) => x >= 0)([1, 2, 3]), true);\n * assert.equal(some((x: number) => x >= 10)([1, 2, 3]), false);\n *\n * @since 2.9.0\n */\nexport var some = function (predicate) { return function (as) { return as.some(predicate); }; };\n/**\n * Alias of [`some`](#some)\n *\n * @since 2.11.0\n */\nexport var exists = some;\n/**\n * Places an element in between members of an `Array`, then folds the results using the provided `Monoid`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { intercalate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(intercalate(S.Monoid)('-')(['a', 'b', 'c']), 'a-b-c')\n *\n * @since 2.12.0\n */\nexport var intercalate = RA.intercalate;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexport var Do = \n/*#__PURE__*/\nof(_.emptyRecord);\n/**\n * @since 2.8.0\n */\nexport var bindTo = \n/*#__PURE__*/\nbindTo_(Functor);\n/**\n * @since 2.8.0\n */\nexport var bind = \n/*#__PURE__*/\nbind_(Chain);\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexport var apS = \n/*#__PURE__*/\napS_(Apply);\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n// tslint:disable: deprecation\n/**\n * Use `NonEmptyArray` module instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nexport var range = NEA.range;\n/**\n * Use a new `[]` instead.\n *\n * @since 2.0.0\n * @deprecated\n */\nexport var empty = [];\n/**\n * Use `prepend` instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nexport var cons = NEA.cons;\n/**\n * Use `append` instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nexport var snoc = NEA.snoc;\n/**\n * Use `prependAll` instead\n *\n * @category combinators\n * @since 2.9.0\n * @deprecated\n */\nexport var prependToAll = prependAll;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var array = {\n    URI: URI,\n    compact: compact,\n    separate: separate,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    mapWithIndex: _mapWithIndex,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex,\n    alt: _alt,\n    zero: zero,\n    unfold: unfold,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    extend: _extend,\n    wither: _wither,\n    wilt: _wilt\n};\n","/**\n * ```ts\n * interface IO<A> {\n *   (): A\n * }\n * ```\n *\n * `IO<A>` represents a non-deterministic synchronous computation that can cause side effects, yields a value of\n * type `A` and **never fails**. If you want to represent a synchronous computation that may fail, please see\n * `IOEither`.\n *\n * @since 2.0.0\n */\nimport { getApplicativeMonoid } from './Applicative';\nimport { apFirst as apFirst_, apS as apS_, apSecond as apSecond_, getApplySemigroup } from './Apply';\nimport { bind as bind_, chainFirst as chainFirst_ } from './Chain';\nimport { constant, identity } from './function';\nimport { bindTo as bindTo_, flap as flap_ } from './Functor';\nimport * as _ from './internal';\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (ma, f) { return function () { return f(ma()); }; };\nvar _ap = function (mab, ma) { return function () { return mab()(ma()); }; };\nvar _chain = function (ma, f) { return function () { return f(ma())(); }; };\nvar _chainRec = function (a, f) { return function () {\n    var e = f(a)();\n    while (e._tag === 'Left') {\n        e = f(e.left)();\n    }\n    return e.right;\n}; };\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\nexport var map = function (f) { return function (fa) { return _map(fa, f); }; };\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.0.0\n */\nexport var ap = function (fa) { return function (fab) { return _ap(fab, fa); }; };\n/**\n * @category Pointed\n * @since 2.0.0\n */\nexport var of = constant;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.0.0\n */\nexport var chain = function (f) { return function (ma) { return _chain(ma, f); }; };\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var flatten = \n/*#__PURE__*/\nchain(identity);\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var URI = 'IO';\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var flap = \n/*#__PURE__*/\nflap_(Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Pointed = {\n    URI: URI,\n    of: of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Apply = {\n    URI: URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var apFirst = \n/*#__PURE__*/\napFirst_(Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var apSecond = \n/*#__PURE__*/\napSecond_(Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Chain = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var chainFirst = \n/*#__PURE__*/\nchainFirst_(Chain);\n/**\n * @category constructors\n * @since 2.7.0\n * @deprecated\n */\nexport var fromIO = identity;\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var MonadIO = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain,\n    fromIO: fromIO\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var ChainRec = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain,\n    chainRec: _chainRec\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var FromIO = {\n    URI: URI,\n    fromIO: identity\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexport var Do = \n/*#__PURE__*/\nof(_.emptyRecord);\n/**\n * @since 2.8.0\n */\nexport var bindTo = \n/*#__PURE__*/\nbindTo_(Functor);\n/**\n * @since 2.8.0\n */\nexport var bind = \n/*#__PURE__*/\nbind_(Chain);\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexport var apS = \n/*#__PURE__*/\napS_(Apply);\n// -------------------------------------------------------------------------------------\n// sequence T\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nexport var ApT = \n/*#__PURE__*/\nof(_.emptyReadonlyArray);\n// -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n/**\n * Equivalent to `ReadonlyNonEmptyArray#traverseWithIndex(Applicative)`.\n *\n * @since 2.11.0\n */\nexport var traverseReadonlyNonEmptyArrayWithIndex = function (f) { return function (as) { return function () {\n    var out = [f(0, _.head(as))()];\n    for (var i = 1; i < as.length; i++) {\n        out.push(f(i, as[i])());\n    }\n    return out;\n}; }; };\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @since 2.11.0\n */\nexport var traverseReadonlyArrayWithIndex = function (f) {\n    var g = traverseReadonlyNonEmptyArrayWithIndex(f);\n    return function (as) { return (_.isNonEmpty(as) ? g(as) : ApT); };\n};\n/**\n * @since 2.9.0\n */\nexport var traverseArrayWithIndex = traverseReadonlyArrayWithIndex;\n/**\n * @since 2.9.0\n */\nexport var traverseArray = function (f) {\n    return traverseReadonlyArrayWithIndex(function (_, a) { return f(a); });\n};\n/**\n * @since 2.9.0\n */\nexport var sequenceArray = \n/*#__PURE__*/\ntraverseArray(identity);\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n// tslint:disable: deprecation\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var io = {\n    URI: URI,\n    map: _map,\n    of: of,\n    ap: _ap,\n    chain: _chain,\n    fromIO: fromIO,\n    chainRec: _chainRec\n};\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getapplysemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var getSemigroup = \n/*#__PURE__*/\ngetApplySemigroup(Apply);\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getapplicativemonoid) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var getMonoid = \n/*#__PURE__*/\ngetApplicativeMonoid(Applicative);\n","/**\n * @since 2.0.0\n */\nimport { map } from './IO';\nimport { pipe } from './function';\n/**\n * Returns a random number between 0 (inclusive) and 1 (exclusive). This is a direct wrapper around JavaScript's\n * `Math.random()`.\n *\n * @since 2.0.0\n */\nexport var random = function () { return Math.random(); };\n/**\n * Takes a range specified by `low` (the first argument) and `high` (the second), and returns a random integer uniformly\n * distributed in the closed interval `[low, high]`. It is unspecified what happens if `low > high`, or if either of\n * `low` or `high` is not an integer.\n *\n * @since 2.0.0\n */\nexport function randomInt(low, high) {\n    return pipe(random, map(function (n) { return Math.floor((high - low + 1) * n + low); }));\n}\n/**\n * Returns a random number between a minimum value (inclusive) and a maximum value (exclusive). It is unspecified what\n * happens if `maximum < minimum`.\n *\n * @since 2.0.0\n */\nexport function randomRange(min, max) {\n    return pipe(random, map(function (n) { return (max - min) * n + min; }));\n}\n/**\n * Returns a random boolean value with an equal chance of being `true` or `false`\n *\n * @since 2.0.0\n */\nexport var randomBool = \n/*#__PURE__*/\npipe(random, map(function (n) { return n < 0.5; }));\n/**\n * Returns a random element of a `ReadonlyNonEmptyArray`.\n *\n * @since 2.10.0\n */\nexport var randomElem = function (as) {\n    return pipe(randomInt(0, as.length - 1), map(function (i) { return as[i]; }));\n};\n","import { constFalse, constTrue, flow, pipe } from './function';\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\nvar contramap_ = function (predicate, f) { return pipe(predicate, contramap(f)); };\n/**\n * @category Contravariant\n * @since 2.11.0\n */\nexport var contramap = function (f) { return function (predicate) { return flow(f, predicate); }; };\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var URI = 'Predicate';\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var getSemigroupAny = function () { return ({\n    concat: function (first, second) { return pipe(first, or(second)); }\n}); };\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var getMonoidAny = function () { return ({\n    concat: getSemigroupAny().concat,\n    empty: constFalse\n}); };\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var getSemigroupAll = function () { return ({\n    concat: function (first, second) { return pipe(first, and(second)); }\n}); };\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var getMonoidAll = function () { return ({\n    concat: getSemigroupAll().concat,\n    empty: constTrue\n}); };\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var Contravariant = {\n    URI: URI,\n    contramap: contramap_\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nexport var not = function (predicate) { return function (a) { return !predicate(a); }; };\n/**\n * @since 2.11.0\n */\nexport var or = function (second) { return function (first) { return function (a) { return first(a) || second(a); }; }; };\n/**\n * @since 2.11.0\n */\nexport var and = function (second) { return function (first) { return function (a) { return first(a) && second(a); }; }; };\n","import { getApplicativeMonoid } from './Applicative';\nimport { apFirst as apFirst_, apS as apS_, apSecond as apSecond_, getApplySemigroup as getApplySemigroup_ } from './Apply';\nimport { bind as bind_, chainFirst as chainFirst_ } from './Chain';\nimport { chainEitherK as chainEitherK_, fromEitherK as fromEitherK_, chainFirstEitherK as chainFirstEitherK_ } from './FromEither';\nimport { constNull, constUndefined, flow, identity, pipe } from './function';\nimport { bindTo as bindTo_, flap as flap_ } from './Functor';\nimport * as _ from './internal';\nimport { not } from './Predicate';\nimport { first, last } from './Semigroup';\nimport { separated } from './Separated';\nimport { wiltDefault, witherDefault } from './Witherable';\nimport { guard as guard_ } from './Zero';\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * `None` doesn't have a constructor, instead you can use it directly as a value. Represents a missing value.\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var none = _.none;\n/**\n * Constructs a `Some`. Represents an optional value that exists.\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var some = _.some;\nexport function fromPredicate(predicate) {\n    return function (a) { return (predicate(a) ? some(a) : none); };\n}\n/**\n * Returns the `Left` value of an `Either` if possible.\n *\n * @example\n * import { getLeft, none, some } from 'fp-ts/Option'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(getLeft(right(1)), none)\n * assert.deepStrictEqual(getLeft(left('a')), some('a'))\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var getLeft = function (ma) { return (ma._tag === 'Right' ? none : some(ma.left)); };\n/**\n * Returns the `Right` value of an `Either` if possible.\n *\n * @example\n * import { getRight, none, some } from 'fp-ts/Option'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(getRight(right(1)), some(1))\n * assert.deepStrictEqual(getRight(left('a')), none)\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var getRight = function (ma) { return (ma._tag === 'Left' ? none : some(ma.right)); };\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return pipe(fa, map(f)); };\nvar _ap = function (fab, fa) { return pipe(fab, ap(fa)); };\nvar _chain = function (ma, f) { return pipe(ma, chain(f)); };\nvar _reduce = function (fa, b, f) { return pipe(fa, reduce(b, f)); };\nvar _foldMap = function (M) {\n    var foldMapM = foldMap(M);\n    return function (fa, f) { return pipe(fa, foldMapM(f)); };\n};\nvar _reduceRight = function (fa, b, f) { return pipe(fa, reduceRight(b, f)); };\nvar _traverse = function (F) {\n    var traverseF = traverse(F);\n    return function (ta, f) { return pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return pipe(fa, alt(that)); };\nvar _filter = function (fa, predicate) { return pipe(fa, filter(predicate)); };\n/* istanbul ignore next */\nvar _filterMap = function (fa, f) { return pipe(fa, filterMap(f)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return pipe(wa, extend(f)); };\n/* istanbul ignore next */\nvar _partition = function (fa, predicate) {\n    return pipe(fa, partition(predicate));\n};\n/* istanbul ignore next */\nvar _partitionMap = function (fa, f) { return pipe(fa, partitionMap(f)); };\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var URI = 'Option';\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var getShow = function (S) { return ({\n    show: function (ma) { return (isNone(ma) ? 'none' : \"some(\" + S.show(ma.value) + \")\"); }\n}); };\n/**\n * @example\n * import { none, some, getEq } from 'fp-ts/Option'\n * import * as N from 'fp-ts/number'\n *\n * const E = getEq(N.Eq)\n * assert.strictEqual(E.equals(none, none), true)\n * assert.strictEqual(E.equals(none, some(1)), false)\n * assert.strictEqual(E.equals(some(1), none), false)\n * assert.strictEqual(E.equals(some(1), some(2)), false)\n * assert.strictEqual(E.equals(some(1), some(1)), true)\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getEq = function (E) { return ({\n    equals: function (x, y) { return x === y || (isNone(x) ? isNone(y) : isNone(y) ? false : E.equals(x.value, y.value)); }\n}); };\n/**\n * The `Ord` instance allows `Option` values to be compared with\n * `compare`, whenever there is an `Ord` instance for\n * the type the `Option` contains.\n *\n * `None` is considered to be less than any `Some` value.\n *\n *\n * @example\n * import { none, some, getOrd } from 'fp-ts/Option'\n * import * as N from 'fp-ts/number'\n *\n * const O = getOrd(N.Ord)\n * assert.strictEqual(O.compare(none, none), 0)\n * assert.strictEqual(O.compare(none, some(1)), -1)\n * assert.strictEqual(O.compare(some(1), none), 1)\n * assert.strictEqual(O.compare(some(1), some(2)), -1)\n * assert.strictEqual(O.compare(some(1), some(1)), 0)\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getOrd = function (O) { return ({\n    equals: getEq(O).equals,\n    compare: function (x, y) { return (x === y ? 0 : isSome(x) ? (isSome(y) ? O.compare(x.value, y.value) : 1) : -1); }\n}); };\n/**\n * Monoid returning the left-most non-`None` value. If both operands are `Some`s then the inner values are\n * concatenated using the provided `Semigroup`\n *\n * | x       | y       | concat(x, y)       |\n * | ------- | ------- | ------------------ |\n * | none    | none    | none               |\n * | some(a) | none    | some(a)            |\n * | none    | some(b) | some(b)            |\n * | some(a) | some(b) | some(concat(a, b)) |\n *\n * @example\n * import { getMonoid, some, none } from 'fp-ts/Option'\n * import { SemigroupSum } from 'fp-ts/number'\n *\n * const M = getMonoid(SemigroupSum)\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(1)), some(1))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(3))\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getMonoid = function (S) { return ({\n    concat: function (x, y) { return (isNone(x) ? y : isNone(y) ? x : some(S.concat(x.value, y.value))); },\n    empty: none\n}); };\n/**\n * @category instance operations\n * @since 2.0.0\n */\nexport var map = function (f) { return function (fa) {\n    return isNone(fa) ? none : some(f(fa.value));\n}; };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: _map\n};\n/**\n * @category instance operations\n * @since 2.7.0\n */\nexport var of = some;\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Pointed = {\n    URI: URI,\n    of: of\n};\n/**\n * @category instance operations\n * @since 2.0.0\n */\nexport var ap = function (fa) { return function (fab) {\n    return isNone(fab) ? none : isNone(fa) ? none : some(fab.value(fa.value));\n}; };\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Apply = {\n    URI: URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category instance operations\n * @since 2.0.0\n */\nexport var chain = function (f) { return function (ma) {\n    return isNone(ma) ? none : f(ma.value);\n}; };\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Chain = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain\n};\n/**\n * @category instance operations\n * @since 2.0.0\n */\nexport var reduce = function (b, f) { return function (fa) {\n    return isNone(fa) ? b : f(b, fa.value);\n}; };\n/**\n * @category instance operations\n * @since 2.0.0\n */\nexport var foldMap = function (M) { return function (f) { return function (fa) {\n    return isNone(fa) ? M.empty : f(fa.value);\n}; }; };\n/**\n * @category instance operations\n * @since 2.0.0\n */\nexport var reduceRight = function (b, f) { return function (fa) {\n    return isNone(fa) ? b : f(fa.value, b);\n}; };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category instance operations\n * @since 2.9.0\n */\nexport var altW = function (that) { return function (fa) {\n    return isNone(fa) ? that() : fa;\n}; };\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `Option` returns the left-most non-`None` value.\n *\n * @example\n * import * as O from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     O.some('a'),\n *     O.alt(() => O.some('b'))\n *   ),\n *   O.some('a')\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     O.none,\n *     O.alt(() => O.some('b'))\n *   ),\n *   O.some('b')\n * )\n *\n * @category instance operations\n * @since 2.0.0\n */\nexport var alt = altW;\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n    URI: URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instance operations\n * @since 2.7.0\n */\nexport var zero = function () { return none; };\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var Zero = {\n    URI: URI,\n    zero: zero\n};\n/**\n * @category constructors\n * @since 2.11.0\n */\nexport var guard = \n/*#__PURE__*/\nguard_(Zero, Pointed);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alternative = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    alt: _alt,\n    zero: zero\n};\n/**\n * @category instance operations\n * @since 2.0.0\n */\nexport var extend = function (f) { return function (wa) {\n    return isNone(wa) ? none : some(f(wa));\n}; };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Extend = {\n    URI: URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category instance operations\n * @since 2.0.0\n */\nexport var compact = \n/*#__PURE__*/\nchain(identity);\nvar defaultSeparated = \n/*#__PURE__*/\nseparated(none, none);\n/**\n * @category instance operations\n * @since 2.0.0\n */\nexport var separate = function (ma) {\n    return isNone(ma) ? defaultSeparated : separated(getLeft(ma.value), getRight(ma.value));\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Compactable = {\n    URI: URI,\n    compact: compact,\n    separate: separate\n};\n/**\n * @category instance operations\n * @since 2.0.0\n */\nexport var filter = function (predicate) { return function (fa) { return (isNone(fa) ? none : predicate(fa.value) ? fa : none); }; };\n/**\n * @category instance operations\n * @since 2.0.0\n */\nexport var filterMap = function (f) { return function (fa) {\n    return isNone(fa) ? none : f(fa.value);\n}; };\n/**\n * @category instance operations\n * @since 2.0.0\n */\nexport var partition = function (predicate) { return function (fa) { return separated(_filter(fa, not(predicate)), _filter(fa, predicate)); }; };\n/**\n * @category instance operations\n * @since 2.0.0\n */\nexport var partitionMap = function (f) { return flow(map(f), separate); };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Filterable = {\n    URI: URI,\n    map: _map,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap\n};\n/**\n * @category instance operations\n * @since 2.6.3\n */\nexport var traverse = function (F) { return function (f) { return function (ta) { return (isNone(ta) ? F.of(none) : F.map(f(ta.value), some)); }; }; };\n/**\n * @category instance operations\n * @since 2.6.3\n */\nexport var sequence = function (F) { return function (ta) { return (isNone(ta) ? F.of(none) : F.map(ta.value, some)); }; };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n    URI: URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence\n};\nvar _wither = \n/*#__PURE__*/\nwitherDefault(Traversable, Compactable);\nvar _wilt = \n/*#__PURE__*/\nwiltDefault(Traversable, Compactable);\n/**\n * @category instance operations\n * @since 2.6.5\n */\nexport var wither = function (F) {\n    var _witherF = _wither(F);\n    return function (f) { return function (fa) { return _witherF(fa, f); }; };\n};\n/**\n * @category instance operations\n * @since 2.6.5\n */\nexport var wilt = function (F) {\n    var _wiltF = _wilt(F);\n    return function (f) { return function (fa) { return _wiltF(fa, f); }; };\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Witherable = {\n    URI: URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    wither: _wither,\n    wilt: _wilt\n};\n/**\n * @category instance operations\n * @since 2.7.0\n */\nexport var throwError = function () { return none; };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var MonadThrow = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain,\n    throwError: throwError\n};\n/**\n * Transforms an `Either` to an `Option` discarding the error.\n *\n * Alias of [getRight](#getright)\n *\n * @category natural transformations\n * @since 2.0.0\n */\nexport var fromEither = getRight;\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var FromEither = {\n    URI: URI,\n    fromEither: fromEither\n};\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * Returns `true` if the option is an instance of `Some`, `false` otherwise.\n *\n * @example\n * import { some, none, isSome } from 'fp-ts/Option'\n *\n * assert.strictEqual(isSome(some(1)), true)\n * assert.strictEqual(isSome(none), false)\n *\n * @category refinements\n * @since 2.0.0\n */\nexport var isSome = _.isSome;\n/**\n * Returns `true` if the option is `None`, `false` otherwise.\n *\n * @example\n * import { some, none, isNone } from 'fp-ts/Option'\n *\n * assert.strictEqual(isNone(some(1)), false)\n * assert.strictEqual(isNone(none), true)\n *\n * @category refinements\n * @since 2.0.0\n */\nexport var isNone = function (fa) { return fa._tag === 'None'; };\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * Less strict version of [`match`](#match).\n *\n * @category destructors\n * @since 2.10.0\n */\nexport var matchW = function (onNone, onSome) { return function (ma) {\n    return isNone(ma) ? onNone() : onSome(ma.value);\n}; };\n/**\n * Alias of [`matchW`](#matchw).\n *\n * @category destructors\n * @since 2.10.0\n */\nexport var foldW = matchW;\n/**\n * Takes a (lazy) default value, a function, and an `Option` value, if the `Option` value is `None` the default value is\n * returned, otherwise the function is applied to the value inside the `Some` and the result is returned.\n *\n * @example\n * import { some, none, match } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     match(() => 'a none', a => `a some containing ${a}`)\n *   ),\n *   'a some containing 1'\n * )\n *\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     match(() => 'a none', a => `a some containing ${a}`)\n *   ),\n *   'a none'\n * )\n *\n * @category destructors\n * @since 2.10.0\n */\nexport var match = matchW;\n/**\n * Alias of [`match`](#match).\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var fold = match;\n/**\n * Less strict version of [`getOrElse`](#getorelse).\n *\n * @category destructors\n * @since 2.6.0\n */\nexport var getOrElseW = function (onNone) { return function (ma) { return (isNone(ma) ? onNone() : ma.value); }; };\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns the given default value\n *\n * @example\n * import { some, none, getOrElse } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     getOrElse(() => 0)\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     getOrElse(() => 0)\n *   ),\n *   0\n * )\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var getOrElse = getOrElseW;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var flap = \n/*#__PURE__*/\nflap_(Functor);\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var apFirst = \n/*#__PURE__*/\napFirst_(Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var apSecond = \n/*#__PURE__*/\napSecond_(Apply);\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var flatten = compact;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var chainFirst = \n/*#__PURE__*/\nchainFirst_(Chain);\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var duplicate = \n/*#__PURE__*/\nextend(identity);\n/**\n * @category combinators\n * @since 2.11.0\n */\nexport var fromEitherK = \n/*#__PURE__*/\nfromEitherK_(FromEither);\n/**\n * @category combinators\n * @since 2.11.0\n */\nexport var chainEitherK = \n/*#__PURE__*/\nchainEitherK_(FromEither, Chain);\n/**\n * @category combinators\n * @since 2.12.0\n */\nexport var chainFirstEitherK = \n/*#__PURE__*/\nchainFirstEitherK_(FromEither, Chain);\n// -------------------------------------------------------------------------------------\n// interop\n// -------------------------------------------------------------------------------------\n/**\n * Constructs a new `Option` from a nullable type. If the value is `null` or `undefined`, returns `None`, otherwise\n * returns the value wrapped in a `Some`.\n *\n * @example\n * import { none, some, fromNullable } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(fromNullable(undefined), none)\n * assert.deepStrictEqual(fromNullable(null), none)\n * assert.deepStrictEqual(fromNullable(1), some(1))\n *\n * @category interop\n * @since 2.0.0\n */\nexport var fromNullable = function (a) { return (a == null ? none : some(a)); };\n/**\n * Transforms an exception into an `Option`. If `f` throws, returns `None`, otherwise returns the output wrapped in a\n * `Some`.\n *\n * See also [`tryCatchK`](#trycatchk).\n *\n * @example\n * import { none, some, tryCatch } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   tryCatch(() => {\n *     throw new Error()\n *   }),\n *   none\n * )\n * assert.deepStrictEqual(tryCatch(() => 1), some(1))\n *\n * @category interop\n * @since 2.0.0\n */\nexport var tryCatch = function (f) {\n    try {\n        return some(f());\n    }\n    catch (e) {\n        return none;\n    }\n};\n/**\n * Converts a function that may throw to one returning a `Option`.\n *\n * @category interop\n * @since 2.10.0\n */\nexport var tryCatchK = function (f) { return function () {\n    var a = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        a[_i] = arguments[_i];\n    }\n    return tryCatch(function () { return f.apply(void 0, a); });\n}; };\n/**\n * Returns a *smart constructor* from a function that returns a nullable value.\n *\n * @example\n * import { fromNullableK, none, some } from 'fp-ts/Option'\n *\n * const f = (s: string): number | undefined => {\n *   const n = parseFloat(s)\n *   return isNaN(n) ? undefined : n\n * }\n *\n * const g = fromNullableK(f)\n *\n * assert.deepStrictEqual(g('1'), some(1))\n * assert.deepStrictEqual(g('a'), none)\n *\n * @category interop\n * @since 2.9.0\n */\nexport var fromNullableK = function (f) { return flow(f, fromNullable); };\n/**\n * This is `chain` + `fromNullable`, useful when working with optional values.\n *\n * @example\n * import { some, none, fromNullable, chainNullableK } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Employee {\n *   readonly company?: {\n *     readonly address?: {\n *       readonly street?: {\n *         readonly name?: string\n *       }\n *     }\n *   }\n * }\n *\n * const employee1: Employee = { company: { address: { street: { name: 'high street' } } } }\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     fromNullable(employee1.company),\n *     chainNullableK(company => company.address),\n *     chainNullableK(address => address.street),\n *     chainNullableK(street => street.name)\n *   ),\n *   some('high street')\n * )\n *\n * const employee2: Employee = { company: { address: { street: {} } } }\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     fromNullable(employee2.company),\n *     chainNullableK(company => company.address),\n *     chainNullableK(address => address.street),\n *     chainNullableK(street => street.name)\n *   ),\n *   none\n * )\n *\n * @category interop\n * @since 2.9.0\n */\nexport var chainNullableK = function (f) { return function (ma) {\n    return isNone(ma) ? none : fromNullable(f(ma.value));\n}; };\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns `null`.\n *\n * @example\n * import { some, none, toNullable } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     toNullable\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     toNullable\n *   ),\n *   null\n * )\n *\n * @category interop\n * @since 2.0.0\n */\nexport var toNullable = \n/*#__PURE__*/\nmatch(constNull, identity);\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns `undefined`.\n *\n * @example\n * import { some, none, toUndefined } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     toUndefined\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     toUndefined\n *   ),\n *   undefined\n * )\n *\n * @category interop\n * @since 2.0.0\n */\nexport var toUndefined = \n/*#__PURE__*/\nmatch(constUndefined, identity);\nexport function elem(E) {\n    return function (a, ma) {\n        if (ma === undefined) {\n            var elemE_1 = elem(E);\n            return function (ma) { return elemE_1(a, ma); };\n        }\n        return isNone(ma) ? false : E.equals(a, ma.value);\n    };\n}\n/**\n * Returns `true` if the predicate is satisfied by the wrapped value\n *\n * @example\n * import { some, none, exists } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     exists(n => n > 0)\n *   ),\n *   true\n * )\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     exists(n => n > 1)\n *   ),\n *   false\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     exists(n => n > 0)\n *   ),\n *   false\n * )\n *\n * @since 2.0.0\n */\nexport var exists = function (predicate) { return function (ma) {\n    return isNone(ma) ? false : predicate(ma.value);\n}; };\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexport var Do = \n/*#__PURE__*/\nof(_.emptyRecord);\n/**\n * @since 2.8.0\n */\nexport var bindTo = \n/*#__PURE__*/\nbindTo_(Functor);\n/**\n * @since 2.8.0\n */\nexport var bind = \n/*#__PURE__*/\nbind_(Chain);\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexport var apS = \n/*#__PURE__*/\napS_(Apply);\n// -------------------------------------------------------------------------------------\n// sequence T\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nexport var ApT = \n/*#__PURE__*/\nof(_.emptyReadonlyArray);\n// -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n/**\n * Equivalent to `ReadonlyNonEmptyArray#traverseWithIndex(Applicative)`.\n *\n * @since 2.11.0\n */\nexport var traverseReadonlyNonEmptyArrayWithIndex = function (f) { return function (as) {\n    var o = f(0, _.head(as));\n    if (isNone(o)) {\n        return none;\n    }\n    var out = [o.value];\n    for (var i = 1; i < as.length; i++) {\n        var o_1 = f(i, as[i]);\n        if (isNone(o_1)) {\n            return none;\n        }\n        out.push(o_1.value);\n    }\n    return some(out);\n}; };\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @since 2.11.0\n */\nexport var traverseReadonlyArrayWithIndex = function (f) {\n    var g = traverseReadonlyNonEmptyArrayWithIndex(f);\n    return function (as) { return (_.isNonEmpty(as) ? g(as) : ApT); };\n};\n/**\n * @since 2.9.0\n */\nexport var traverseArrayWithIndex = traverseReadonlyArrayWithIndex;\n/**\n * @since 2.9.0\n */\nexport var traverseArray = function (f) {\n    return traverseReadonlyArrayWithIndex(function (_, a) { return f(a); });\n};\n/**\n * @since 2.9.0\n */\nexport var sequenceArray = \n/*#__PURE__*/\ntraverseArray(identity);\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n// tslint:disable: deprecation\n/**\n * Use `Refinement` module instead.\n *\n * @since 2.0.0\n * @deprecated\n */\nexport function getRefinement(getOption) {\n    return function (a) { return isSome(getOption(a)); };\n}\n/**\n * Use [`chainNullableK`](#chainnullablek) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexport var mapNullable = chainNullableK;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var option = {\n    URI: URI,\n    map: _map,\n    of: of,\n    ap: _ap,\n    chain: _chain,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    zero: zero,\n    alt: _alt,\n    extend: _extend,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    wither: _wither,\n    wilt: _wilt,\n    throwError: throwError\n};\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getapplysemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var getApplySemigroup = \n/*#__PURE__*/\ngetApplySemigroup_(Apply);\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getapplicativemonoid) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var getApplyMonoid = \n/*#__PURE__*/\ngetApplicativeMonoid(Applicative);\n/**\n * Use\n *\n * ```ts\n * import { first } from 'fp-ts/Semigroup'\n * import { getMonoid } from 'fp-ts/Option'\n *\n * getMonoid(first())\n * ```\n *\n * instead.\n *\n * Monoid returning the left-most non-`None` value\n *\n * | x       | y       | concat(x, y) |\n * | ------- | ------- | ------------ |\n * | none    | none    | none         |\n * | some(a) | none    | some(a)      |\n * | none    | some(b) | some(b)      |\n * | some(a) | some(b) | some(a)      |\n *\n * @example\n * import { getFirstMonoid, some, none } from 'fp-ts/Option'\n *\n * const M = getFirstMonoid<number>()\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(2)), some(2))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(1))\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var getFirstMonoid = function () { return getMonoid(first()); };\n/**\n * Use\n *\n * ```ts\n * import { last } from 'fp-ts/Semigroup'\n * import { getMonoid } from 'fp-ts/Option'\n *\n * getMonoid(last())\n * ```\n *\n * instead.\n *\n * Monoid returning the right-most non-`None` value\n *\n * | x       | y       | concat(x, y) |\n * | ------- | ------- | ------------ |\n * | none    | none    | none         |\n * | some(a) | none    | some(a)      |\n * | none    | some(b) | some(b)      |\n * | some(a) | some(b) | some(b)      |\n *\n * @example\n * import { getLastMonoid, some, none } from 'fp-ts/Option'\n *\n * const M = getLastMonoid<number>()\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(2)), some(2))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(2))\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var getLastMonoid = function () { return getMonoid(last()); };\n","import * as E from \"fp-ts/Either\";\nimport * as A from \"fp-ts/Array\";\nimport * as R from \"fp-ts/Random\";\nimport * as O from \"fp-ts/Option\";\nimport { pipe, tuple } from \"fp-ts/function\";\n\ntype Cell = E.Either<\"dead\", \"alive\">;\ntype Coordinates = { x: number; y: number };\ntype World = Cell[][];\n\nconst canvas = document.querySelector<HTMLCanvasElement>(\"#gameOfLife\")!;\nconst winWidth = window.innerWidth;\nconst winHeight = window.innerHeight;\ncanvas.width = winWidth;\ncanvas.height = winHeight;\n\nconst context = canvas.getContext(\"2d\")!;\ncontext.fillRect(0, 0, canvas.width, canvas.height);\ncontext.fillStyle = \"#038C3E\";\n\nconst CELL_SIZE = 10;\nconst cellsX = Math.floor(winWidth / CELL_SIZE);\nconst cellsY = Math.floor(winHeight / CELL_SIZE);\n\nconst dead: Cell = E.left(\"dead\");\nconst alive: Cell = E.right(\"alive\");\n\nconst generateArray = (max: number) =>\n  A.unfold(0, (n: number) => (n < max ? O.some([n, n + 1]) : O.none));\n\nfunction generateWorld(sizeX: number, sizeY: number, random = false): World {\n  // const res: World = [];\n  //\n  // for (let i = 0; i < sizeX; i++) {\n  //   const col: Cell[] = [];\n  //\n  //   for (let j = 0; j < sizeY; j++) {\n  //     col.push(random ? pipe(R.randomBool(), (r) => (r ? alive : dead)) : dead);\n  //   }\n  //\n  //   res.push(col);\n  // }\n  //\n  // return res;\n\n  const xs = generateArray(sizeX);\n  const ys = generateArray(sizeY);\n  // return pipe(\n  //   xs,\n  //   A.map(() =>\n  //     pipe(\n  //       ys,\n  //       A.map(() => (random ? pipe(R.randomBool(), (r) => (r ? alive : dead)) : dead))\n  //     )\n  //   )\n  // );\n  const generateCell = () =>\n    random ? pipe(R.randomBool(), (r) => (r ? alive : dead)) : dead;\n\n  return A.comprehension([xs], () => pipe(ys, A.map(generateCell)));\n}\n\nconst iterateWorld = (world: World) =>\n  pipe(\n    world,\n    A.chainWithIndex((x, c) =>\n      pipe(\n        c,\n        A.mapWithIndex((y, cell) => ({\n          x,\n          y,\n          cell\n        }))\n      )\n    )\n  );\n\nconst findCell =\n  (world: World) =>\n  (coords: Coordinates): O.Option<Cell> => {\n    return pipe(\n      world,\n      A.lookup(coords.x),\n      O.chain((col) => pipe(col, A.lookup(coords.y)))\n    );\n  };\n\nconst findNeighbors =\n  (world: World) =>\n  (coords: Coordinates): Cell[] =>\n    pipe(\n      A.comprehension(\n        [\n          [-1, 0, 1],\n          [-1, 0, 1]\n        ],\n\n        tuple\n      ),\n      A.filter(([x, y]) => !(x === 0 && y === 0)),\n      A.map(([xCurrent, yCurrent]) =>\n        findCell(world)({ x: xCurrent + coords.x, y: yCurrent + coords.y })\n      ),\n      A.compact\n    );\n\nconst flattenTwo = <L, R>(\n  e: E.Either<E.Either<L, R>, E.Either<L, R>>\n): E.Either<L, R> => (E.isLeft(e) ? e.left : e.right);\n\nfunction createNewGeneration(world: World): World {\n  const res: World = generateWorld(world.length, world[0].length);\n\n  pipe(\n    iterateWorld(world),\n    A.map(({ x, y, cell }) => {\n      const liveNeighbors: Cell[] = pipe(\n        findNeighbors(world)({ x, y }),\n        A.filter(E.isRight)\n      );\n\n      res[x][y] = pipe(\n        cell,\n        E.bimap(\n          () => (liveNeighbors.length === 3 ? alive : dead),\n          () =>\n            liveNeighbors.length === 2 || liveNeighbors.length === 3\n              ? alive\n              : dead\n        ),\n        //распрямляем эйзэры\n        flattenTwo\n      );\n    })\n  );\n\n  return res;\n}\n\nconst drawCell =\n  ({ x, y }: Coordinates) =>\n  (cell: Cell) => {\n    pipe(\n      cell,\n      E.fold(\n        () =>\n          context.clearRect(x * CELL_SIZE, y * CELL_SIZE, CELL_SIZE, CELL_SIZE),\n        () =>\n          context.fillRect(x * CELL_SIZE, y * CELL_SIZE, CELL_SIZE, CELL_SIZE)\n      )\n    );\n  };\n\nfunction drawWorld(world: World): void {\n  pipe(\n    iterateWorld(world),\n    // for (let i = 0; i < world.length; i++) {\n    //   for (let j = 0; j < world[i].length; j++) {\n    //     drawCell({ x: i, y: j })(world[i][j]);\n    //   }\n    // }\n    A.map(({ x, y, cell }) => drawCell({ x, y })(cell))\n  );\n}\n\nlet world: World = generateWorld(cellsX, cellsY, true);\n\nlet gameTimeout;\nlet generations = 0;\nconst stat = document.querySelector<HTMLDivElement>(\"#generationsCounter\");\n\nconst gameLoop = (world: World, speed = 1) => {\n  gameTimeout && clearTimeout(gameTimeout);\n\n  const newGeneration = createNewGeneration(world);\n  drawWorld(newGeneration);\n  generations++;\n  stat!.innerHTML = String(generations);\n\n  gameTimeout = setTimeout(() => gameLoop(newGeneration), speed);\n};\n\ngameLoop(world);\n\nconst button = document.querySelector<HTMLButtonElement>(\"#restart\");\nbutton?.addEventListener(\"click\", () => {\n  generations = 0;\n  gameLoop(world);\n});\n"]}